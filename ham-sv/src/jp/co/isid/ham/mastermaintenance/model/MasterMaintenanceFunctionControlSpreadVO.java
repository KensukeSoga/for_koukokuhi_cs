package jp.co.isid.ham.mastermaintenance.model;

import java.util.Date;

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import jp.co.isid.nj.model.AbstractModel;

import jp.co.isid.ham.integ.tbl.Mbj33FunctionControl;
import jp.co.isid.ham.integ.tbl.Mbj34FunctionControlItem;

/**
 * <P>
 * 機能制御スプレッドデータVO
 * </P>
 * <P>
 * <B>修正履歴</B><BR>
 * ・新規作成(2012/12/11 森)<BR>
 * </P>
 * @author 森
 */
@XmlRootElement(namespace = "http://model.mastermaintenance.ham.isid.co.jp/")
@XmlType(namespace = "http://model.mastermaintenance.ham.isid.co.jp/")
public class MasterMaintenanceFunctionControlSpreadVO extends AbstractModel
{
    /** serialVersionUID */
    private static final long serialVersionUID = 1L;

    /**
     * デフォルトコンストラクタ
     */
    public MasterMaintenanceFunctionControlSpreadVO()
    {
    }

    /**
     * 新規インスタンスを生成する
     *
     * @return 新規インスタンス
     */
    public Object newInstance()
    {
        return new MasterMaintenanceFunctionControlSpreadVO();
    }

    /**
     * 担当者IDを取得する
     *
     * @return 担当者ID
     */
    public String getHAMID()
    {
        return (String) get(Mbj33FunctionControl.HAMID);
    }

    /**
     * 担当者IDを設定する
     *
     * @param val 担当者ID
     */
    public void setHAMID(String val)
    {
        set(Mbj33FunctionControl.HAMID, val);
    }

    /**
     * 機能コードを取得する
     *
     * @return 機能コード
     */
    public String getFUNCCD()
    {
        return (String) get(Mbj33FunctionControl.FUNCCD);
    }

    /**
     * 機能コードを設定する
     *
     * @param val 機能コード
     */
    public void setFUNCCD(String val)
    {
        set(Mbj33FunctionControl.FUNCCD, val);
    }

    /**
     * 機能名を取得する
     *
     * @return 機能名
     */
    public String getFUNCNM()
    {
        return (String) get(Mbj34FunctionControlItem.FUNCNM);
    }

    /**
     * 機能名を設定する
     *
     * @param val 機能名
     */
    public void setFUNCNM(String val)
    {
        set(Mbj34FunctionControlItem.FUNCNM, val);
    }

    /**
     * 機能種別を取得する
     *
     * @return 種別
     */
    public String getFUNCTYPE()
    {
        return (String) get(Mbj34FunctionControlItem.FUNCTYPE);
    }

    /**
     * 機能種別を設定する
     *
     * @param val 種別
     */
    public void setFUNCTYPE(String val)
    {
        set(Mbj34FunctionControlItem.FUNCTYPE, val);
    }

    /**
     * 制御を取得する
     *
     * @return 制御
     */
    public String getCONTROL()
    {
        return (String) get(Mbj33FunctionControl.CONTROL);
    }

    /**
     * 制御を設定する
     *
     * @param val 制御
     */
    public void setCONTROL(String val)
    {
        set(Mbj33FunctionControl.CONTROL, val);
    }

    /**
     * デフォルト制御を取得する
     *
     * @return デフォルト制御
     */
    public String getDEFAULTCONTROL()
    {
        return (String) get(Mbj34FunctionControlItem.DEFAULTCONTROL);
    }

    /**
     * デフォルト制御を設定する
     *
     * @param val デフォルト制御
     */
    public void setDEFAULTCONTROL(String val)
    {
        set(Mbj34FunctionControlItem.DEFAULTCONTROL, val);
    }

    /**
     * 種別を取得する
     *
     * @return 種別
     */
    public String getITEMTYPE()
    {
        return (String) get(Mbj34FunctionControlItem.ITEMTYPE);
    }

    /**
     * 種別を設定する
     *
     * @param val 種別
     */
    public void setITEMTYPE(String val)
    {
        set(Mbj34FunctionControlItem.ITEMTYPE, val);
    }

    /**
     * データ更新日時を取得する
     *
     * @return データ更新日時
     */
    @XmlElement(nillable=true)
    public Date getUPDDATE()
    {
        return (Date) get(Mbj33FunctionControl.UPDDATE);
    }

    /**
     * データ更新日時を設定する
     *
     * @param val データ更新日時
     */
    public void setUPDDATE(Date val)
    {
        set(Mbj33FunctionControl.UPDDATE, val);
    }

    /**
     * データ更新者を取得する
     *
     * @return データ更新者
     */
    public String getUPDNM()
    {
        return (String) get(Mbj33FunctionControl.UPDNM);
    }

    /**
     * データ更新者を設定する
     *
     * @param val データ更新者
     */
    public void setUPDNM(String val)
    {
        set(Mbj33FunctionControl.UPDNM, val);
    }

    /**
     * 更新プログラムを取得する
     *
     * @return 更新プログラム
     */
    public String getUPDAPL()
    {
        return (String) get(Mbj33FunctionControl.UPDAPL);
    }

    /**
     * 更新プログラムを設定する
     *
     * @param val 更新プログラム
     */
    public void setUPDAPL(String val)
    {
        set(Mbj33FunctionControl.UPDAPL, val);
    }

    /**
     * 更新担当者IDを取得する
     *
     * @return 更新担当者ID
     */
    public String getUPDID()
    {
        return (String) get(Mbj33FunctionControl.UPDID);
    }

    /**
     * 更新担当者IDを設定する
     *
     * @param val 更新担当者ID
     */
    public void setUPDID(String val)
    {
        set(Mbj33FunctionControl.UPDID, val);
    }

}
