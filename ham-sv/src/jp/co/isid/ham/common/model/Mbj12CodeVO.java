package jp.co.isid.ham.common.model;

import java.util.Date;

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import jp.co.isid.ham.integ.tbl.Mbj12Code;
import jp.co.isid.nj.model.AbstractModel;

/**
 * <P>
 * コードマスタVO
 * </P>
 * <P>
 * <B>修正履歴</B><BR>
 * ・新規作成(2012/11/29 新HAMチーム)<BR>
 * </P>
 * @author 新HAMチーム
 */
@XmlRootElement(namespace = "http://model.common.ham.isid.co.jp/")
@XmlType(namespace = "http://model.common.ham.isid.co.jp/")
public class Mbj12CodeVO extends AbstractModel {

    /** serialVersionUID */
    private static final long serialVersionUID = 1L;

    /**
     * デフォルトコンストラクタ
     */
    public Mbj12CodeVO() {
    }

    /**
     * 新規インスタンスを生成する
     *
     * @return 新規インスタンス
     */
    public Object newInstance() {
        return new Mbj12CodeVO();
    }

    /**
     * コード種別を取得する
     *
     * @return コード種別
     */
    public String getCODETYPE() {
        return (String) get(Mbj12Code.CODETYPE);
    }

    /**
     * コード種別を設定する
     *
     * @param val コード種別
     */
    public void setCODETYPE(String val) {
        set(Mbj12Code.CODETYPE, val);
    }

    /**
     * キーコードを取得する
     *
     * @return キーコード
     */
    public String getKEYCODE() {
        return (String) get(Mbj12Code.KEYCODE);
    }

    /**
     * キーコードを設定する
     *
     * @param val キーコード
     */
    public void setKEYCODE(String val) {
        set(Mbj12Code.KEYCODE, val);
    }

    /**
     * 名称(漢字)を取得する
     *
     * @return 名称(漢字)
     */
    public String getCODENAME() {
        return (String) get(Mbj12Code.CODENAME);
    }

    /**
     * 名称(漢字)を設定する
     *
     * @param val 名称(漢字)
     */
    public void setCODENAME(String val) {
        set(Mbj12Code.CODENAME, val);
    }

    /**
     * 予備フィールド1を取得する
     *
     * @return 予備フィールド1
     */
    public String getYOBI1() {
        return (String) get(Mbj12Code.YOBI1);
    }

    /**
     * 予備フィールド1を設定する
     *
     * @param val 予備フィールド1
     */
    public void setYOBI1(String val) {
        set(Mbj12Code.YOBI1, val);
    }

    /**
     * 予備フィールド2を取得する
     *
     * @return 予備フィールド2
     */
    public String getYOBI2() {
        return (String) get(Mbj12Code.YOBI2);
    }

    /**
     * 予備フィールド2を設定する
     *
     * @param val 予備フィールド2
     */
    public void setYOBI2(String val) {
        set(Mbj12Code.YOBI2, val);
    }

    /**
     * 予備フィールド3を取得する
     *
     * @return 予備フィールド3
     */
    public String getYOBI3() {
        return (String) get(Mbj12Code.YOBI3);
    }

    /**
     * 予備フィールド3を設定する
     *
     * @param val 予備フィールド3
     */
    public void setYOBI3(String val) {
        set(Mbj12Code.YOBI3, val);
    }

    /**
     * データ更新日時を取得する
     *
     * @return データ更新日時
     */
    @XmlElement(required = true, nillable = true)
    public Date getUPDDATE() {
        return (Date) get(Mbj12Code.UPDDATE);
    }

    /**
     * データ更新日時を設定する
     *
     * @param val データ更新日時
     */
    public void setUPDDATE(Date val) {
        set(Mbj12Code.UPDDATE, val);
    }

    /**
     * データ更新者を取得する
     *
     * @return データ更新者
     */
    public String getUPDNM() {
        return (String) get(Mbj12Code.UPDNM);
    }

    /**
     * データ更新者を設定する
     *
     * @param val データ更新者
     */
    public void setUPDNM(String val) {
        set(Mbj12Code.UPDNM, val);
    }

    /**
     * 更新担当者IDを取得する
     *
     * @return 更新担当者ID
     */
    public String getUPDID() {
        return (String) get(Mbj12Code.UPDID);
    }

    /**
     * 更新担当者IDを設定する
     *
     * @param val 更新担当者ID
     */
    public void setUPDID(String val) {
        set(Mbj12Code.UPDID, val);
    }

}
