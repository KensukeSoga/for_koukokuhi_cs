//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3643
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Kmn.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepDSKmn")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepDSKmn : global::System.Data.DataSet {
        
        private RepKmnListDataTable tableRepKmnList;
        
        private RepKmnMeisaiDataTable tableRepKmnMeisai;
        
        private MaxSeqNoDataTable tableMaxSeqNo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepDSKmn() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepDSKmn(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["RepKmnList"] != null)) {
                    base.Tables.Add(new RepKmnListDataTable(ds.Tables["RepKmnList"]));
                }
                if ((ds.Tables["RepKmnMeisai"] != null)) {
                    base.Tables.Add(new RepKmnMeisaiDataTable(ds.Tables["RepKmnMeisai"]));
                }
                if ((ds.Tables["MaxSeqNo"] != null)) {
                    base.Tables.Add(new MaxSeqNoDataTable(ds.Tables["MaxSeqNo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepKmnListDataTable RepKmnList {
            get {
                return this.tableRepKmnList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepKmnMeisaiDataTable RepKmnMeisai {
            get {
                return this.tableRepKmnMeisai;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaxSeqNoDataTable MaxSeqNo {
            get {
                return this.tableMaxSeqNo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepDSKmn cln = ((RepDSKmn)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RepKmnList"] != null)) {
                    base.Tables.Add(new RepKmnListDataTable(ds.Tables["RepKmnList"]));
                }
                if ((ds.Tables["RepKmnMeisai"] != null)) {
                    base.Tables.Add(new RepKmnMeisaiDataTable(ds.Tables["RepKmnMeisai"]));
                }
                if ((ds.Tables["MaxSeqNo"] != null)) {
                    base.Tables.Add(new MaxSeqNoDataTable(ds.Tables["MaxSeqNo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRepKmnList = ((RepKmnListDataTable)(base.Tables["RepKmnList"]));
            if ((initTable == true)) {
                if ((this.tableRepKmnList != null)) {
                    this.tableRepKmnList.InitVars();
                }
            }
            this.tableRepKmnMeisai = ((RepKmnMeisaiDataTable)(base.Tables["RepKmnMeisai"]));
            if ((initTable == true)) {
                if ((this.tableRepKmnMeisai != null)) {
                    this.tableRepKmnMeisai.InitVars();
                }
            }
            this.tableMaxSeqNo = ((MaxSeqNoDataTable)(base.Tables["MaxSeqNo"]));
            if ((initTable == true)) {
                if ((this.tableMaxSeqNo != null)) {
                    this.tableMaxSeqNo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepDSKmn";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RepDSKmn.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRepKmnList = new RepKmnListDataTable();
            base.Tables.Add(this.tableRepKmnList);
            this.tableRepKmnMeisai = new RepKmnMeisaiDataTable();
            base.Tables.Add(this.tableRepKmnMeisai);
            this.tableMaxSeqNo = new MaxSeqNoDataTable();
            base.Tables.Add(this.tableMaxSeqNo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepKmnList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepKmnMeisai() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaxSeqNo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepDSKmn ds = new RepDSKmn();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void RepKmnListRowChangeEventHandler(object sender, RepKmnListRowChangeEvent e);
        
        public delegate void RepKmnMeisaiRowChangeEventHandler(object sender, RepKmnMeisaiRowChangeEvent e);
        
        public delegate void MaxSeqNoRowChangeEventHandler(object sender, MaxSeqNoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepKmnListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnchkBox;
            
            private global::System.Data.DataColumn columnshutNo;
            
            private global::System.Data.DataColumn columnseqNo;
            
            private global::System.Data.DataColumn columnseiZumi;
            
            private global::System.Data.DataColumn columnjyutNo;
            
            private global::System.Data.DataColumn columnjyMeiNo;
            
            private global::System.Data.DataColumn columnurMeiNo;
            
            private global::System.Data.DataColumn columnrenBan;
            
            private global::System.Data.DataColumn columnnaiyo;
            
            private global::System.Data.DataColumn columnhimoku;
            
            private global::System.Data.DataColumn columnbumonCd;
            
            private global::System.Data.DataColumn columnbumonNm;
            
            private global::System.Data.DataColumn columnatesaki;
            
            private global::System.Data.DataColumn columnkikan;
            
            private global::System.Data.DataColumn columnkingaku;
            
            private global::System.Data.DataColumn columnbiko;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnListDataTable() {
                this.TableName = "RepKmnList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepKmnListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepKmnListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chkBoxColumn {
                get {
                    return this.columnchkBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shutNoColumn {
                get {
                    return this.columnshutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seqNoColumn {
                get {
                    return this.columnseqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiZumiColumn {
                get {
                    return this.columnseiZumi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutNoColumn {
                get {
                    return this.columnjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyMeiNoColumn {
                get {
                    return this.columnjyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urMeiNoColumn {
                get {
                    return this.columnurMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn renBanColumn {
                get {
                    return this.columnrenBan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn naiyoColumn {
                get {
                    return this.columnnaiyo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn himokuColumn {
                get {
                    return this.columnhimoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bumonCdColumn {
                get {
                    return this.columnbumonCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bumonNmColumn {
                get {
                    return this.columnbumonNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn atesakiColumn {
                get {
                    return this.columnatesaki;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kikanColumn {
                get {
                    return this.columnkikan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kingakuColumn {
                get {
                    return this.columnkingaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bikoColumn {
                get {
                    return this.columnbiko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnListRow this[int index] {
                get {
                    return ((RepKmnListRow)(this.Rows[index]));
                }
            }
            
            public event RepKmnListRowChangeEventHandler RepKmnListRowChanging;
            
            public event RepKmnListRowChangeEventHandler RepKmnListRowChanged;
            
            public event RepKmnListRowChangeEventHandler RepKmnListRowDeleting;
            
            public event RepKmnListRowChangeEventHandler RepKmnListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepKmnListRow(RepKmnListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnListRow AddRepKmnListRow(
                        string chkBox, 
                        string shutNo, 
                        string seqNo, 
                        string seiZumi, 
                        string jyutNo, 
                        string jyMeiNo, 
                        string urMeiNo, 
                        string renBan, 
                        string naiyo, 
                        string himoku, 
                        string bumonCd, 
                        string bumonNm, 
                        string atesaki, 
                        string kikan, 
                        string kingaku, 
                        string biko) {
                RepKmnListRow rowRepKmnListRow = ((RepKmnListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        chkBox,
                        shutNo,
                        seqNo,
                        seiZumi,
                        jyutNo,
                        jyMeiNo,
                        urMeiNo,
                        renBan,
                        naiyo,
                        himoku,
                        bumonCd,
                        bumonNm,
                        atesaki,
                        kikan,
                        kingaku,
                        biko};
                rowRepKmnListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepKmnListRow);
                return rowRepKmnListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepKmnListDataTable cln = ((RepKmnListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepKmnListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnchkBox = base.Columns["chkBox"];
                this.columnshutNo = base.Columns["shutNo"];
                this.columnseqNo = base.Columns["seqNo"];
                this.columnseiZumi = base.Columns["seiZumi"];
                this.columnjyutNo = base.Columns["jyutNo"];
                this.columnjyMeiNo = base.Columns["jyMeiNo"];
                this.columnurMeiNo = base.Columns["urMeiNo"];
                this.columnrenBan = base.Columns["renBan"];
                this.columnnaiyo = base.Columns["naiyo"];
                this.columnhimoku = base.Columns["himoku"];
                this.columnbumonCd = base.Columns["bumonCd"];
                this.columnbumonNm = base.Columns["bumonNm"];
                this.columnatesaki = base.Columns["atesaki"];
                this.columnkikan = base.Columns["kikan"];
                this.columnkingaku = base.Columns["kingaku"];
                this.columnbiko = base.Columns["biko"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnchkBox = new global::System.Data.DataColumn("chkBox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchkBox);
                this.columnshutNo = new global::System.Data.DataColumn("shutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshutNo);
                this.columnseqNo = new global::System.Data.DataColumn("seqNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseqNo);
                this.columnseiZumi = new global::System.Data.DataColumn("seiZumi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiZumi);
                this.columnjyutNo = new global::System.Data.DataColumn("jyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutNo);
                this.columnjyMeiNo = new global::System.Data.DataColumn("jyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyMeiNo);
                this.columnurMeiNo = new global::System.Data.DataColumn("urMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurMeiNo);
                this.columnrenBan = new global::System.Data.DataColumn("renBan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrenBan);
                this.columnnaiyo = new global::System.Data.DataColumn("naiyo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnaiyo);
                this.columnhimoku = new global::System.Data.DataColumn("himoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhimoku);
                this.columnbumonCd = new global::System.Data.DataColumn("bumonCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbumonCd);
                this.columnbumonNm = new global::System.Data.DataColumn("bumonNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbumonNm);
                this.columnatesaki = new global::System.Data.DataColumn("atesaki", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnatesaki);
                this.columnkikan = new global::System.Data.DataColumn("kikan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkikan);
                this.columnkingaku = new global::System.Data.DataColumn("kingaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkingaku);
                this.columnbiko = new global::System.Data.DataColumn("biko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbiko);
                this.columnjyutNo.Caption = "受注No";
                this.columnnaiyo.Caption = "内容";
                this.columnhimoku.Caption = "費目";
                this.columnbumonCd.Caption = "部門コード";
                this.columnbumonNm.Caption = "部門名";
                this.columnatesaki.Caption = "宛先";
                this.columnkikan.Caption = "期間";
                this.columnkingaku.Caption = "金額";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnListRow NewRepKmnListRow() {
                return ((RepKmnListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepKmnListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepKmnListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepKmnListRowChanged != null)) {
                    this.RepKmnListRowChanged(this, new RepKmnListRowChangeEvent(((RepKmnListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepKmnListRowChanging != null)) {
                    this.RepKmnListRowChanging(this, new RepKmnListRowChangeEvent(((RepKmnListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepKmnListRowDeleted != null)) {
                    this.RepKmnListRowDeleted(this, new RepKmnListRowChangeEvent(((RepKmnListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepKmnListRowDeleting != null)) {
                    this.RepKmnListRowDeleting(this, new RepKmnListRowChangeEvent(((RepKmnListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepKmnListRow(RepKmnListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDSKmn ds = new RepDSKmn();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepKmnListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepKmnMeisaiDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnchkBox;
            
            private global::System.Data.DataColumn columnoutputNo;
            
            private global::System.Data.DataColumn columnseiZumi;
            
            private global::System.Data.DataColumn columnyyyymm;
            
            private global::System.Data.DataColumn columnjyutyuNo;
            
            private global::System.Data.DataColumn columnjyuMeiNo;
            
            private global::System.Data.DataColumn columnuriMeiNo;
            
            private global::System.Data.DataColumn columnhinmoku1;
            
            private global::System.Data.DataColumn columnhinmoku2;
            
            private global::System.Data.DataColumn columnhinmoku3;
            
            private global::System.Data.DataColumn columnbumonCd;
            
            private global::System.Data.DataColumn columnbumonNm;
            
            private global::System.Data.DataColumn columnatenaNm;
            
            private global::System.Data.DataColumn columnsZeiGak;
            
            private global::System.Data.DataColumn columnkingaku;
            
            private global::System.Data.DataColumn columnseikyuYm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnMeisaiDataTable() {
                this.TableName = "RepKmnMeisai";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepKmnMeisaiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepKmnMeisaiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chkBoxColumn {
                get {
                    return this.columnchkBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn outputNoColumn {
                get {
                    return this.columnoutputNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiZumiColumn {
                get {
                    return this.columnseiZumi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yyyymmColumn {
                get {
                    return this.columnyyyymm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutyuNoColumn {
                get {
                    return this.columnjyutyuNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyuMeiNoColumn {
                get {
                    return this.columnjyuMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uriMeiNoColumn {
                get {
                    return this.columnuriMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hinmoku1Column {
                get {
                    return this.columnhinmoku1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hinmoku2Column {
                get {
                    return this.columnhinmoku2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hinmoku3Column {
                get {
                    return this.columnhinmoku3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bumonCdColumn {
                get {
                    return this.columnbumonCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bumonNmColumn {
                get {
                    return this.columnbumonNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn atenaNmColumn {
                get {
                    return this.columnatenaNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sZeiGakColumn {
                get {
                    return this.columnsZeiGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kingakuColumn {
                get {
                    return this.columnkingaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seikyuYmColumn {
                get {
                    return this.columnseikyuYm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnMeisaiRow this[int index] {
                get {
                    return ((RepKmnMeisaiRow)(this.Rows[index]));
                }
            }
            
            public event RepKmnMeisaiRowChangeEventHandler RepKmnMeisaiRowChanging;
            
            public event RepKmnMeisaiRowChangeEventHandler RepKmnMeisaiRowChanged;
            
            public event RepKmnMeisaiRowChangeEventHandler RepKmnMeisaiRowDeleting;
            
            public event RepKmnMeisaiRowChangeEventHandler RepKmnMeisaiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepKmnMeisaiRow(RepKmnMeisaiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnMeisaiRow AddRepKmnMeisaiRow(
                        string chkBox, 
                        string outputNo, 
                        string seiZumi, 
                        string yyyymm, 
                        string jyutyuNo, 
                        string jyuMeiNo, 
                        string uriMeiNo, 
                        string hinmoku1, 
                        string hinmoku2, 
                        string hinmoku3, 
                        string bumonCd, 
                        string bumonNm, 
                        string atenaNm, 
                        string sZeiGak, 
                        string kingaku, 
                        string seikyuYm) {
                RepKmnMeisaiRow rowRepKmnMeisaiRow = ((RepKmnMeisaiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        chkBox,
                        outputNo,
                        seiZumi,
                        yyyymm,
                        jyutyuNo,
                        jyuMeiNo,
                        uriMeiNo,
                        hinmoku1,
                        hinmoku2,
                        hinmoku3,
                        bumonCd,
                        bumonNm,
                        atenaNm,
                        sZeiGak,
                        kingaku,
                        seikyuYm};
                rowRepKmnMeisaiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepKmnMeisaiRow);
                return rowRepKmnMeisaiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepKmnMeisaiDataTable cln = ((RepKmnMeisaiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepKmnMeisaiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnchkBox = base.Columns["chkBox"];
                this.columnoutputNo = base.Columns["outputNo"];
                this.columnseiZumi = base.Columns["seiZumi"];
                this.columnyyyymm = base.Columns["yyyymm"];
                this.columnjyutyuNo = base.Columns["jyutyuNo"];
                this.columnjyuMeiNo = base.Columns["jyuMeiNo"];
                this.columnuriMeiNo = base.Columns["uriMeiNo"];
                this.columnhinmoku1 = base.Columns["hinmoku1"];
                this.columnhinmoku2 = base.Columns["hinmoku2"];
                this.columnhinmoku3 = base.Columns["hinmoku3"];
                this.columnbumonCd = base.Columns["bumonCd"];
                this.columnbumonNm = base.Columns["bumonNm"];
                this.columnatenaNm = base.Columns["atenaNm"];
                this.columnsZeiGak = base.Columns["sZeiGak"];
                this.columnkingaku = base.Columns["kingaku"];
                this.columnseikyuYm = base.Columns["seikyuYm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnchkBox = new global::System.Data.DataColumn("chkBox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchkBox);
                this.columnoutputNo = new global::System.Data.DataColumn("outputNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoutputNo);
                this.columnseiZumi = new global::System.Data.DataColumn("seiZumi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiZumi);
                this.columnyyyymm = new global::System.Data.DataColumn("yyyymm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyyyymm);
                this.columnjyutyuNo = new global::System.Data.DataColumn("jyutyuNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutyuNo);
                this.columnjyuMeiNo = new global::System.Data.DataColumn("jyuMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyuMeiNo);
                this.columnuriMeiNo = new global::System.Data.DataColumn("uriMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuriMeiNo);
                this.columnhinmoku1 = new global::System.Data.DataColumn("hinmoku1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhinmoku1);
                this.columnhinmoku2 = new global::System.Data.DataColumn("hinmoku2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhinmoku2);
                this.columnhinmoku3 = new global::System.Data.DataColumn("hinmoku3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhinmoku3);
                this.columnbumonCd = new global::System.Data.DataColumn("bumonCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbumonCd);
                this.columnbumonNm = new global::System.Data.DataColumn("bumonNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbumonNm);
                this.columnatenaNm = new global::System.Data.DataColumn("atenaNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnatenaNm);
                this.columnsZeiGak = new global::System.Data.DataColumn("sZeiGak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsZeiGak);
                this.columnkingaku = new global::System.Data.DataColumn("kingaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkingaku);
                this.columnseikyuYm = new global::System.Data.DataColumn("seikyuYm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseikyuYm);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnMeisaiRow NewRepKmnMeisaiRow() {
                return ((RepKmnMeisaiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepKmnMeisaiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepKmnMeisaiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepKmnMeisaiRowChanged != null)) {
                    this.RepKmnMeisaiRowChanged(this, new RepKmnMeisaiRowChangeEvent(((RepKmnMeisaiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepKmnMeisaiRowChanging != null)) {
                    this.RepKmnMeisaiRowChanging(this, new RepKmnMeisaiRowChangeEvent(((RepKmnMeisaiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepKmnMeisaiRowDeleted != null)) {
                    this.RepKmnMeisaiRowDeleted(this, new RepKmnMeisaiRowChangeEvent(((RepKmnMeisaiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepKmnMeisaiRowDeleting != null)) {
                    this.RepKmnMeisaiRowDeleting(this, new RepKmnMeisaiRowChangeEvent(((RepKmnMeisaiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepKmnMeisaiRow(RepKmnMeisaiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDSKmn ds = new RepDSKmn();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepKmnMeisaiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaxSeqNoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnseqNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaxSeqNoDataTable() {
                this.TableName = "MaxSeqNo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaxSeqNoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaxSeqNoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seqNoColumn {
                get {
                    return this.columnseqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaxSeqNoRow this[int index] {
                get {
                    return ((MaxSeqNoRow)(this.Rows[index]));
                }
            }
            
            public event MaxSeqNoRowChangeEventHandler MaxSeqNoRowChanging;
            
            public event MaxSeqNoRowChangeEventHandler MaxSeqNoRowChanged;
            
            public event MaxSeqNoRowChangeEventHandler MaxSeqNoRowDeleting;
            
            public event MaxSeqNoRowChangeEventHandler MaxSeqNoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaxSeqNoRow(MaxSeqNoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaxSeqNoRow AddMaxSeqNoRow(string seqNo) {
                MaxSeqNoRow rowMaxSeqNoRow = ((MaxSeqNoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        seqNo};
                rowMaxSeqNoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaxSeqNoRow);
                return rowMaxSeqNoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaxSeqNoDataTable cln = ((MaxSeqNoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaxSeqNoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnseqNo = base.Columns["seqNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnseqNo = new global::System.Data.DataColumn("seqNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseqNo);
                this.columnseqNo.Caption = "chkBox";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaxSeqNoRow NewMaxSeqNoRow() {
                return ((MaxSeqNoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaxSeqNoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaxSeqNoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaxSeqNoRowChanged != null)) {
                    this.MaxSeqNoRowChanged(this, new MaxSeqNoRowChangeEvent(((MaxSeqNoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaxSeqNoRowChanging != null)) {
                    this.MaxSeqNoRowChanging(this, new MaxSeqNoRowChangeEvent(((MaxSeqNoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaxSeqNoRowDeleted != null)) {
                    this.MaxSeqNoRowDeleted(this, new MaxSeqNoRowChangeEvent(((MaxSeqNoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaxSeqNoRowDeleting != null)) {
                    this.MaxSeqNoRowDeleting(this, new MaxSeqNoRowChangeEvent(((MaxSeqNoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaxSeqNoRow(MaxSeqNoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDSKmn ds = new RepDSKmn();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaxSeqNoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepKmnListRow : global::System.Data.DataRow {
            
            private RepKmnListDataTable tableRepKmnList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepKmnListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepKmnList = ((RepKmnListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chkBox {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.chkBoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'chkBox\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.chkBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shutNo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.shutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'shutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.shutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seqNo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.seqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'seqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.seqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seiZumi {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.seiZumiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'seiZumi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.seiZumiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutNo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.jyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'jyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.jyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.jyMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'jyMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.jyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string urMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.urMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'urMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.urMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string renBan {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.renBanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'renBan\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.renBanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string naiyo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.naiyoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'naiyo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.naiyoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string himoku {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.himokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'himoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.himokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bumonCd {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.bumonCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'bumonCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.bumonCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bumonNm {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.bumonNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'bumonNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.bumonNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string atesaki {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.atesakiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'atesaki\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.atesakiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kikan {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.kikanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'kikan\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.kikanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kingaku {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.kingakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'kingaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.kingakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string biko {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnList.bikoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnList\' にある列 \'biko\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnList.bikoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschkBoxNull() {
                return this.IsNull(this.tableRepKmnList.chkBoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchkBoxNull() {
                this[this.tableRepKmnList.chkBoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshutNoNull() {
                return this.IsNull(this.tableRepKmnList.shutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshutNoNull() {
                this[this.tableRepKmnList.shutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseqNoNull() {
                return this.IsNull(this.tableRepKmnList.seqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseqNoNull() {
                this[this.tableRepKmnList.seqNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiZumiNull() {
                return this.IsNull(this.tableRepKmnList.seiZumiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiZumiNull() {
                this[this.tableRepKmnList.seiZumiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutNoNull() {
                return this.IsNull(this.tableRepKmnList.jyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutNoNull() {
                this[this.tableRepKmnList.jyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyMeiNoNull() {
                return this.IsNull(this.tableRepKmnList.jyMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyMeiNoNull() {
                this[this.tableRepKmnList.jyMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurMeiNoNull() {
                return this.IsNull(this.tableRepKmnList.urMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturMeiNoNull() {
                this[this.tableRepKmnList.urMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrenBanNull() {
                return this.IsNull(this.tableRepKmnList.renBanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrenBanNull() {
                this[this.tableRepKmnList.renBanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnaiyoNull() {
                return this.IsNull(this.tableRepKmnList.naiyoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnaiyoNull() {
                this[this.tableRepKmnList.naiyoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshimokuNull() {
                return this.IsNull(this.tableRepKmnList.himokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethimokuNull() {
                this[this.tableRepKmnList.himokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbumonCdNull() {
                return this.IsNull(this.tableRepKmnList.bumonCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbumonCdNull() {
                this[this.tableRepKmnList.bumonCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbumonNmNull() {
                return this.IsNull(this.tableRepKmnList.bumonNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbumonNmNull() {
                this[this.tableRepKmnList.bumonNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsatesakiNull() {
                return this.IsNull(this.tableRepKmnList.atesakiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetatesakiNull() {
                this[this.tableRepKmnList.atesakiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskikanNull() {
                return this.IsNull(this.tableRepKmnList.kikanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkikanNull() {
                this[this.tableRepKmnList.kikanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskingakuNull() {
                return this.IsNull(this.tableRepKmnList.kingakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkingakuNull() {
                this[this.tableRepKmnList.kingakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbikoNull() {
                return this.IsNull(this.tableRepKmnList.bikoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbikoNull() {
                this[this.tableRepKmnList.bikoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepKmnMeisaiRow : global::System.Data.DataRow {
            
            private RepKmnMeisaiDataTable tableRepKmnMeisai;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepKmnMeisaiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepKmnMeisai = ((RepKmnMeisaiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chkBox {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.chkBoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'chkBox\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.chkBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string outputNo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.outputNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'outputNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.outputNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seiZumi {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.seiZumiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'seiZumi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.seiZumiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yyyymm {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.yyyymmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'yyyymm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.yyyymmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutyuNo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.jyutyuNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'jyutyuNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.jyutyuNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyuMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.jyuMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'jyuMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.jyuMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uriMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.uriMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'uriMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.uriMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hinmoku1 {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.hinmoku1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'hinmoku1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.hinmoku1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hinmoku2 {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.hinmoku2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'hinmoku2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.hinmoku2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hinmoku3 {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.hinmoku3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'hinmoku3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.hinmoku3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bumonCd {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.bumonCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'bumonCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.bumonCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bumonNm {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.bumonNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'bumonNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.bumonNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string atenaNm {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.atenaNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'atenaNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.atenaNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sZeiGak {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.sZeiGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'sZeiGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.sZeiGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kingaku {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.kingakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'kingaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.kingakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seikyuYm {
                get {
                    try {
                        return ((string)(this[this.tableRepKmnMeisai.seikyuYmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepKmnMeisai\' にある列 \'seikyuYm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepKmnMeisai.seikyuYmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschkBoxNull() {
                return this.IsNull(this.tableRepKmnMeisai.chkBoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchkBoxNull() {
                this[this.tableRepKmnMeisai.chkBoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoutputNoNull() {
                return this.IsNull(this.tableRepKmnMeisai.outputNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoutputNoNull() {
                this[this.tableRepKmnMeisai.outputNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiZumiNull() {
                return this.IsNull(this.tableRepKmnMeisai.seiZumiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiZumiNull() {
                this[this.tableRepKmnMeisai.seiZumiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyyyymmNull() {
                return this.IsNull(this.tableRepKmnMeisai.yyyymmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyyyymmNull() {
                this[this.tableRepKmnMeisai.yyyymmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutyuNoNull() {
                return this.IsNull(this.tableRepKmnMeisai.jyutyuNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutyuNoNull() {
                this[this.tableRepKmnMeisai.jyutyuNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyuMeiNoNull() {
                return this.IsNull(this.tableRepKmnMeisai.jyuMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyuMeiNoNull() {
                this[this.tableRepKmnMeisai.jyuMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuriMeiNoNull() {
                return this.IsNull(this.tableRepKmnMeisai.uriMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturiMeiNoNull() {
                this[this.tableRepKmnMeisai.uriMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishinmoku1Null() {
                return this.IsNull(this.tableRepKmnMeisai.hinmoku1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethinmoku1Null() {
                this[this.tableRepKmnMeisai.hinmoku1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishinmoku2Null() {
                return this.IsNull(this.tableRepKmnMeisai.hinmoku2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethinmoku2Null() {
                this[this.tableRepKmnMeisai.hinmoku2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishinmoku3Null() {
                return this.IsNull(this.tableRepKmnMeisai.hinmoku3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethinmoku3Null() {
                this[this.tableRepKmnMeisai.hinmoku3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbumonCdNull() {
                return this.IsNull(this.tableRepKmnMeisai.bumonCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbumonCdNull() {
                this[this.tableRepKmnMeisai.bumonCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbumonNmNull() {
                return this.IsNull(this.tableRepKmnMeisai.bumonNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbumonNmNull() {
                this[this.tableRepKmnMeisai.bumonNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsatenaNmNull() {
                return this.IsNull(this.tableRepKmnMeisai.atenaNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetatenaNmNull() {
                this[this.tableRepKmnMeisai.atenaNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssZeiGakNull() {
                return this.IsNull(this.tableRepKmnMeisai.sZeiGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsZeiGakNull() {
                this[this.tableRepKmnMeisai.sZeiGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskingakuNull() {
                return this.IsNull(this.tableRepKmnMeisai.kingakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkingakuNull() {
                this[this.tableRepKmnMeisai.kingakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseikyuYmNull() {
                return this.IsNull(this.tableRepKmnMeisai.seikyuYmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseikyuYmNull() {
                this[this.tableRepKmnMeisai.seikyuYmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaxSeqNoRow : global::System.Data.DataRow {
            
            private MaxSeqNoDataTable tableMaxSeqNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaxSeqNoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaxSeqNo = ((MaxSeqNoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seqNo {
                get {
                    try {
                        return ((string)(this[this.tableMaxSeqNo.seqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'MaxSeqNo\' にある列 \'seqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableMaxSeqNo.seqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseqNoNull() {
                return this.IsNull(this.tableMaxSeqNo.seqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseqNoNull() {
                this[this.tableMaxSeqNo.seqNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepKmnListRowChangeEvent : global::System.EventArgs {
            
            private RepKmnListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnListRowChangeEvent(RepKmnListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepKmnMeisaiRowChangeEvent : global::System.EventArgs {
            
            private RepKmnMeisaiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnMeisaiRowChangeEvent(RepKmnMeisaiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepKmnMeisaiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaxSeqNoRowChangeEvent : global::System.EventArgs {
            
            private MaxSeqNoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaxSeqNoRowChangeEvent(MaxSeqNoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaxSeqNoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591