//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3643
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Kmn.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DetailDSKmn")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DetailDSKmn : global::System.Data.DataSet {
        
        private KkhDetailDataTable tableKkhDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DetailDSKmn() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DetailDSKmn(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["KkhDetail"] != null)) {
                    base.Tables.Add(new KkhDetailDataTable(ds.Tables["KkhDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KkhDetailDataTable KkhDetail {
            get {
                return this.tableKkhDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DetailDSKmn cln = ((DetailDSKmn)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["KkhDetail"] != null)) {
                    base.Tables.Add(new KkhDetailDataTable(ds.Tables["KkhDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableKkhDetail = ((KkhDetailDataTable)(base.Tables["KkhDetail"]));
            if ((initTable == true)) {
                if ((this.tableKkhDetail != null)) {
                    this.tableKkhDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DetailDSKmn";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DetailDSKmn.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableKkhDetail = new KkhDetailDataTable();
            base.Tables.Add(this.tableKkhDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKkhDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DetailDSKmn ds = new DetailDSKmn();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void KkhDetailRowChangeEventHandler(object sender, KkhDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KkhDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnHinmoku1;
            
            private global::System.Data.DataColumn columnHinmoku2;
            
            private global::System.Data.DataColumn columnHinmoku3;
            
            private global::System.Data.DataColumn columnHimoku1;
            
            private global::System.Data.DataColumn columnKikan1;
            
            private global::System.Data.DataColumn columnBumonCd;
            
            private global::System.Data.DataColumn columnSeikyuSakiBumon;
            
            private global::System.Data.DataColumn columnSeikyuYyyymm;
            
            private global::System.Data.DataColumn columnGokeiKingaku;
            
            private global::System.Data.DataColumn columnGokeiZeigaku;
            
            private global::System.Data.DataColumn columnNaiyou;
            
            private global::System.Data.DataColumn columnHimoku;
            
            private global::System.Data.DataColumn columnKikan;
            
            private global::System.Data.DataColumn columnKingaku;
            
            private global::System.Data.DataColumn columnZeigaku;
            
            private global::System.Data.DataColumn columnBiko;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailDataTable() {
                this.TableName = "KkhDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KkhDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KkhDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hinmoku1Column {
                get {
                    return this.columnHinmoku1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hinmoku2Column {
                get {
                    return this.columnHinmoku2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hinmoku3Column {
                get {
                    return this.columnHinmoku3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Himoku1Column {
                get {
                    return this.columnHimoku1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Kikan1Column {
                get {
                    return this.columnKikan1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BumonCdColumn {
                get {
                    return this.columnBumonCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeikyuSakiBumonColumn {
                get {
                    return this.columnSeikyuSakiBumon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeikyuYyyymmColumn {
                get {
                    return this.columnSeikyuYyyymm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GokeiKingakuColumn {
                get {
                    return this.columnGokeiKingaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GokeiZeigakuColumn {
                get {
                    return this.columnGokeiZeigaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NaiyouColumn {
                get {
                    return this.columnNaiyou;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HimokuColumn {
                get {
                    return this.columnHimoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KikanColumn {
                get {
                    return this.columnKikan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KingakuColumn {
                get {
                    return this.columnKingaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZeigakuColumn {
                get {
                    return this.columnZeigaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BikoColumn {
                get {
                    return this.columnBiko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow this[int index] {
                get {
                    return ((KkhDetailRow)(this.Rows[index]));
                }
            }
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowChanging;
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowChanged;
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowDeleting;
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKkhDetailRow(KkhDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow AddKkhDetailRow(
                        string Hinmoku1, 
                        string Hinmoku2, 
                        string Hinmoku3, 
                        string Himoku1, 
                        string Kikan1, 
                        string BumonCd, 
                        string SeikyuSakiBumon, 
                        string SeikyuYyyymm, 
                        string GokeiKingaku, 
                        string GokeiZeigaku, 
                        string Naiyou, 
                        string Himoku, 
                        string Kikan, 
                        string Kingaku, 
                        string Zeigaku, 
                        string Biko) {
                KkhDetailRow rowKkhDetailRow = ((KkhDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Hinmoku1,
                        Hinmoku2,
                        Hinmoku3,
                        Himoku1,
                        Kikan1,
                        BumonCd,
                        SeikyuSakiBumon,
                        SeikyuYyyymm,
                        GokeiKingaku,
                        GokeiZeigaku,
                        Naiyou,
                        Himoku,
                        Kikan,
                        Kingaku,
                        Zeigaku,
                        Biko};
                rowKkhDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKkhDetailRow);
                return rowKkhDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KkhDetailDataTable cln = ((KkhDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KkhDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHinmoku1 = base.Columns["Hinmoku1"];
                this.columnHinmoku2 = base.Columns["Hinmoku2"];
                this.columnHinmoku3 = base.Columns["Hinmoku3"];
                this.columnHimoku1 = base.Columns["Himoku1"];
                this.columnKikan1 = base.Columns["Kikan1"];
                this.columnBumonCd = base.Columns["BumonCd"];
                this.columnSeikyuSakiBumon = base.Columns["SeikyuSakiBumon"];
                this.columnSeikyuYyyymm = base.Columns["SeikyuYyyymm"];
                this.columnGokeiKingaku = base.Columns["GokeiKingaku"];
                this.columnGokeiZeigaku = base.Columns["GokeiZeigaku"];
                this.columnNaiyou = base.Columns["Naiyou"];
                this.columnHimoku = base.Columns["Himoku"];
                this.columnKikan = base.Columns["Kikan"];
                this.columnKingaku = base.Columns["Kingaku"];
                this.columnZeigaku = base.Columns["Zeigaku"];
                this.columnBiko = base.Columns["Biko"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHinmoku1 = new global::System.Data.DataColumn("Hinmoku1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHinmoku1);
                this.columnHinmoku2 = new global::System.Data.DataColumn("Hinmoku2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHinmoku2);
                this.columnHinmoku3 = new global::System.Data.DataColumn("Hinmoku3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHinmoku3);
                this.columnHimoku1 = new global::System.Data.DataColumn("Himoku1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHimoku1);
                this.columnKikan1 = new global::System.Data.DataColumn("Kikan1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKikan1);
                this.columnBumonCd = new global::System.Data.DataColumn("BumonCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBumonCd);
                this.columnSeikyuSakiBumon = new global::System.Data.DataColumn("SeikyuSakiBumon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeikyuSakiBumon);
                this.columnSeikyuYyyymm = new global::System.Data.DataColumn("SeikyuYyyymm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeikyuYyyymm);
                this.columnGokeiKingaku = new global::System.Data.DataColumn("GokeiKingaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGokeiKingaku);
                this.columnGokeiZeigaku = new global::System.Data.DataColumn("GokeiZeigaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGokeiZeigaku);
                this.columnNaiyou = new global::System.Data.DataColumn("Naiyou", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaiyou);
                this.columnHimoku = new global::System.Data.DataColumn("Himoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHimoku);
                this.columnKikan = new global::System.Data.DataColumn("Kikan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKikan);
                this.columnKingaku = new global::System.Data.DataColumn("Kingaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKingaku);
                this.columnZeigaku = new global::System.Data.DataColumn("Zeigaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZeigaku);
                this.columnBiko = new global::System.Data.DataColumn("Biko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiko);
                this.columnSeikyuYyyymm.Caption = "SeikyuSakiBumon";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow NewKkhDetailRow() {
                return ((KkhDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KkhDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KkhDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KkhDetailRowChanged != null)) {
                    this.KkhDetailRowChanged(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KkhDetailRowChanging != null)) {
                    this.KkhDetailRowChanging(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KkhDetailRowDeleted != null)) {
                    this.KkhDetailRowDeleted(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KkhDetailRowDeleting != null)) {
                    this.KkhDetailRowDeleting(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKkhDetailRow(KkhDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DetailDSKmn ds = new DetailDSKmn();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KkhDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KkhDetailRow : global::System.Data.DataRow {
            
            private KkhDetailDataTable tableKkhDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KkhDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKkhDetail = ((KkhDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Hinmoku1 {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.Hinmoku1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Hinmoku1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.Hinmoku1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Hinmoku2 {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.Hinmoku2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Hinmoku2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.Hinmoku2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Hinmoku3 {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.Hinmoku3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Hinmoku3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.Hinmoku3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Himoku1 {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.Himoku1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Himoku1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.Himoku1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kikan1 {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.Kikan1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Kikan1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.Kikan1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BumonCd {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.BumonCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'BumonCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.BumonCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SeikyuSakiBumon {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.SeikyuSakiBumonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'SeikyuSakiBumon\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.SeikyuSakiBumonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SeikyuYyyymm {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.SeikyuYyyymmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'SeikyuYyyymm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.SeikyuYyyymmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GokeiKingaku {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.GokeiKingakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'GokeiKingaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.GokeiKingakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GokeiZeigaku {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.GokeiZeigakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'GokeiZeigaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.GokeiZeigakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Naiyou {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.NaiyouColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Naiyou\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.NaiyouColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Himoku {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.HimokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Himoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.HimokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kikan {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.KikanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Kikan\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.KikanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kingaku {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.KingakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Kingaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.KingakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zeigaku {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.ZeigakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Zeigaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.ZeigakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Biko {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.BikoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'Biko\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.BikoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHinmoku1Null() {
                return this.IsNull(this.tableKkhDetail.Hinmoku1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHinmoku1Null() {
                this[this.tableKkhDetail.Hinmoku1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHinmoku2Null() {
                return this.IsNull(this.tableKkhDetail.Hinmoku2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHinmoku2Null() {
                this[this.tableKkhDetail.Hinmoku2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHinmoku3Null() {
                return this.IsNull(this.tableKkhDetail.Hinmoku3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHinmoku3Null() {
                this[this.tableKkhDetail.Hinmoku3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHimoku1Null() {
                return this.IsNull(this.tableKkhDetail.Himoku1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHimoku1Null() {
                this[this.tableKkhDetail.Himoku1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKikan1Null() {
                return this.IsNull(this.tableKkhDetail.Kikan1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKikan1Null() {
                this[this.tableKkhDetail.Kikan1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBumonCdNull() {
                return this.IsNull(this.tableKkhDetail.BumonCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBumonCdNull() {
                this[this.tableKkhDetail.BumonCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeikyuSakiBumonNull() {
                return this.IsNull(this.tableKkhDetail.SeikyuSakiBumonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeikyuSakiBumonNull() {
                this[this.tableKkhDetail.SeikyuSakiBumonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeikyuYyyymmNull() {
                return this.IsNull(this.tableKkhDetail.SeikyuYyyymmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeikyuYyyymmNull() {
                this[this.tableKkhDetail.SeikyuYyyymmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGokeiKingakuNull() {
                return this.IsNull(this.tableKkhDetail.GokeiKingakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGokeiKingakuNull() {
                this[this.tableKkhDetail.GokeiKingakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGokeiZeigakuNull() {
                return this.IsNull(this.tableKkhDetail.GokeiZeigakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGokeiZeigakuNull() {
                this[this.tableKkhDetail.GokeiZeigakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNaiyouNull() {
                return this.IsNull(this.tableKkhDetail.NaiyouColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNaiyouNull() {
                this[this.tableKkhDetail.NaiyouColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHimokuNull() {
                return this.IsNull(this.tableKkhDetail.HimokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHimokuNull() {
                this[this.tableKkhDetail.HimokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKikanNull() {
                return this.IsNull(this.tableKkhDetail.KikanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKikanNull() {
                this[this.tableKkhDetail.KikanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKingakuNull() {
                return this.IsNull(this.tableKkhDetail.KingakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKingakuNull() {
                this[this.tableKkhDetail.KingakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZeigakuNull() {
                return this.IsNull(this.tableKkhDetail.ZeigakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZeigakuNull() {
                this[this.tableKkhDetail.ZeigakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBikoNull() {
                return this.IsNull(this.tableKkhDetail.BikoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBikoNull() {
                this[this.tableKkhDetail.BikoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KkhDetailRowChangeEvent : global::System.EventArgs {
            
            private KkhDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRowChangeEvent(KkhDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591