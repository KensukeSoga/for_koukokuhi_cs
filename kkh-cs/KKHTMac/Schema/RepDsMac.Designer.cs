//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。//     ランタイム バージョン:2.0.50727.3643
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Mac.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepDsMac")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepDsMac : global::System.Data.DataSet {
        
        private RepmacDataTable tableRepmac;
        
        private RepmacSchklstDataTable tableRepmacSchklst;
        
        private RepmacPurchaseDataTable tableRepmacPurchase;
        
        private RepLicenseeDataTable tableRepLicensee;
        
        private dgvLicenseeDataTable tabledgvLicensee;
        
        private RepmacGetDenNumDataTable tableRepmacGetDenNum;
        
        private outputRequestDataTable tableoutputRequest;
        
        private RepmacUpdPurchaseDataTable tableRepmacUpdPurchase;
        
        private RepmacRequestDataTable tableRepmacRequest;
        
        private outputPurchaseDataTable tableoutputPurchase;
        
        private RepmacUpdRequestDataTable tableRepmacUpdRequest;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepDsMac() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepDsMac(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Repmac"] != null)) {
                    base.Tables.Add(new RepmacDataTable(ds.Tables["Repmac"]));
                }
                if ((ds.Tables["RepmacSchklst"] != null)) {
                    base.Tables.Add(new RepmacSchklstDataTable(ds.Tables["RepmacSchklst"]));
                }
                if ((ds.Tables["RepmacPurchase"] != null)) {
                    base.Tables.Add(new RepmacPurchaseDataTable(ds.Tables["RepmacPurchase"]));
                }
                if ((ds.Tables["RepLicensee"] != null)) {
                    base.Tables.Add(new RepLicenseeDataTable(ds.Tables["RepLicensee"]));
                }
                if ((ds.Tables["dgvLicensee"] != null)) {
                    base.Tables.Add(new dgvLicenseeDataTable(ds.Tables["dgvLicensee"]));
                }
                if ((ds.Tables["RepmacGetDenNum"] != null)) {
                    base.Tables.Add(new RepmacGetDenNumDataTable(ds.Tables["RepmacGetDenNum"]));
                }
                if ((ds.Tables["outputRequest"] != null)) {
                    base.Tables.Add(new outputRequestDataTable(ds.Tables["outputRequest"]));
                }
                if ((ds.Tables["RepmacUpdPurchase"] != null)) {
                    base.Tables.Add(new RepmacUpdPurchaseDataTable(ds.Tables["RepmacUpdPurchase"]));
                }
                if ((ds.Tables["RepmacRequest"] != null)) {
                    base.Tables.Add(new RepmacRequestDataTable(ds.Tables["RepmacRequest"]));
                }
                if ((ds.Tables["outputPurchase"] != null)) {
                    base.Tables.Add(new outputPurchaseDataTable(ds.Tables["outputPurchase"]));
                }
                if ((ds.Tables["RepmacUpdRequest"] != null)) {
                    base.Tables.Add(new RepmacUpdRequestDataTable(ds.Tables["RepmacUpdRequest"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepmacDataTable Repmac {
            get {
                return this.tableRepmac;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepmacSchklstDataTable RepmacSchklst {
            get {
                return this.tableRepmacSchklst;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepmacPurchaseDataTable RepmacPurchase {
            get {
                return this.tableRepmacPurchase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepLicenseeDataTable RepLicensee {
            get {
                return this.tableRepLicensee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dgvLicenseeDataTable dgvLicensee {
            get {
                return this.tabledgvLicensee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepmacGetDenNumDataTable RepmacGetDenNum {
            get {
                return this.tableRepmacGetDenNum;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outputRequestDataTable outputRequest {
            get {
                return this.tableoutputRequest;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepmacUpdPurchaseDataTable RepmacUpdPurchase {
            get {
                return this.tableRepmacUpdPurchase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepmacRequestDataTable RepmacRequest {
            get {
                return this.tableRepmacRequest;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outputPurchaseDataTable outputPurchase {
            get {
                return this.tableoutputPurchase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepmacUpdRequestDataTable RepmacUpdRequest {
            get {
                return this.tableRepmacUpdRequest;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepDsMac cln = ((RepDsMac)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Repmac"] != null)) {
                    base.Tables.Add(new RepmacDataTable(ds.Tables["Repmac"]));
                }
                if ((ds.Tables["RepmacSchklst"] != null)) {
                    base.Tables.Add(new RepmacSchklstDataTable(ds.Tables["RepmacSchklst"]));
                }
                if ((ds.Tables["RepmacPurchase"] != null)) {
                    base.Tables.Add(new RepmacPurchaseDataTable(ds.Tables["RepmacPurchase"]));
                }
                if ((ds.Tables["RepLicensee"] != null)) {
                    base.Tables.Add(new RepLicenseeDataTable(ds.Tables["RepLicensee"]));
                }
                if ((ds.Tables["dgvLicensee"] != null)) {
                    base.Tables.Add(new dgvLicenseeDataTable(ds.Tables["dgvLicensee"]));
                }
                if ((ds.Tables["RepmacGetDenNum"] != null)) {
                    base.Tables.Add(new RepmacGetDenNumDataTable(ds.Tables["RepmacGetDenNum"]));
                }
                if ((ds.Tables["outputRequest"] != null)) {
                    base.Tables.Add(new outputRequestDataTable(ds.Tables["outputRequest"]));
                }
                if ((ds.Tables["RepmacUpdPurchase"] != null)) {
                    base.Tables.Add(new RepmacUpdPurchaseDataTable(ds.Tables["RepmacUpdPurchase"]));
                }
                if ((ds.Tables["RepmacRequest"] != null)) {
                    base.Tables.Add(new RepmacRequestDataTable(ds.Tables["RepmacRequest"]));
                }
                if ((ds.Tables["outputPurchase"] != null)) {
                    base.Tables.Add(new outputPurchaseDataTable(ds.Tables["outputPurchase"]));
                }
                if ((ds.Tables["RepmacUpdRequest"] != null)) {
                    base.Tables.Add(new RepmacUpdRequestDataTable(ds.Tables["RepmacUpdRequest"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRepmac = ((RepmacDataTable)(base.Tables["Repmac"]));
            if ((initTable == true)) {
                if ((this.tableRepmac != null)) {
                    this.tableRepmac.InitVars();
                }
            }
            this.tableRepmacSchklst = ((RepmacSchklstDataTable)(base.Tables["RepmacSchklst"]));
            if ((initTable == true)) {
                if ((this.tableRepmacSchklst != null)) {
                    this.tableRepmacSchklst.InitVars();
                }
            }
            this.tableRepmacPurchase = ((RepmacPurchaseDataTable)(base.Tables["RepmacPurchase"]));
            if ((initTable == true)) {
                if ((this.tableRepmacPurchase != null)) {
                    this.tableRepmacPurchase.InitVars();
                }
            }
            this.tableRepLicensee = ((RepLicenseeDataTable)(base.Tables["RepLicensee"]));
            if ((initTable == true)) {
                if ((this.tableRepLicensee != null)) {
                    this.tableRepLicensee.InitVars();
                }
            }
            this.tabledgvLicensee = ((dgvLicenseeDataTable)(base.Tables["dgvLicensee"]));
            if ((initTable == true)) {
                if ((this.tabledgvLicensee != null)) {
                    this.tabledgvLicensee.InitVars();
                }
            }
            this.tableRepmacGetDenNum = ((RepmacGetDenNumDataTable)(base.Tables["RepmacGetDenNum"]));
            if ((initTable == true)) {
                if ((this.tableRepmacGetDenNum != null)) {
                    this.tableRepmacGetDenNum.InitVars();
                }
            }
            this.tableoutputRequest = ((outputRequestDataTable)(base.Tables["outputRequest"]));
            if ((initTable == true)) {
                if ((this.tableoutputRequest != null)) {
                    this.tableoutputRequest.InitVars();
                }
            }
            this.tableRepmacUpdPurchase = ((RepmacUpdPurchaseDataTable)(base.Tables["RepmacUpdPurchase"]));
            if ((initTable == true)) {
                if ((this.tableRepmacUpdPurchase != null)) {
                    this.tableRepmacUpdPurchase.InitVars();
                }
            }
            this.tableRepmacRequest = ((RepmacRequestDataTable)(base.Tables["RepmacRequest"]));
            if ((initTable == true)) {
                if ((this.tableRepmacRequest != null)) {
                    this.tableRepmacRequest.InitVars();
                }
            }
            this.tableoutputPurchase = ((outputPurchaseDataTable)(base.Tables["outputPurchase"]));
            if ((initTable == true)) {
                if ((this.tableoutputPurchase != null)) {
                    this.tableoutputPurchase.InitVars();
                }
            }
            this.tableRepmacUpdRequest = ((RepmacUpdRequestDataTable)(base.Tables["RepmacUpdRequest"]));
            if ((initTable == true)) {
                if ((this.tableRepmacUpdRequest != null)) {
                    this.tableRepmacUpdRequest.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepDsMac";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RepDsMac.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRepmac = new RepmacDataTable();
            base.Tables.Add(this.tableRepmac);
            this.tableRepmacSchklst = new RepmacSchklstDataTable();
            base.Tables.Add(this.tableRepmacSchklst);
            this.tableRepmacPurchase = new RepmacPurchaseDataTable();
            base.Tables.Add(this.tableRepmacPurchase);
            this.tableRepLicensee = new RepLicenseeDataTable();
            base.Tables.Add(this.tableRepLicensee);
            this.tabledgvLicensee = new dgvLicenseeDataTable();
            base.Tables.Add(this.tabledgvLicensee);
            this.tableRepmacGetDenNum = new RepmacGetDenNumDataTable();
            base.Tables.Add(this.tableRepmacGetDenNum);
            this.tableoutputRequest = new outputRequestDataTable();
            base.Tables.Add(this.tableoutputRequest);
            this.tableRepmacUpdPurchase = new RepmacUpdPurchaseDataTable();
            base.Tables.Add(this.tableRepmacUpdPurchase);
            this.tableRepmacRequest = new RepmacRequestDataTable();
            base.Tables.Add(this.tableRepmacRequest);
            this.tableoutputPurchase = new outputPurchaseDataTable();
            base.Tables.Add(this.tableoutputPurchase);
            this.tableRepmacUpdRequest = new RepmacUpdRequestDataTable();
            base.Tables.Add(this.tableRepmacUpdRequest);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepmac() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepmacSchklst() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepmacPurchase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepLicensee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedgvLicensee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepmacGetDenNum() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeoutputRequest() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepmacUpdPurchase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepmacRequest() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeoutputPurchase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepmacUpdRequest() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepDsMac ds = new RepDsMac();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void RepmacRowChangeEventHandler(object sender, RepmacRowChangeEvent e);
        
        public delegate void RepmacSchklstRowChangeEventHandler(object sender, RepmacSchklstRowChangeEvent e);
        
        public delegate void RepmacPurchaseRowChangeEventHandler(object sender, RepmacPurchaseRowChangeEvent e);
        
        public delegate void RepLicenseeRowChangeEventHandler(object sender, RepLicenseeRowChangeEvent e);
        
        public delegate void dgvLicenseeRowChangeEventHandler(object sender, dgvLicenseeRowChangeEvent e);
        
        public delegate void RepmacGetDenNumRowChangeEventHandler(object sender, RepmacGetDenNumRowChangeEvent e);
        
        public delegate void outputRequestRowChangeEventHandler(object sender, outputRequestRowChangeEvent e);
        
        public delegate void RepmacUpdPurchaseRowChangeEventHandler(object sender, RepmacUpdPurchaseRowChangeEvent e);
        
        public delegate void RepmacRequestRowChangeEventHandler(object sender, RepmacRequestRowChangeEvent e);
        
        public delegate void outputPurchaseRowChangeEventHandler(object sender, outputPurchaseRowChangeEvent e);
        
        public delegate void RepmacUpdRequestRowChangeEventHandler(object sender, RepmacUpdRequestRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepmacDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnseiGak;
            
            private global::System.Data.DataColumn columnDate1;
            
            private global::System.Data.DataColumn columnkbn1;
            
            private global::System.Data.DataColumn columncode1;
            
            private global::System.Data.DataColumn columncode2;
            
            private global::System.Data.DataColumn columncode4;
            
            private global::System.Data.DataColumn columnname1;
            
            private global::System.Data.DataColumn columnname2;
            
            private global::System.Data.DataColumn columnname3;
            
            private global::System.Data.DataColumn columnkngk1;
            
            private global::System.Data.DataColumn columnkngk2;
            
            private global::System.Data.DataColumn columnsonota1;
            
            private global::System.Data.DataColumn columnjyutNo;
            
            private global::System.Data.DataColumn columnjyMeiNo;
            
            private global::System.Data.DataColumn columnurMeiNo;
            
            private global::System.Data.DataColumn columnrenbn;
            
            private global::System.Data.DataColumn columnsonota2;
            
            private global::System.Data.DataColumn columnRitu1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacDataTable() {
                this.TableName = "Repmac";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepmacDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiGakColumn {
                get {
                    return this.columnseiGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date1Column {
                get {
                    return this.columnDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kbn1Column {
                get {
                    return this.columnkbn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code1Column {
                get {
                    return this.columncode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code2Column {
                get {
                    return this.columncode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code4Column {
                get {
                    return this.columncode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1Column {
                get {
                    return this.columnname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2Column {
                get {
                    return this.columnname2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3Column {
                get {
                    return this.columnname3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk1Column {
                get {
                    return this.columnkngk1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk2Column {
                get {
                    return this.columnkngk2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota1Column {
                get {
                    return this.columnsonota1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutNoColumn {
                get {
                    return this.columnjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyMeiNoColumn {
                get {
                    return this.columnjyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urMeiNoColumn {
                get {
                    return this.columnurMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn renbnColumn {
                get {
                    return this.columnrenbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota2Column {
                get {
                    return this.columnsonota2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ritu1Column {
                get {
                    return this.columnRitu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRow this[int index] {
                get {
                    return ((RepmacRow)(this.Rows[index]));
                }
            }
            
            public event RepmacRowChangeEventHandler RepmacRowChanging;
            
            public event RepmacRowChangeEventHandler RepmacRowChanged;
            
            public event RepmacRowChangeEventHandler RepmacRowDeleting;
            
            public event RepmacRowChangeEventHandler RepmacRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepmacRow(RepmacRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRow AddRepmacRow(
                        decimal seiGak, 
                        string Date1, 
                        string kbn1, 
                        string code1, 
                        string code2, 
                        string code4, 
                        string name1, 
                        string name2, 
                        string name3, 
                        decimal kngk1, 
                        decimal kngk2, 
                        string sonota1, 
                        string jyutNo, 
                        string jyMeiNo, 
                        string urMeiNo, 
                        string renbn, 
                        string sonota2, 
                        decimal Ritu1) {
                RepmacRow rowRepmacRow = ((RepmacRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        seiGak,
                        Date1,
                        kbn1,
                        code1,
                        code2,
                        code4,
                        name1,
                        name2,
                        name3,
                        kngk1,
                        kngk2,
                        sonota1,
                        jyutNo,
                        jyMeiNo,
                        urMeiNo,
                        renbn,
                        sonota2,
                        Ritu1};
                rowRepmacRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepmacRow);
                return rowRepmacRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepmacDataTable cln = ((RepmacDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepmacDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnseiGak = base.Columns["seiGak"];
                this.columnDate1 = base.Columns["Date1"];
                this.columnkbn1 = base.Columns["kbn1"];
                this.columncode1 = base.Columns["code1"];
                this.columncode2 = base.Columns["code2"];
                this.columncode4 = base.Columns["code4"];
                this.columnname1 = base.Columns["name1"];
                this.columnname2 = base.Columns["name2"];
                this.columnname3 = base.Columns["name3"];
                this.columnkngk1 = base.Columns["kngk1"];
                this.columnkngk2 = base.Columns["kngk2"];
                this.columnsonota1 = base.Columns["sonota1"];
                this.columnjyutNo = base.Columns["jyutNo"];
                this.columnjyMeiNo = base.Columns["jyMeiNo"];
                this.columnurMeiNo = base.Columns["urMeiNo"];
                this.columnrenbn = base.Columns["renbn"];
                this.columnsonota2 = base.Columns["sonota2"];
                this.columnRitu1 = base.Columns["Ritu1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnseiGak = new global::System.Data.DataColumn("seiGak", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiGak);
                this.columnDate1 = new global::System.Data.DataColumn("Date1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate1);
                this.columnkbn1 = new global::System.Data.DataColumn("kbn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkbn1);
                this.columncode1 = new global::System.Data.DataColumn("code1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode1);
                this.columncode2 = new global::System.Data.DataColumn("code2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode2);
                this.columncode4 = new global::System.Data.DataColumn("code4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode4);
                this.columnname1 = new global::System.Data.DataColumn("name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1);
                this.columnname2 = new global::System.Data.DataColumn("name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2);
                this.columnname3 = new global::System.Data.DataColumn("name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3);
                this.columnkngk1 = new global::System.Data.DataColumn("kngk1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk1);
                this.columnkngk2 = new global::System.Data.DataColumn("kngk2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk2);
                this.columnsonota1 = new global::System.Data.DataColumn("sonota1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota1);
                this.columnjyutNo = new global::System.Data.DataColumn("jyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutNo);
                this.columnjyMeiNo = new global::System.Data.DataColumn("jyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyMeiNo);
                this.columnurMeiNo = new global::System.Data.DataColumn("urMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurMeiNo);
                this.columnrenbn = new global::System.Data.DataColumn("renbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrenbn);
                this.columnsonota2 = new global::System.Data.DataColumn("sonota2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota2);
                this.columnRitu1 = new global::System.Data.DataColumn("Ritu1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRitu1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRow NewRepmacRow() {
                return ((RepmacRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepmacRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepmacRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepmacRowChanged != null)) {
                    this.RepmacRowChanged(this, new RepmacRowChangeEvent(((RepmacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepmacRowChanging != null)) {
                    this.RepmacRowChanging(this, new RepmacRowChangeEvent(((RepmacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepmacRowDeleted != null)) {
                    this.RepmacRowDeleted(this, new RepmacRowChangeEvent(((RepmacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepmacRowDeleting != null)) {
                    this.RepmacRowDeleting(this, new RepmacRowChangeEvent(((RepmacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepmacRow(RepmacRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepmacDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepmacSchklstDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnseiGak;
            
            private global::System.Data.DataColumn columncode2;
            
            private global::System.Data.DataColumn columncode4;
            
            private global::System.Data.DataColumn columnname1;
            
            private global::System.Data.DataColumn columnname2;
            
            private global::System.Data.DataColumn columnname5;
            
            private global::System.Data.DataColumn columnname4;
            
            private global::System.Data.DataColumn columnjyutNo;
            
            private global::System.Data.DataColumn columnjyMeiNo;
            
            private global::System.Data.DataColumn columnurMeiNo;
            
            private global::System.Data.DataColumn columnRitu1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacSchklstDataTable() {
                this.TableName = "RepmacSchklst";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacSchklstDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepmacSchklstDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiGakColumn {
                get {
                    return this.columnseiGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code2Column {
                get {
                    return this.columncode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code4Column {
                get {
                    return this.columncode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1Column {
                get {
                    return this.columnname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2Column {
                get {
                    return this.columnname2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name5Column {
                get {
                    return this.columnname5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name4Column {
                get {
                    return this.columnname4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutNoColumn {
                get {
                    return this.columnjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyMeiNoColumn {
                get {
                    return this.columnjyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urMeiNoColumn {
                get {
                    return this.columnurMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ritu1Column {
                get {
                    return this.columnRitu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacSchklstRow this[int index] {
                get {
                    return ((RepmacSchklstRow)(this.Rows[index]));
                }
            }
            
            public event RepmacSchklstRowChangeEventHandler RepmacSchklstRowChanging;
            
            public event RepmacSchklstRowChangeEventHandler RepmacSchklstRowChanged;
            
            public event RepmacSchklstRowChangeEventHandler RepmacSchklstRowDeleting;
            
            public event RepmacSchklstRowChangeEventHandler RepmacSchklstRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepmacSchklstRow(RepmacSchklstRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacSchklstRow AddRepmacSchklstRow(decimal seiGak, string code2, string code4, string name1, string name2, string name5, string name4, string jyutNo, string jyMeiNo, string urMeiNo, decimal Ritu1) {
                RepmacSchklstRow rowRepmacSchklstRow = ((RepmacSchklstRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        seiGak,
                        code2,
                        code4,
                        name1,
                        name2,
                        name5,
                        name4,
                        jyutNo,
                        jyMeiNo,
                        urMeiNo,
                        Ritu1};
                rowRepmacSchklstRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepmacSchklstRow);
                return rowRepmacSchklstRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepmacSchklstDataTable cln = ((RepmacSchklstDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepmacSchklstDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnseiGak = base.Columns["seiGak"];
                this.columncode2 = base.Columns["code2"];
                this.columncode4 = base.Columns["code4"];
                this.columnname1 = base.Columns["name1"];
                this.columnname2 = base.Columns["name2"];
                this.columnname5 = base.Columns["name5"];
                this.columnname4 = base.Columns["name4"];
                this.columnjyutNo = base.Columns["jyutNo"];
                this.columnjyMeiNo = base.Columns["jyMeiNo"];
                this.columnurMeiNo = base.Columns["urMeiNo"];
                this.columnRitu1 = base.Columns["Ritu1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnseiGak = new global::System.Data.DataColumn("seiGak", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiGak);
                this.columncode2 = new global::System.Data.DataColumn("code2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode2);
                this.columncode4 = new global::System.Data.DataColumn("code4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode4);
                this.columnname1 = new global::System.Data.DataColumn("name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1);
                this.columnname2 = new global::System.Data.DataColumn("name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2);
                this.columnname5 = new global::System.Data.DataColumn("name5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname5);
                this.columnname4 = new global::System.Data.DataColumn("name4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname4);
                this.columnjyutNo = new global::System.Data.DataColumn("jyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutNo);
                this.columnjyMeiNo = new global::System.Data.DataColumn("jyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyMeiNo);
                this.columnurMeiNo = new global::System.Data.DataColumn("urMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurMeiNo);
                this.columnRitu1 = new global::System.Data.DataColumn("Ritu1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRitu1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacSchklstRow NewRepmacSchklstRow() {
                return ((RepmacSchklstRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepmacSchklstRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepmacSchklstRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepmacSchklstRowChanged != null)) {
                    this.RepmacSchklstRowChanged(this, new RepmacSchklstRowChangeEvent(((RepmacSchklstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepmacSchklstRowChanging != null)) {
                    this.RepmacSchklstRowChanging(this, new RepmacSchklstRowChangeEvent(((RepmacSchklstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepmacSchklstRowDeleted != null)) {
                    this.RepmacSchklstRowDeleted(this, new RepmacSchklstRowChangeEvent(((RepmacSchklstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepmacSchklstRowDeleting != null)) {
                    this.RepmacSchklstRowDeleting(this, new RepmacSchklstRowChangeEvent(((RepmacSchklstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepmacSchklstRow(RepmacSchklstRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepmacSchklstDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepmacPurchaseDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnseiGak;
            
            private global::System.Data.DataColumn columnDate1;
            
            private global::System.Data.DataColumn columnkbn1;
            
            private global::System.Data.DataColumn columncode1;
            
            private global::System.Data.DataColumn columncode4;
            
            private global::System.Data.DataColumn columnname1;
            
            private global::System.Data.DataColumn columnname2;
            
            private global::System.Data.DataColumn columnname3;
            
            private global::System.Data.DataColumn columnkngk1;
            
            private global::System.Data.DataColumn columnkngk2;
            
            private global::System.Data.DataColumn columnsonota1;
            
            private global::System.Data.DataColumn columnjyutNo;
            
            private global::System.Data.DataColumn columnjyMeiNo;
            
            private global::System.Data.DataColumn columnurMeiNo;
            
            private global::System.Data.DataColumn columnrenbn;
            
            private global::System.Data.DataColumn columnsyamei;
            
            private global::System.Data.DataColumn columnsplitflg;
            
            private global::System.Data.DataColumn columnsonota2;
            
            private global::System.Data.DataColumn columnRitu1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacPurchaseDataTable() {
                this.TableName = "RepmacPurchase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacPurchaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepmacPurchaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiGakColumn {
                get {
                    return this.columnseiGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date1Column {
                get {
                    return this.columnDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kbn1Column {
                get {
                    return this.columnkbn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code1Column {
                get {
                    return this.columncode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code4Column {
                get {
                    return this.columncode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1Column {
                get {
                    return this.columnname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2Column {
                get {
                    return this.columnname2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3Column {
                get {
                    return this.columnname3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk1Column {
                get {
                    return this.columnkngk1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk2Column {
                get {
                    return this.columnkngk2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota1Column {
                get {
                    return this.columnsonota1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutNoColumn {
                get {
                    return this.columnjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyMeiNoColumn {
                get {
                    return this.columnjyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urMeiNoColumn {
                get {
                    return this.columnurMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn renbnColumn {
                get {
                    return this.columnrenbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn syameiColumn {
                get {
                    return this.columnsyamei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn splitflgColumn {
                get {
                    return this.columnsplitflg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota2Column {
                get {
                    return this.columnsonota2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ritu1Column {
                get {
                    return this.columnRitu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacPurchaseRow this[int index] {
                get {
                    return ((RepmacPurchaseRow)(this.Rows[index]));
                }
            }
            
            public event RepmacPurchaseRowChangeEventHandler RepmacPurchaseRowChanging;
            
            public event RepmacPurchaseRowChangeEventHandler RepmacPurchaseRowChanged;
            
            public event RepmacPurchaseRowChangeEventHandler RepmacPurchaseRowDeleting;
            
            public event RepmacPurchaseRowChangeEventHandler RepmacPurchaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepmacPurchaseRow(RepmacPurchaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacPurchaseRow AddRepmacPurchaseRow(
                        decimal seiGak, 
                        string Date1, 
                        string kbn1, 
                        string code1, 
                        string code4, 
                        string name1, 
                        string name2, 
                        string name3, 
                        decimal kngk1, 
                        decimal kngk2, 
                        string sonota1, 
                        string jyutNo, 
                        string jyMeiNo, 
                        string urMeiNo, 
                        string renbn, 
                        string syamei, 
                        string splitflg, 
                        string sonota2, 
                        decimal Ritu1) {
                RepmacPurchaseRow rowRepmacPurchaseRow = ((RepmacPurchaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        seiGak,
                        Date1,
                        kbn1,
                        code1,
                        code4,
                        name1,
                        name2,
                        name3,
                        kngk1,
                        kngk2,
                        sonota1,
                        jyutNo,
                        jyMeiNo,
                        urMeiNo,
                        renbn,
                        syamei,
                        splitflg,
                        sonota2,
                        Ritu1};
                rowRepmacPurchaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepmacPurchaseRow);
                return rowRepmacPurchaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepmacPurchaseDataTable cln = ((RepmacPurchaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepmacPurchaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnseiGak = base.Columns["seiGak"];
                this.columnDate1 = base.Columns["Date1"];
                this.columnkbn1 = base.Columns["kbn1"];
                this.columncode1 = base.Columns["code1"];
                this.columncode4 = base.Columns["code4"];
                this.columnname1 = base.Columns["name1"];
                this.columnname2 = base.Columns["name2"];
                this.columnname3 = base.Columns["name3"];
                this.columnkngk1 = base.Columns["kngk1"];
                this.columnkngk2 = base.Columns["kngk2"];
                this.columnsonota1 = base.Columns["sonota1"];
                this.columnjyutNo = base.Columns["jyutNo"];
                this.columnjyMeiNo = base.Columns["jyMeiNo"];
                this.columnurMeiNo = base.Columns["urMeiNo"];
                this.columnrenbn = base.Columns["renbn"];
                this.columnsyamei = base.Columns["syamei"];
                this.columnsplitflg = base.Columns["splitflg"];
                this.columnsonota2 = base.Columns["sonota2"];
                this.columnRitu1 = base.Columns["Ritu1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnseiGak = new global::System.Data.DataColumn("seiGak", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiGak);
                this.columnDate1 = new global::System.Data.DataColumn("Date1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate1);
                this.columnkbn1 = new global::System.Data.DataColumn("kbn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkbn1);
                this.columncode1 = new global::System.Data.DataColumn("code1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode1);
                this.columncode4 = new global::System.Data.DataColumn("code4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode4);
                this.columnname1 = new global::System.Data.DataColumn("name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1);
                this.columnname2 = new global::System.Data.DataColumn("name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2);
                this.columnname3 = new global::System.Data.DataColumn("name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3);
                this.columnkngk1 = new global::System.Data.DataColumn("kngk1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk1);
                this.columnkngk2 = new global::System.Data.DataColumn("kngk2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk2);
                this.columnsonota1 = new global::System.Data.DataColumn("sonota1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota1);
                this.columnjyutNo = new global::System.Data.DataColumn("jyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutNo);
                this.columnjyMeiNo = new global::System.Data.DataColumn("jyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyMeiNo);
                this.columnurMeiNo = new global::System.Data.DataColumn("urMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurMeiNo);
                this.columnrenbn = new global::System.Data.DataColumn("renbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrenbn);
                this.columnsyamei = new global::System.Data.DataColumn("syamei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsyamei);
                this.columnsplitflg = new global::System.Data.DataColumn("splitflg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsplitflg);
                this.columnsonota2 = new global::System.Data.DataColumn("sonota2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota2);
                this.columnRitu1 = new global::System.Data.DataColumn("Ritu1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRitu1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacPurchaseRow NewRepmacPurchaseRow() {
                return ((RepmacPurchaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepmacPurchaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepmacPurchaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepmacPurchaseRowChanged != null)) {
                    this.RepmacPurchaseRowChanged(this, new RepmacPurchaseRowChangeEvent(((RepmacPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepmacPurchaseRowChanging != null)) {
                    this.RepmacPurchaseRowChanging(this, new RepmacPurchaseRowChangeEvent(((RepmacPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepmacPurchaseRowDeleted != null)) {
                    this.RepmacPurchaseRowDeleted(this, new RepmacPurchaseRowChangeEvent(((RepmacPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepmacPurchaseRowDeleting != null)) {
                    this.RepmacPurchaseRowDeleting(this, new RepmacPurchaseRowChangeEvent(((RepmacPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepmacPurchaseRow(RepmacPurchaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepmacPurchaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepLicenseeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnseiGak;
            
            private global::System.Data.DataColumn columncode1;
            
            private global::System.Data.DataColumn columnname1;
            
            private global::System.Data.DataColumn columnname2;
            
            private global::System.Data.DataColumn columnname3;
            
            private global::System.Data.DataColumn columnkngk1;
            
            private global::System.Data.DataColumn columnkngk2;
            
            private global::System.Data.DataColumn columnsonota1;
            
            private global::System.Data.DataColumn columnjyutNo;
            
            private global::System.Data.DataColumn columnjymeiNo;
            
            private global::System.Data.DataColumn columnurMeiNo;
            
            private global::System.Data.DataColumn columnrenbn;
            
            private global::System.Data.DataColumn columnfield4;
            
            private global::System.Data.DataColumn columnfield12;
            
            private global::System.Data.DataColumn columnfield5;
            
            private global::System.Data.DataColumn columnfield6;
            
            private global::System.Data.DataColumn columnfield10;
            
            private global::System.Data.DataColumn columnfield11;
            
            private global::System.Data.DataColumn columnfield20;
            
            private global::System.Data.DataColumn columnsonota2;
            
            private global::System.Data.DataColumn columnRitu1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepLicenseeDataTable() {
                this.TableName = "RepLicensee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepLicenseeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepLicenseeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiGakColumn {
                get {
                    return this.columnseiGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code1Column {
                get {
                    return this.columncode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1Column {
                get {
                    return this.columnname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2Column {
                get {
                    return this.columnname2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3Column {
                get {
                    return this.columnname3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk1Column {
                get {
                    return this.columnkngk1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk2Column {
                get {
                    return this.columnkngk2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota1Column {
                get {
                    return this.columnsonota1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutNoColumn {
                get {
                    return this.columnjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jymeiNoColumn {
                get {
                    return this.columnjymeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urMeiNoColumn {
                get {
                    return this.columnurMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn renbnColumn {
                get {
                    return this.columnrenbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field4Column {
                get {
                    return this.columnfield4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field12Column {
                get {
                    return this.columnfield12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field5Column {
                get {
                    return this.columnfield5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field6Column {
                get {
                    return this.columnfield6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field10Column {
                get {
                    return this.columnfield10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field11Column {
                get {
                    return this.columnfield11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field20Column {
                get {
                    return this.columnfield20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota2Column {
                get {
                    return this.columnsonota2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ritu1Column {
                get {
                    return this.columnRitu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepLicenseeRow this[int index] {
                get {
                    return ((RepLicenseeRow)(this.Rows[index]));
                }
            }
            
            public event RepLicenseeRowChangeEventHandler RepLicenseeRowChanging;
            
            public event RepLicenseeRowChangeEventHandler RepLicenseeRowChanged;
            
            public event RepLicenseeRowChangeEventHandler RepLicenseeRowDeleting;
            
            public event RepLicenseeRowChangeEventHandler RepLicenseeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepLicenseeRow(RepLicenseeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepLicenseeRow AddRepLicenseeRow(
                        string seiGak, 
                        string code1, 
                        string name1, 
                        string name2, 
                        string name3, 
                        string kngk1, 
                        string kngk2, 
                        string sonota1, 
                        string jyutNo, 
                        string jymeiNo, 
                        string urMeiNo, 
                        string renbn, 
                        string field4, 
                        string field12, 
                        string field5, 
                        string field6, 
                        string field10, 
                        string field11, 
                        string field20, 
                        string sonota2, 
                        string Ritu1) {
                RepLicenseeRow rowRepLicenseeRow = ((RepLicenseeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        seiGak,
                        code1,
                        name1,
                        name2,
                        name3,
                        kngk1,
                        kngk2,
                        sonota1,
                        jyutNo,
                        jymeiNo,
                        urMeiNo,
                        renbn,
                        field4,
                        field12,
                        field5,
                        field6,
                        field10,
                        field11,
                        field20,
                        sonota2,
                        Ritu1};
                rowRepLicenseeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepLicenseeRow);
                return rowRepLicenseeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepLicenseeDataTable cln = ((RepLicenseeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepLicenseeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnseiGak = base.Columns["seiGak"];
                this.columncode1 = base.Columns["code1"];
                this.columnname1 = base.Columns["name1"];
                this.columnname2 = base.Columns["name2"];
                this.columnname3 = base.Columns["name3"];
                this.columnkngk1 = base.Columns["kngk1"];
                this.columnkngk2 = base.Columns["kngk2"];
                this.columnsonota1 = base.Columns["sonota1"];
                this.columnjyutNo = base.Columns["jyutNo"];
                this.columnjymeiNo = base.Columns["jymeiNo"];
                this.columnurMeiNo = base.Columns["urMeiNo"];
                this.columnrenbn = base.Columns["renbn"];
                this.columnfield4 = base.Columns["field4"];
                this.columnfield12 = base.Columns["field12"];
                this.columnfield5 = base.Columns["field5"];
                this.columnfield6 = base.Columns["field6"];
                this.columnfield10 = base.Columns["field10"];
                this.columnfield11 = base.Columns["field11"];
                this.columnfield20 = base.Columns["field20"];
                this.columnsonota2 = base.Columns["sonota2"];
                this.columnRitu1 = base.Columns["Ritu1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnseiGak = new global::System.Data.DataColumn("seiGak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiGak);
                this.columncode1 = new global::System.Data.DataColumn("code1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode1);
                this.columnname1 = new global::System.Data.DataColumn("name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1);
                this.columnname2 = new global::System.Data.DataColumn("name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2);
                this.columnname3 = new global::System.Data.DataColumn("name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3);
                this.columnkngk1 = new global::System.Data.DataColumn("kngk1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk1);
                this.columnkngk2 = new global::System.Data.DataColumn("kngk2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk2);
                this.columnsonota1 = new global::System.Data.DataColumn("sonota1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota1);
                this.columnjyutNo = new global::System.Data.DataColumn("jyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutNo);
                this.columnjymeiNo = new global::System.Data.DataColumn("jymeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjymeiNo);
                this.columnurMeiNo = new global::System.Data.DataColumn("urMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurMeiNo);
                this.columnrenbn = new global::System.Data.DataColumn("renbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrenbn);
                this.columnfield4 = new global::System.Data.DataColumn("field4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield4);
                this.columnfield12 = new global::System.Data.DataColumn("field12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield12);
                this.columnfield5 = new global::System.Data.DataColumn("field5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield5);
                this.columnfield6 = new global::System.Data.DataColumn("field6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield6);
                this.columnfield10 = new global::System.Data.DataColumn("field10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield10);
                this.columnfield11 = new global::System.Data.DataColumn("field11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield11);
                this.columnfield20 = new global::System.Data.DataColumn("field20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield20);
                this.columnsonota2 = new global::System.Data.DataColumn("sonota2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota2);
                this.columnRitu1 = new global::System.Data.DataColumn("Ritu1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRitu1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepLicenseeRow NewRepLicenseeRow() {
                return ((RepLicenseeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepLicenseeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepLicenseeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepLicenseeRowChanged != null)) {
                    this.RepLicenseeRowChanged(this, new RepLicenseeRowChangeEvent(((RepLicenseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepLicenseeRowChanging != null)) {
                    this.RepLicenseeRowChanging(this, new RepLicenseeRowChangeEvent(((RepLicenseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepLicenseeRowDeleted != null)) {
                    this.RepLicenseeRowDeleted(this, new RepLicenseeRowChangeEvent(((RepLicenseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepLicenseeRowDeleting != null)) {
                    this.RepLicenseeRowDeleting(this, new RepLicenseeRowChangeEvent(((RepLicenseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepLicenseeRow(RepLicenseeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepLicenseeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dgvLicenseeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntoriCd;
            
            private global::System.Data.DataColumn columnlicenseeSyaName;
            
            private global::System.Data.DataColumn columntenCd;
            
            private global::System.Data.DataColumn columntenName;
            
            private global::System.Data.DataColumn columnuriMeiNo;
            
            private global::System.Data.DataColumn columnadress;
            
            private global::System.Data.DataColumn columnkenName;
            
            private global::System.Data.DataColumn columnrepresentName;
            
            private global::System.Data.DataColumn columnsuRyo;
            
            private global::System.Data.DataColumn columntanka;
            
            private global::System.Data.DataColumn columnkngk;
            
            private global::System.Data.DataColumn columndenpyoNum;
            
            private global::System.Data.DataColumn columnbunCd;
            
            private global::System.Data.DataColumn columnadress2;
            
            private global::System.Data.DataColumn columnRitu1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dgvLicenseeDataTable() {
                this.TableName = "dgvLicensee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dgvLicenseeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dgvLicenseeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn toriCdColumn {
                get {
                    return this.columntoriCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn licenseeSyaNameColumn {
                get {
                    return this.columnlicenseeSyaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenCdColumn {
                get {
                    return this.columntenCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenNameColumn {
                get {
                    return this.columntenName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uriMeiNoColumn {
                get {
                    return this.columnuriMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn adressColumn {
                get {
                    return this.columnadress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kenNameColumn {
                get {
                    return this.columnkenName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn representNameColumn {
                get {
                    return this.columnrepresentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn suRyoColumn {
                get {
                    return this.columnsuRyo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tankaColumn {
                get {
                    return this.columntanka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngkColumn {
                get {
                    return this.columnkngk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn denpyoNumColumn {
                get {
                    return this.columndenpyoNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bunCdColumn {
                get {
                    return this.columnbunCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn adress2Column {
                get {
                    return this.columnadress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ritu1Column {
                get {
                    return this.columnRitu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dgvLicenseeRow this[int index] {
                get {
                    return ((dgvLicenseeRow)(this.Rows[index]));
                }
            }
            
            public event dgvLicenseeRowChangeEventHandler dgvLicenseeRowChanging;
            
            public event dgvLicenseeRowChangeEventHandler dgvLicenseeRowChanged;
            
            public event dgvLicenseeRowChangeEventHandler dgvLicenseeRowDeleting;
            
            public event dgvLicenseeRowChangeEventHandler dgvLicenseeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddgvLicenseeRow(dgvLicenseeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dgvLicenseeRow AdddgvLicenseeRow(string toriCd, string licenseeSyaName, string tenCd, string tenName, string uriMeiNo, string adress, string kenName, string representName, string suRyo, string tanka, string kngk, string denpyoNum, string bunCd, string adress2, string Ritu1) {
                dgvLicenseeRow rowdgvLicenseeRow = ((dgvLicenseeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        toriCd,
                        licenseeSyaName,
                        tenCd,
                        tenName,
                        uriMeiNo,
                        adress,
                        kenName,
                        representName,
                        suRyo,
                        tanka,
                        kngk,
                        denpyoNum,
                        bunCd,
                        adress2,
                        Ritu1};
                rowdgvLicenseeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdgvLicenseeRow);
                return rowdgvLicenseeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dgvLicenseeDataTable cln = ((dgvLicenseeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dgvLicenseeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntoriCd = base.Columns["toriCd"];
                this.columnlicenseeSyaName = base.Columns["licenseeSyaName"];
                this.columntenCd = base.Columns["tenCd"];
                this.columntenName = base.Columns["tenName"];
                this.columnuriMeiNo = base.Columns["uriMeiNo"];
                this.columnadress = base.Columns["adress"];
                this.columnkenName = base.Columns["kenName"];
                this.columnrepresentName = base.Columns["representName"];
                this.columnsuRyo = base.Columns["suRyo"];
                this.columntanka = base.Columns["tanka"];
                this.columnkngk = base.Columns["kngk"];
                this.columndenpyoNum = base.Columns["denpyoNum"];
                this.columnbunCd = base.Columns["bunCd"];
                this.columnadress2 = base.Columns["adress2"];
                this.columnRitu1 = base.Columns["Ritu1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntoriCd = new global::System.Data.DataColumn("toriCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntoriCd);
                this.columnlicenseeSyaName = new global::System.Data.DataColumn("licenseeSyaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlicenseeSyaName);
                this.columntenCd = new global::System.Data.DataColumn("tenCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenCd);
                this.columntenName = new global::System.Data.DataColumn("tenName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenName);
                this.columnuriMeiNo = new global::System.Data.DataColumn("uriMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuriMeiNo);
                this.columnadress = new global::System.Data.DataColumn("adress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadress);
                this.columnkenName = new global::System.Data.DataColumn("kenName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkenName);
                this.columnrepresentName = new global::System.Data.DataColumn("representName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepresentName);
                this.columnsuRyo = new global::System.Data.DataColumn("suRyo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuRyo);
                this.columntanka = new global::System.Data.DataColumn("tanka", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntanka);
                this.columnkngk = new global::System.Data.DataColumn("kngk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk);
                this.columndenpyoNum = new global::System.Data.DataColumn("denpyoNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndenpyoNum);
                this.columnbunCd = new global::System.Data.DataColumn("bunCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbunCd);
                this.columnadress2 = new global::System.Data.DataColumn("adress2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadress2);
                this.columnRitu1 = new global::System.Data.DataColumn("Ritu1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRitu1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dgvLicenseeRow NewdgvLicenseeRow() {
                return ((dgvLicenseeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dgvLicenseeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dgvLicenseeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dgvLicenseeRowChanged != null)) {
                    this.dgvLicenseeRowChanged(this, new dgvLicenseeRowChangeEvent(((dgvLicenseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dgvLicenseeRowChanging != null)) {
                    this.dgvLicenseeRowChanging(this, new dgvLicenseeRowChangeEvent(((dgvLicenseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dgvLicenseeRowDeleted != null)) {
                    this.dgvLicenseeRowDeleted(this, new dgvLicenseeRowChangeEvent(((dgvLicenseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dgvLicenseeRowDeleting != null)) {
                    this.dgvLicenseeRowDeleting(this, new dgvLicenseeRowChangeEvent(((dgvLicenseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedgvLicenseeRow(dgvLicenseeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dgvLicenseeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepmacGetDenNumDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDenNum;
            
            private global::System.Data.DataColumn columnDenNumMax;
            
            private global::System.Data.DataColumn columnTrhskCd;
            
            private global::System.Data.DataColumn columnTelNo;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnSetDenpyo;
            
            private global::System.Data.DataColumn columnSetLabel;
            
            private global::System.Data.DataColumn columnComTax;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacGetDenNumDataTable() {
                this.TableName = "RepmacGetDenNum";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacGetDenNumDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepmacGetDenNumDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DenNumColumn {
                get {
                    return this.columnDenNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DenNumMaxColumn {
                get {
                    return this.columnDenNumMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrhskCdColumn {
                get {
                    return this.columnTrhskCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelNoColumn {
                get {
                    return this.columnTelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetDenpyoColumn {
                get {
                    return this.columnSetDenpyo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetLabelColumn {
                get {
                    return this.columnSetLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComTaxColumn {
                get {
                    return this.columnComTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacGetDenNumRow this[int index] {
                get {
                    return ((RepmacGetDenNumRow)(this.Rows[index]));
                }
            }
            
            public event RepmacGetDenNumRowChangeEventHandler RepmacGetDenNumRowChanging;
            
            public event RepmacGetDenNumRowChangeEventHandler RepmacGetDenNumRowChanged;
            
            public event RepmacGetDenNumRowChangeEventHandler RepmacGetDenNumRowDeleting;
            
            public event RepmacGetDenNumRowChangeEventHandler RepmacGetDenNumRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepmacGetDenNumRow(RepmacGetDenNumRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacGetDenNumRow AddRepmacGetDenNumRow(string DenNum, string DenNumMax, string TrhskCd, string TelNo, string Address, string SetDenpyo, string SetLabel, decimal ComTax) {
                RepmacGetDenNumRow rowRepmacGetDenNumRow = ((RepmacGetDenNumRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DenNum,
                        DenNumMax,
                        TrhskCd,
                        TelNo,
                        Address,
                        SetDenpyo,
                        SetLabel,
                        ComTax};
                rowRepmacGetDenNumRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepmacGetDenNumRow);
                return rowRepmacGetDenNumRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepmacGetDenNumDataTable cln = ((RepmacGetDenNumDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepmacGetDenNumDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDenNum = base.Columns["DenNum"];
                this.columnDenNumMax = base.Columns["DenNumMax"];
                this.columnTrhskCd = base.Columns["TrhskCd"];
                this.columnTelNo = base.Columns["TelNo"];
                this.columnAddress = base.Columns["Address"];
                this.columnSetDenpyo = base.Columns["SetDenpyo"];
                this.columnSetLabel = base.Columns["SetLabel"];
                this.columnComTax = base.Columns["ComTax"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDenNum = new global::System.Data.DataColumn("DenNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDenNum);
                this.columnDenNumMax = new global::System.Data.DataColumn("DenNumMax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDenNumMax);
                this.columnTrhskCd = new global::System.Data.DataColumn("TrhskCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrhskCd);
                this.columnTelNo = new global::System.Data.DataColumn("TelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelNo);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnSetDenpyo = new global::System.Data.DataColumn("SetDenpyo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetDenpyo);
                this.columnSetLabel = new global::System.Data.DataColumn("SetLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetLabel);
                this.columnComTax = new global::System.Data.DataColumn("ComTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComTax);
                this.columnTelNo.Caption = "Address";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacGetDenNumRow NewRepmacGetDenNumRow() {
                return ((RepmacGetDenNumRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepmacGetDenNumRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepmacGetDenNumRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepmacGetDenNumRowChanged != null)) {
                    this.RepmacGetDenNumRowChanged(this, new RepmacGetDenNumRowChangeEvent(((RepmacGetDenNumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepmacGetDenNumRowChanging != null)) {
                    this.RepmacGetDenNumRowChanging(this, new RepmacGetDenNumRowChangeEvent(((RepmacGetDenNumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepmacGetDenNumRowDeleted != null)) {
                    this.RepmacGetDenNumRowDeleted(this, new RepmacGetDenNumRowChangeEvent(((RepmacGetDenNumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepmacGetDenNumRowDeleting != null)) {
                    this.RepmacGetDenNumRowDeleting(this, new RepmacGetDenNumRowChangeEvent(((RepmacGetDenNumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepmacGetDenNumRow(RepmacGetDenNumRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepmacGetDenNumDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outputRequestDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnseiGak;
            
            private global::System.Data.DataColumn columnDate1;
            
            private global::System.Data.DataColumn columnkbn1;
            
            private global::System.Data.DataColumn columncode1;
            
            private global::System.Data.DataColumn columncode4;
            
            private global::System.Data.DataColumn columnname1;
            
            private global::System.Data.DataColumn columnname2;
            
            private global::System.Data.DataColumn columnname3;
            
            private global::System.Data.DataColumn columnkngk1;
            
            private global::System.Data.DataColumn columnkngk2;
            
            private global::System.Data.DataColumn columnsonota1;
            
            private global::System.Data.DataColumn columnjyutNo;
            
            private global::System.Data.DataColumn columnjyMeiNo;
            
            private global::System.Data.DataColumn columnurMeiNo;
            
            private global::System.Data.DataColumn columnrenbn;
            
            private global::System.Data.DataColumn columnsyamei;
            
            private global::System.Data.DataColumn columnaddress1;
            
            private global::System.Data.DataColumn columnaddress2;
            
            private global::System.Data.DataColumn columnyubinNo;
            
            private global::System.Data.DataColumn columnsonota2;
            
            private global::System.Data.DataColumn columnDenNum;
            
            private global::System.Data.DataColumn columnTrhskCd;
            
            private global::System.Data.DataColumn columnTelNo;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnSetDenpyo;
            
            private global::System.Data.DataColumn columnSetLabel;
            
            private global::System.Data.DataColumn columnComTax;
            
            private global::System.Data.DataColumn columnRitu1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputRequestDataTable() {
                this.TableName = "outputRequest";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal outputRequestDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected outputRequestDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiGakColumn {
                get {
                    return this.columnseiGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date1Column {
                get {
                    return this.columnDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kbn1Column {
                get {
                    return this.columnkbn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code1Column {
                get {
                    return this.columncode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code4Column {
                get {
                    return this.columncode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1Column {
                get {
                    return this.columnname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2Column {
                get {
                    return this.columnname2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3Column {
                get {
                    return this.columnname3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk1Column {
                get {
                    return this.columnkngk1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk2Column {
                get {
                    return this.columnkngk2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota1Column {
                get {
                    return this.columnsonota1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutNoColumn {
                get {
                    return this.columnjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyMeiNoColumn {
                get {
                    return this.columnjyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urMeiNoColumn {
                get {
                    return this.columnurMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn renbnColumn {
                get {
                    return this.columnrenbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn syameiColumn {
                get {
                    return this.columnsyamei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address1Column {
                get {
                    return this.columnaddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address2Column {
                get {
                    return this.columnaddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yubinNoColumn {
                get {
                    return this.columnyubinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota2Column {
                get {
                    return this.columnsonota2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DenNumColumn {
                get {
                    return this.columnDenNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrhskCdColumn {
                get {
                    return this.columnTrhskCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelNoColumn {
                get {
                    return this.columnTelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetDenpyoColumn {
                get {
                    return this.columnSetDenpyo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetLabelColumn {
                get {
                    return this.columnSetLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComTaxColumn {
                get {
                    return this.columnComTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ritu1Column {
                get {
                    return this.columnRitu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputRequestRow this[int index] {
                get {
                    return ((outputRequestRow)(this.Rows[index]));
                }
            }
            
            public event outputRequestRowChangeEventHandler outputRequestRowChanging;
            
            public event outputRequestRowChangeEventHandler outputRequestRowChanged;
            
            public event outputRequestRowChangeEventHandler outputRequestRowDeleting;
            
            public event outputRequestRowChangeEventHandler outputRequestRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddoutputRequestRow(outputRequestRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputRequestRow AddoutputRequestRow(
                        decimal seiGak, 
                        string Date1, 
                        string kbn1, 
                        string code1, 
                        string code4, 
                        string name1, 
                        string name2, 
                        string name3, 
                        decimal kngk1, 
                        decimal kngk2, 
                        string sonota1, 
                        string jyutNo, 
                        string jyMeiNo, 
                        string urMeiNo, 
                        string renbn, 
                        string syamei, 
                        string address1, 
                        string address2, 
                        string yubinNo, 
                        string sonota2, 
                        string DenNum, 
                        string TrhskCd, 
                        string TelNo, 
                        string Address, 
                        string SetDenpyo, 
                        string SetLabel, 
                        decimal ComTax, 
                        decimal Ritu1) {
                outputRequestRow rowoutputRequestRow = ((outputRequestRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        seiGak,
                        Date1,
                        kbn1,
                        code1,
                        code4,
                        name1,
                        name2,
                        name3,
                        kngk1,
                        kngk2,
                        sonota1,
                        jyutNo,
                        jyMeiNo,
                        urMeiNo,
                        renbn,
                        syamei,
                        address1,
                        address2,
                        yubinNo,
                        sonota2,
                        DenNum,
                        TrhskCd,
                        TelNo,
                        Address,
                        SetDenpyo,
                        SetLabel,
                        ComTax,
                        Ritu1};
                rowoutputRequestRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutputRequestRow);
                return rowoutputRequestRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                outputRequestDataTable cln = ((outputRequestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outputRequestDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnseiGak = base.Columns["seiGak"];
                this.columnDate1 = base.Columns["Date1"];
                this.columnkbn1 = base.Columns["kbn1"];
                this.columncode1 = base.Columns["code1"];
                this.columncode4 = base.Columns["code4"];
                this.columnname1 = base.Columns["name1"];
                this.columnname2 = base.Columns["name2"];
                this.columnname3 = base.Columns["name3"];
                this.columnkngk1 = base.Columns["kngk1"];
                this.columnkngk2 = base.Columns["kngk2"];
                this.columnsonota1 = base.Columns["sonota1"];
                this.columnjyutNo = base.Columns["jyutNo"];
                this.columnjyMeiNo = base.Columns["jyMeiNo"];
                this.columnurMeiNo = base.Columns["urMeiNo"];
                this.columnrenbn = base.Columns["renbn"];
                this.columnsyamei = base.Columns["syamei"];
                this.columnaddress1 = base.Columns["address1"];
                this.columnaddress2 = base.Columns["address2"];
                this.columnyubinNo = base.Columns["yubinNo"];
                this.columnsonota2 = base.Columns["sonota2"];
                this.columnDenNum = base.Columns["DenNum"];
                this.columnTrhskCd = base.Columns["TrhskCd"];
                this.columnTelNo = base.Columns["TelNo"];
                this.columnAddress = base.Columns["Address"];
                this.columnSetDenpyo = base.Columns["SetDenpyo"];
                this.columnSetLabel = base.Columns["SetLabel"];
                this.columnComTax = base.Columns["ComTax"];
                this.columnRitu1 = base.Columns["Ritu1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnseiGak = new global::System.Data.DataColumn("seiGak", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiGak);
                this.columnDate1 = new global::System.Data.DataColumn("Date1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate1);
                this.columnkbn1 = new global::System.Data.DataColumn("kbn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkbn1);
                this.columncode1 = new global::System.Data.DataColumn("code1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode1);
                this.columncode4 = new global::System.Data.DataColumn("code4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode4);
                this.columnname1 = new global::System.Data.DataColumn("name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1);
                this.columnname2 = new global::System.Data.DataColumn("name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2);
                this.columnname3 = new global::System.Data.DataColumn("name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3);
                this.columnkngk1 = new global::System.Data.DataColumn("kngk1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk1);
                this.columnkngk2 = new global::System.Data.DataColumn("kngk2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk2);
                this.columnsonota1 = new global::System.Data.DataColumn("sonota1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota1);
                this.columnjyutNo = new global::System.Data.DataColumn("jyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutNo);
                this.columnjyMeiNo = new global::System.Data.DataColumn("jyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyMeiNo);
                this.columnurMeiNo = new global::System.Data.DataColumn("urMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurMeiNo);
                this.columnrenbn = new global::System.Data.DataColumn("renbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrenbn);
                this.columnsyamei = new global::System.Data.DataColumn("syamei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsyamei);
                this.columnaddress1 = new global::System.Data.DataColumn("address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress1);
                this.columnaddress2 = new global::System.Data.DataColumn("address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress2);
                this.columnyubinNo = new global::System.Data.DataColumn("yubinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyubinNo);
                this.columnsonota2 = new global::System.Data.DataColumn("sonota2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota2);
                this.columnDenNum = new global::System.Data.DataColumn("DenNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDenNum);
                this.columnTrhskCd = new global::System.Data.DataColumn("TrhskCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrhskCd);
                this.columnTelNo = new global::System.Data.DataColumn("TelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelNo);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnSetDenpyo = new global::System.Data.DataColumn("SetDenpyo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetDenpyo);
                this.columnSetLabel = new global::System.Data.DataColumn("SetLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetLabel);
                this.columnComTax = new global::System.Data.DataColumn("ComTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComTax);
                this.columnRitu1 = new global::System.Data.DataColumn("Ritu1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRitu1);
                this.columnTelNo.Caption = "Address";
                this.columnComTax.Caption = "splitflg";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputRequestRow NewoutputRequestRow() {
                return ((outputRequestRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outputRequestRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(outputRequestRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outputRequestRowChanged != null)) {
                    this.outputRequestRowChanged(this, new outputRequestRowChangeEvent(((outputRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outputRequestRowChanging != null)) {
                    this.outputRequestRowChanging(this, new outputRequestRowChangeEvent(((outputRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outputRequestRowDeleted != null)) {
                    this.outputRequestRowDeleted(this, new outputRequestRowChangeEvent(((outputRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outputRequestRowDeleting != null)) {
                    this.outputRequestRowDeleting(this, new outputRequestRowChangeEvent(((outputRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveoutputRequestRow(outputRequestRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outputRequestDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepmacUpdPurchaseDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnYymm;
            
            private global::System.Data.DataColumn columnJyutNo;
            
            private global::System.Data.DataColumn columnJyMeiNo;
            
            private global::System.Data.DataColumn columnUrMeiNo;
            
            private global::System.Data.DataColumn columnRenbn;
            
            private global::System.Data.DataColumn columnSonota1;
            
            private global::System.Data.DataColumn columnkbn1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdPurchaseDataTable() {
                this.TableName = "RepmacUpdPurchase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacUpdPurchaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepmacUpdPurchaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YymmColumn {
                get {
                    return this.columnYymm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JyutNoColumn {
                get {
                    return this.columnJyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JyMeiNoColumn {
                get {
                    return this.columnJyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrMeiNoColumn {
                get {
                    return this.columnUrMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenbnColumn {
                get {
                    return this.columnRenbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sonota1Column {
                get {
                    return this.columnSonota1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kbn1Column {
                get {
                    return this.columnkbn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdPurchaseRow this[int index] {
                get {
                    return ((RepmacUpdPurchaseRow)(this.Rows[index]));
                }
            }
            
            public event RepmacUpdPurchaseRowChangeEventHandler RepmacUpdPurchaseRowChanging;
            
            public event RepmacUpdPurchaseRowChangeEventHandler RepmacUpdPurchaseRowChanged;
            
            public event RepmacUpdPurchaseRowChangeEventHandler RepmacUpdPurchaseRowDeleting;
            
            public event RepmacUpdPurchaseRowChangeEventHandler RepmacUpdPurchaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepmacUpdPurchaseRow(RepmacUpdPurchaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdPurchaseRow AddRepmacUpdPurchaseRow(string Yymm, string JyutNo, string JyMeiNo, string UrMeiNo, string Renbn, string Sonota1, string kbn1) {
                RepmacUpdPurchaseRow rowRepmacUpdPurchaseRow = ((RepmacUpdPurchaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Yymm,
                        JyutNo,
                        JyMeiNo,
                        UrMeiNo,
                        Renbn,
                        Sonota1,
                        kbn1};
                rowRepmacUpdPurchaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepmacUpdPurchaseRow);
                return rowRepmacUpdPurchaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdPurchaseRow FindByYymmJyutNoJyMeiNoUrMeiNoRenbn(string Yymm, string JyutNo, string JyMeiNo, string UrMeiNo, string Renbn) {
                return ((RepmacUpdPurchaseRow)(this.Rows.Find(new object[] {
                            Yymm,
                            JyutNo,
                            JyMeiNo,
                            UrMeiNo,
                            Renbn})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepmacUpdPurchaseDataTable cln = ((RepmacUpdPurchaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepmacUpdPurchaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnYymm = base.Columns["Yymm"];
                this.columnJyutNo = base.Columns["JyutNo"];
                this.columnJyMeiNo = base.Columns["JyMeiNo"];
                this.columnUrMeiNo = base.Columns["UrMeiNo"];
                this.columnRenbn = base.Columns["Renbn"];
                this.columnSonota1 = base.Columns["Sonota1"];
                this.columnkbn1 = base.Columns["kbn1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnYymm = new global::System.Data.DataColumn("Yymm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYymm);
                this.columnJyutNo = new global::System.Data.DataColumn("JyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJyutNo);
                this.columnJyMeiNo = new global::System.Data.DataColumn("JyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJyMeiNo);
                this.columnUrMeiNo = new global::System.Data.DataColumn("UrMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrMeiNo);
                this.columnRenbn = new global::System.Data.DataColumn("Renbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenbn);
                this.columnSonota1 = new global::System.Data.DataColumn("Sonota1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSonota1);
                this.columnkbn1 = new global::System.Data.DataColumn("kbn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkbn1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYymm,
                                this.columnJyutNo,
                                this.columnJyMeiNo,
                                this.columnUrMeiNo,
                                this.columnRenbn}, true));
                this.columnYymm.AllowDBNull = false;
                this.columnYymm.Caption = "hb2Yymm";
                this.columnJyutNo.AllowDBNull = false;
                this.columnJyutNo.Caption = "hb2JyutNo";
                this.columnJyMeiNo.AllowDBNull = false;
                this.columnJyMeiNo.Caption = "hb2JyMeiNo";
                this.columnUrMeiNo.AllowDBNull = false;
                this.columnUrMeiNo.Caption = "hb2UrMeiNo";
                this.columnRenbn.AllowDBNull = false;
                this.columnRenbn.Caption = "hb2Renbn";
                this.columnSonota1.Caption = "hb2Sonota1";
                this.columnkbn1.Caption = "hb2Sonota1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdPurchaseRow NewRepmacUpdPurchaseRow() {
                return ((RepmacUpdPurchaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepmacUpdPurchaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepmacUpdPurchaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepmacUpdPurchaseRowChanged != null)) {
                    this.RepmacUpdPurchaseRowChanged(this, new RepmacUpdPurchaseRowChangeEvent(((RepmacUpdPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepmacUpdPurchaseRowChanging != null)) {
                    this.RepmacUpdPurchaseRowChanging(this, new RepmacUpdPurchaseRowChangeEvent(((RepmacUpdPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepmacUpdPurchaseRowDeleted != null)) {
                    this.RepmacUpdPurchaseRowDeleted(this, new RepmacUpdPurchaseRowChangeEvent(((RepmacUpdPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepmacUpdPurchaseRowDeleting != null)) {
                    this.RepmacUpdPurchaseRowDeleting(this, new RepmacUpdPurchaseRowChangeEvent(((RepmacUpdPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepmacUpdPurchaseRow(RepmacUpdPurchaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepmacUpdPurchaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepmacRequestDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnseiGak;
            
            private global::System.Data.DataColumn columnDate1;
            
            private global::System.Data.DataColumn columnkbn1;
            
            private global::System.Data.DataColumn columncode1;
            
            private global::System.Data.DataColumn columncode4;
            
            private global::System.Data.DataColumn columnname1;
            
            private global::System.Data.DataColumn columnname2;
            
            private global::System.Data.DataColumn columnname3;
            
            private global::System.Data.DataColumn columnkngk1;
            
            private global::System.Data.DataColumn columnkngk2;
            
            private global::System.Data.DataColumn columnsonota1;
            
            private global::System.Data.DataColumn columnjyutNo;
            
            private global::System.Data.DataColumn columnjyMeiNo;
            
            private global::System.Data.DataColumn columnurMeiNo;
            
            private global::System.Data.DataColumn columnrenbn;
            
            private global::System.Data.DataColumn columnsyamei;
            
            private global::System.Data.DataColumn columnaddress1;
            
            private global::System.Data.DataColumn columnaddress2;
            
            private global::System.Data.DataColumn columnyubinNo;
            
            private global::System.Data.DataColumn columnsonota2;
            
            private global::System.Data.DataColumn columnRitu1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRequestDataTable() {
                this.TableName = "RepmacRequest";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacRequestDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepmacRequestDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiGakColumn {
                get {
                    return this.columnseiGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date1Column {
                get {
                    return this.columnDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kbn1Column {
                get {
                    return this.columnkbn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code1Column {
                get {
                    return this.columncode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code4Column {
                get {
                    return this.columncode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1Column {
                get {
                    return this.columnname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2Column {
                get {
                    return this.columnname2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3Column {
                get {
                    return this.columnname3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk1Column {
                get {
                    return this.columnkngk1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk2Column {
                get {
                    return this.columnkngk2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota1Column {
                get {
                    return this.columnsonota1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutNoColumn {
                get {
                    return this.columnjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyMeiNoColumn {
                get {
                    return this.columnjyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urMeiNoColumn {
                get {
                    return this.columnurMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn renbnColumn {
                get {
                    return this.columnrenbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn syameiColumn {
                get {
                    return this.columnsyamei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address1Column {
                get {
                    return this.columnaddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address2Column {
                get {
                    return this.columnaddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yubinNoColumn {
                get {
                    return this.columnyubinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota2Column {
                get {
                    return this.columnsonota2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ritu1Column {
                get {
                    return this.columnRitu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRequestRow this[int index] {
                get {
                    return ((RepmacRequestRow)(this.Rows[index]));
                }
            }
            
            public event RepmacRequestRowChangeEventHandler RepmacRequestRowChanging;
            
            public event RepmacRequestRowChangeEventHandler RepmacRequestRowChanged;
            
            public event RepmacRequestRowChangeEventHandler RepmacRequestRowDeleting;
            
            public event RepmacRequestRowChangeEventHandler RepmacRequestRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepmacRequestRow(RepmacRequestRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRequestRow AddRepmacRequestRow(
                        decimal seiGak, 
                        string Date1, 
                        string kbn1, 
                        string code1, 
                        string code4, 
                        string name1, 
                        string name2, 
                        string name3, 
                        decimal kngk1, 
                        decimal kngk2, 
                        string sonota1, 
                        string jyutNo, 
                        string jyMeiNo, 
                        string urMeiNo, 
                        string renbn, 
                        string syamei, 
                        string address1, 
                        string address2, 
                        string yubinNo, 
                        string sonota2, 
                        decimal Ritu1) {
                RepmacRequestRow rowRepmacRequestRow = ((RepmacRequestRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        seiGak,
                        Date1,
                        kbn1,
                        code1,
                        code4,
                        name1,
                        name2,
                        name3,
                        kngk1,
                        kngk2,
                        sonota1,
                        jyutNo,
                        jyMeiNo,
                        urMeiNo,
                        renbn,
                        syamei,
                        address1,
                        address2,
                        yubinNo,
                        sonota2,
                        Ritu1};
                rowRepmacRequestRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepmacRequestRow);
                return rowRepmacRequestRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepmacRequestDataTable cln = ((RepmacRequestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepmacRequestDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnseiGak = base.Columns["seiGak"];
                this.columnDate1 = base.Columns["Date1"];
                this.columnkbn1 = base.Columns["kbn1"];
                this.columncode1 = base.Columns["code1"];
                this.columncode4 = base.Columns["code4"];
                this.columnname1 = base.Columns["name1"];
                this.columnname2 = base.Columns["name2"];
                this.columnname3 = base.Columns["name3"];
                this.columnkngk1 = base.Columns["kngk1"];
                this.columnkngk2 = base.Columns["kngk2"];
                this.columnsonota1 = base.Columns["sonota1"];
                this.columnjyutNo = base.Columns["jyutNo"];
                this.columnjyMeiNo = base.Columns["jyMeiNo"];
                this.columnurMeiNo = base.Columns["urMeiNo"];
                this.columnrenbn = base.Columns["renbn"];
                this.columnsyamei = base.Columns["syamei"];
                this.columnaddress1 = base.Columns["address1"];
                this.columnaddress2 = base.Columns["address2"];
                this.columnyubinNo = base.Columns["yubinNo"];
                this.columnsonota2 = base.Columns["sonota2"];
                this.columnRitu1 = base.Columns["Ritu1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnseiGak = new global::System.Data.DataColumn("seiGak", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiGak);
                this.columnDate1 = new global::System.Data.DataColumn("Date1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate1);
                this.columnkbn1 = new global::System.Data.DataColumn("kbn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkbn1);
                this.columncode1 = new global::System.Data.DataColumn("code1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode1);
                this.columncode4 = new global::System.Data.DataColumn("code4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode4);
                this.columnname1 = new global::System.Data.DataColumn("name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1);
                this.columnname2 = new global::System.Data.DataColumn("name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2);
                this.columnname3 = new global::System.Data.DataColumn("name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3);
                this.columnkngk1 = new global::System.Data.DataColumn("kngk1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk1);
                this.columnkngk2 = new global::System.Data.DataColumn("kngk2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk2);
                this.columnsonota1 = new global::System.Data.DataColumn("sonota1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota1);
                this.columnjyutNo = new global::System.Data.DataColumn("jyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutNo);
                this.columnjyMeiNo = new global::System.Data.DataColumn("jyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyMeiNo);
                this.columnurMeiNo = new global::System.Data.DataColumn("urMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurMeiNo);
                this.columnrenbn = new global::System.Data.DataColumn("renbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrenbn);
                this.columnsyamei = new global::System.Data.DataColumn("syamei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsyamei);
                this.columnaddress1 = new global::System.Data.DataColumn("address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress1);
                this.columnaddress2 = new global::System.Data.DataColumn("address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress2);
                this.columnyubinNo = new global::System.Data.DataColumn("yubinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyubinNo);
                this.columnsonota2 = new global::System.Data.DataColumn("sonota2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota2);
                this.columnRitu1 = new global::System.Data.DataColumn("Ritu1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRitu1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRequestRow NewRepmacRequestRow() {
                return ((RepmacRequestRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepmacRequestRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepmacRequestRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepmacRequestRowChanged != null)) {
                    this.RepmacRequestRowChanged(this, new RepmacRequestRowChangeEvent(((RepmacRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepmacRequestRowChanging != null)) {
                    this.RepmacRequestRowChanging(this, new RepmacRequestRowChangeEvent(((RepmacRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepmacRequestRowDeleted != null)) {
                    this.RepmacRequestRowDeleted(this, new RepmacRequestRowChangeEvent(((RepmacRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepmacRequestRowDeleting != null)) {
                    this.RepmacRequestRowDeleting(this, new RepmacRequestRowChangeEvent(((RepmacRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepmacRequestRow(RepmacRequestRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepmacRequestDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outputPurchaseDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnseiGak;
            
            private global::System.Data.DataColumn columnDate1;
            
            private global::System.Data.DataColumn columnkbn1;
            
            private global::System.Data.DataColumn columncode1;
            
            private global::System.Data.DataColumn columncode4;
            
            private global::System.Data.DataColumn columnname1;
            
            private global::System.Data.DataColumn columnname2;
            
            private global::System.Data.DataColumn columnname3;
            
            private global::System.Data.DataColumn columnkngk1;
            
            private global::System.Data.DataColumn columnkngk2;
            
            private global::System.Data.DataColumn columnsonota1;
            
            private global::System.Data.DataColumn columnjyutNo;
            
            private global::System.Data.DataColumn columnjyMeiNo;
            
            private global::System.Data.DataColumn columnurMeiNo;
            
            private global::System.Data.DataColumn columnrenbn;
            
            private global::System.Data.DataColumn columnsyamei;
            
            private global::System.Data.DataColumn columnsplitflg;
            
            private global::System.Data.DataColumn columnsonota2;
            
            private global::System.Data.DataColumn columnDenNum;
            
            private global::System.Data.DataColumn columnTrhskCd;
            
            private global::System.Data.DataColumn columnTelNo;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnSetDenpyo;
            
            private global::System.Data.DataColumn columnSetLabel;
            
            private global::System.Data.DataColumn columnComTax;
            
            private global::System.Data.DataColumn columnRitu1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputPurchaseDataTable() {
                this.TableName = "outputPurchase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal outputPurchaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected outputPurchaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiGakColumn {
                get {
                    return this.columnseiGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date1Column {
                get {
                    return this.columnDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kbn1Column {
                get {
                    return this.columnkbn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code1Column {
                get {
                    return this.columncode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code4Column {
                get {
                    return this.columncode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1Column {
                get {
                    return this.columnname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2Column {
                get {
                    return this.columnname2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3Column {
                get {
                    return this.columnname3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk1Column {
                get {
                    return this.columnkngk1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk2Column {
                get {
                    return this.columnkngk2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota1Column {
                get {
                    return this.columnsonota1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutNoColumn {
                get {
                    return this.columnjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyMeiNoColumn {
                get {
                    return this.columnjyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urMeiNoColumn {
                get {
                    return this.columnurMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn renbnColumn {
                get {
                    return this.columnrenbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn syameiColumn {
                get {
                    return this.columnsyamei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn splitflgColumn {
                get {
                    return this.columnsplitflg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sonota2Column {
                get {
                    return this.columnsonota2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DenNumColumn {
                get {
                    return this.columnDenNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrhskCdColumn {
                get {
                    return this.columnTrhskCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelNoColumn {
                get {
                    return this.columnTelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetDenpyoColumn {
                get {
                    return this.columnSetDenpyo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetLabelColumn {
                get {
                    return this.columnSetLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComTaxColumn {
                get {
                    return this.columnComTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ritu1Column {
                get {
                    return this.columnRitu1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputPurchaseRow this[int index] {
                get {
                    return ((outputPurchaseRow)(this.Rows[index]));
                }
            }
            
            public event outputPurchaseRowChangeEventHandler outputPurchaseRowChanging;
            
            public event outputPurchaseRowChangeEventHandler outputPurchaseRowChanged;
            
            public event outputPurchaseRowChangeEventHandler outputPurchaseRowDeleting;
            
            public event outputPurchaseRowChangeEventHandler outputPurchaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddoutputPurchaseRow(outputPurchaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputPurchaseRow AddoutputPurchaseRow(
                        decimal seiGak, 
                        string Date1, 
                        string kbn1, 
                        string code1, 
                        string code4, 
                        string name1, 
                        string name2, 
                        string name3, 
                        decimal kngk1, 
                        decimal kngk2, 
                        string sonota1, 
                        string jyutNo, 
                        string jyMeiNo, 
                        string urMeiNo, 
                        string renbn, 
                        string syamei, 
                        string splitflg, 
                        string sonota2, 
                        string DenNum, 
                        string TrhskCd, 
                        string TelNo, 
                        string Address, 
                        string SetDenpyo, 
                        string SetLabel, 
                        decimal ComTax, 
                        decimal Ritu1) {
                outputPurchaseRow rowoutputPurchaseRow = ((outputPurchaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        seiGak,
                        Date1,
                        kbn1,
                        code1,
                        code4,
                        name1,
                        name2,
                        name3,
                        kngk1,
                        kngk2,
                        sonota1,
                        jyutNo,
                        jyMeiNo,
                        urMeiNo,
                        renbn,
                        syamei,
                        splitflg,
                        sonota2,
                        DenNum,
                        TrhskCd,
                        TelNo,
                        Address,
                        SetDenpyo,
                        SetLabel,
                        ComTax,
                        Ritu1};
                rowoutputPurchaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutputPurchaseRow);
                return rowoutputPurchaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                outputPurchaseDataTable cln = ((outputPurchaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outputPurchaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnseiGak = base.Columns["seiGak"];
                this.columnDate1 = base.Columns["Date1"];
                this.columnkbn1 = base.Columns["kbn1"];
                this.columncode1 = base.Columns["code1"];
                this.columncode4 = base.Columns["code4"];
                this.columnname1 = base.Columns["name1"];
                this.columnname2 = base.Columns["name2"];
                this.columnname3 = base.Columns["name3"];
                this.columnkngk1 = base.Columns["kngk1"];
                this.columnkngk2 = base.Columns["kngk2"];
                this.columnsonota1 = base.Columns["sonota1"];
                this.columnjyutNo = base.Columns["jyutNo"];
                this.columnjyMeiNo = base.Columns["jyMeiNo"];
                this.columnurMeiNo = base.Columns["urMeiNo"];
                this.columnrenbn = base.Columns["renbn"];
                this.columnsyamei = base.Columns["syamei"];
                this.columnsplitflg = base.Columns["splitflg"];
                this.columnsonota2 = base.Columns["sonota2"];
                this.columnDenNum = base.Columns["DenNum"];
                this.columnTrhskCd = base.Columns["TrhskCd"];
                this.columnTelNo = base.Columns["TelNo"];
                this.columnAddress = base.Columns["Address"];
                this.columnSetDenpyo = base.Columns["SetDenpyo"];
                this.columnSetLabel = base.Columns["SetLabel"];
                this.columnComTax = base.Columns["ComTax"];
                this.columnRitu1 = base.Columns["Ritu1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnseiGak = new global::System.Data.DataColumn("seiGak", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiGak);
                this.columnDate1 = new global::System.Data.DataColumn("Date1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate1);
                this.columnkbn1 = new global::System.Data.DataColumn("kbn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkbn1);
                this.columncode1 = new global::System.Data.DataColumn("code1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode1);
                this.columncode4 = new global::System.Data.DataColumn("code4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode4);
                this.columnname1 = new global::System.Data.DataColumn("name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1);
                this.columnname2 = new global::System.Data.DataColumn("name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2);
                this.columnname3 = new global::System.Data.DataColumn("name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3);
                this.columnkngk1 = new global::System.Data.DataColumn("kngk1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk1);
                this.columnkngk2 = new global::System.Data.DataColumn("kngk2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk2);
                this.columnsonota1 = new global::System.Data.DataColumn("sonota1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota1);
                this.columnjyutNo = new global::System.Data.DataColumn("jyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutNo);
                this.columnjyMeiNo = new global::System.Data.DataColumn("jyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyMeiNo);
                this.columnurMeiNo = new global::System.Data.DataColumn("urMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurMeiNo);
                this.columnrenbn = new global::System.Data.DataColumn("renbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrenbn);
                this.columnsyamei = new global::System.Data.DataColumn("syamei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsyamei);
                this.columnsplitflg = new global::System.Data.DataColumn("splitflg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsplitflg);
                this.columnsonota2 = new global::System.Data.DataColumn("sonota2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsonota2);
                this.columnDenNum = new global::System.Data.DataColumn("DenNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDenNum);
                this.columnTrhskCd = new global::System.Data.DataColumn("TrhskCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrhskCd);
                this.columnTelNo = new global::System.Data.DataColumn("TelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelNo);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnSetDenpyo = new global::System.Data.DataColumn("SetDenpyo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetDenpyo);
                this.columnSetLabel = new global::System.Data.DataColumn("SetLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetLabel);
                this.columnComTax = new global::System.Data.DataColumn("ComTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComTax);
                this.columnRitu1 = new global::System.Data.DataColumn("Ritu1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRitu1);
                this.columnTelNo.Caption = "Address";
                this.columnComTax.Caption = "splitflg";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputPurchaseRow NewoutputPurchaseRow() {
                return ((outputPurchaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outputPurchaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(outputPurchaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outputPurchaseRowChanged != null)) {
                    this.outputPurchaseRowChanged(this, new outputPurchaseRowChangeEvent(((outputPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outputPurchaseRowChanging != null)) {
                    this.outputPurchaseRowChanging(this, new outputPurchaseRowChangeEvent(((outputPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outputPurchaseRowDeleted != null)) {
                    this.outputPurchaseRowDeleted(this, new outputPurchaseRowChangeEvent(((outputPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outputPurchaseRowDeleting != null)) {
                    this.outputPurchaseRowDeleting(this, new outputPurchaseRowChangeEvent(((outputPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveoutputPurchaseRow(outputPurchaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outputPurchaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepmacUpdRequestDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnYymm;
            
            private global::System.Data.DataColumn columnJyutNo;
            
            private global::System.Data.DataColumn columnJyMeiNo;
            
            private global::System.Data.DataColumn columnUrMeiNo;
            
            private global::System.Data.DataColumn columnRenbn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdRequestDataTable() {
                this.TableName = "RepmacUpdRequest";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacUpdRequestDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepmacUpdRequestDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YymmColumn {
                get {
                    return this.columnYymm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JyutNoColumn {
                get {
                    return this.columnJyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JyMeiNoColumn {
                get {
                    return this.columnJyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrMeiNoColumn {
                get {
                    return this.columnUrMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenbnColumn {
                get {
                    return this.columnRenbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdRequestRow this[int index] {
                get {
                    return ((RepmacUpdRequestRow)(this.Rows[index]));
                }
            }
            
            public event RepmacUpdRequestRowChangeEventHandler RepmacUpdRequestRowChanging;
            
            public event RepmacUpdRequestRowChangeEventHandler RepmacUpdRequestRowChanged;
            
            public event RepmacUpdRequestRowChangeEventHandler RepmacUpdRequestRowDeleting;
            
            public event RepmacUpdRequestRowChangeEventHandler RepmacUpdRequestRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepmacUpdRequestRow(RepmacUpdRequestRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdRequestRow AddRepmacUpdRequestRow(string Yymm, string JyutNo, string JyMeiNo, string UrMeiNo, string Renbn) {
                RepmacUpdRequestRow rowRepmacUpdRequestRow = ((RepmacUpdRequestRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Yymm,
                        JyutNo,
                        JyMeiNo,
                        UrMeiNo,
                        Renbn};
                rowRepmacUpdRequestRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepmacUpdRequestRow);
                return rowRepmacUpdRequestRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdRequestRow FindByYymmJyutNoJyMeiNoUrMeiNoRenbn(string Yymm, string JyutNo, string JyMeiNo, string UrMeiNo, string Renbn) {
                return ((RepmacUpdRequestRow)(this.Rows.Find(new object[] {
                            Yymm,
                            JyutNo,
                            JyMeiNo,
                            UrMeiNo,
                            Renbn})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepmacUpdRequestDataTable cln = ((RepmacUpdRequestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepmacUpdRequestDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnYymm = base.Columns["Yymm"];
                this.columnJyutNo = base.Columns["JyutNo"];
                this.columnJyMeiNo = base.Columns["JyMeiNo"];
                this.columnUrMeiNo = base.Columns["UrMeiNo"];
                this.columnRenbn = base.Columns["Renbn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnYymm = new global::System.Data.DataColumn("Yymm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYymm);
                this.columnJyutNo = new global::System.Data.DataColumn("JyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJyutNo);
                this.columnJyMeiNo = new global::System.Data.DataColumn("JyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJyMeiNo);
                this.columnUrMeiNo = new global::System.Data.DataColumn("UrMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrMeiNo);
                this.columnRenbn = new global::System.Data.DataColumn("Renbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenbn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYymm,
                                this.columnJyutNo,
                                this.columnJyMeiNo,
                                this.columnUrMeiNo,
                                this.columnRenbn}, true));
                this.columnYymm.AllowDBNull = false;
                this.columnYymm.Caption = "hb2Yymm";
                this.columnJyutNo.AllowDBNull = false;
                this.columnJyutNo.Caption = "hb2JyutNo";
                this.columnJyMeiNo.AllowDBNull = false;
                this.columnJyMeiNo.Caption = "hb2JyMeiNo";
                this.columnUrMeiNo.AllowDBNull = false;
                this.columnUrMeiNo.Caption = "hb2UrMeiNo";
                this.columnRenbn.AllowDBNull = false;
                this.columnRenbn.Caption = "hb2Renbn";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdRequestRow NewRepmacUpdRequestRow() {
                return ((RepmacUpdRequestRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepmacUpdRequestRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepmacUpdRequestRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepmacUpdRequestRowChanged != null)) {
                    this.RepmacUpdRequestRowChanged(this, new RepmacUpdRequestRowChangeEvent(((RepmacUpdRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepmacUpdRequestRowChanging != null)) {
                    this.RepmacUpdRequestRowChanging(this, new RepmacUpdRequestRowChangeEvent(((RepmacUpdRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepmacUpdRequestRowDeleted != null)) {
                    this.RepmacUpdRequestRowDeleted(this, new RepmacUpdRequestRowChangeEvent(((RepmacUpdRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepmacUpdRequestRowDeleting != null)) {
                    this.RepmacUpdRequestRowDeleting(this, new RepmacUpdRequestRowChangeEvent(((RepmacUpdRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepmacUpdRequestRow(RepmacUpdRequestRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsMac ds = new RepDsMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepmacUpdRequestDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepmacRow : global::System.Data.DataRow {
            
            private RepmacDataTable tableRepmac;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepmac = ((RepmacDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal seiGak {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmac.seiGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'seiGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.seiGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.Date1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'Date1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.Date1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kbn1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.kbn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'kbn1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.kbn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.code1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'code1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.code1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.code2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'code2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.code2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code4 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.code4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'code4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.code4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'name1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'name2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'name3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk1 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmac.kngk1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'kngk1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.kngk1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk2 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmac.kngk2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'kngk2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.kngk2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.sonota1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'sonota1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.sonota1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.jyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'jyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.jyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.jyMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'jyMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.jyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string urMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.urMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'urMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.urMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string renbn {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.renbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'renbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.renbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmac.sonota2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'sonota2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.sonota2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ritu1 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmac.Ritu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Repmac\' にある列 \'Ritu1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmac.Ritu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiGakNull() {
                return this.IsNull(this.tableRepmac.seiGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiGakNull() {
                this[this.tableRepmac.seiGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDate1Null() {
                return this.IsNull(this.tableRepmac.Date1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDate1Null() {
                this[this.tableRepmac.Date1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskbn1Null() {
                return this.IsNull(this.tableRepmac.kbn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkbn1Null() {
                this[this.tableRepmac.kbn1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode1Null() {
                return this.IsNull(this.tableRepmac.code1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode1Null() {
                this[this.tableRepmac.code1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode2Null() {
                return this.IsNull(this.tableRepmac.code2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode2Null() {
                this[this.tableRepmac.code2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode4Null() {
                return this.IsNull(this.tableRepmac.code4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode4Null() {
                this[this.tableRepmac.code4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1Null() {
                return this.IsNull(this.tableRepmac.name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1Null() {
                this[this.tableRepmac.name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2Null() {
                return this.IsNull(this.tableRepmac.name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2Null() {
                this[this.tableRepmac.name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3Null() {
                return this.IsNull(this.tableRepmac.name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3Null() {
                this[this.tableRepmac.name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk1Null() {
                return this.IsNull(this.tableRepmac.kngk1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk1Null() {
                this[this.tableRepmac.kngk1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk2Null() {
                return this.IsNull(this.tableRepmac.kngk2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk2Null() {
                this[this.tableRepmac.kngk2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota1Null() {
                return this.IsNull(this.tableRepmac.sonota1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota1Null() {
                this[this.tableRepmac.sonota1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutNoNull() {
                return this.IsNull(this.tableRepmac.jyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutNoNull() {
                this[this.tableRepmac.jyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyMeiNoNull() {
                return this.IsNull(this.tableRepmac.jyMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyMeiNoNull() {
                this[this.tableRepmac.jyMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurMeiNoNull() {
                return this.IsNull(this.tableRepmac.urMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturMeiNoNull() {
                this[this.tableRepmac.urMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrenbnNull() {
                return this.IsNull(this.tableRepmac.renbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrenbnNull() {
                this[this.tableRepmac.renbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota2Null() {
                return this.IsNull(this.tableRepmac.sonota2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota2Null() {
                this[this.tableRepmac.sonota2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRitu1Null() {
                return this.IsNull(this.tableRepmac.Ritu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRitu1Null() {
                this[this.tableRepmac.Ritu1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepmacSchklstRow : global::System.Data.DataRow {
            
            private RepmacSchklstDataTable tableRepmacSchklst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacSchklstRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepmacSchklst = ((RepmacSchklstDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal seiGak {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacSchklst.seiGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'seiGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.seiGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacSchklst.code2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'code2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.code2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code4 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacSchklst.code4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'code4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.code4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacSchklst.name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'name1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacSchklst.name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'name2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name5 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacSchklst.name5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'name5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.name5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name4 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacSchklst.name4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'name4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.name4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacSchklst.jyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'jyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.jyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacSchklst.jyMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'jyMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.jyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string urMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacSchklst.urMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'urMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.urMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ritu1 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacSchklst.Ritu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacSchklst\' にある列 \'Ritu1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacSchklst.Ritu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiGakNull() {
                return this.IsNull(this.tableRepmacSchklst.seiGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiGakNull() {
                this[this.tableRepmacSchklst.seiGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode2Null() {
                return this.IsNull(this.tableRepmacSchklst.code2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode2Null() {
                this[this.tableRepmacSchklst.code2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode4Null() {
                return this.IsNull(this.tableRepmacSchklst.code4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode4Null() {
                this[this.tableRepmacSchklst.code4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1Null() {
                return this.IsNull(this.tableRepmacSchklst.name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1Null() {
                this[this.tableRepmacSchklst.name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2Null() {
                return this.IsNull(this.tableRepmacSchklst.name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2Null() {
                this[this.tableRepmacSchklst.name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname5Null() {
                return this.IsNull(this.tableRepmacSchklst.name5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname5Null() {
                this[this.tableRepmacSchklst.name5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname4Null() {
                return this.IsNull(this.tableRepmacSchklst.name4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname4Null() {
                this[this.tableRepmacSchklst.name4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutNoNull() {
                return this.IsNull(this.tableRepmacSchklst.jyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutNoNull() {
                this[this.tableRepmacSchklst.jyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyMeiNoNull() {
                return this.IsNull(this.tableRepmacSchklst.jyMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyMeiNoNull() {
                this[this.tableRepmacSchklst.jyMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurMeiNoNull() {
                return this.IsNull(this.tableRepmacSchklst.urMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturMeiNoNull() {
                this[this.tableRepmacSchklst.urMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRitu1Null() {
                return this.IsNull(this.tableRepmacSchklst.Ritu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRitu1Null() {
                this[this.tableRepmacSchklst.Ritu1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepmacPurchaseRow : global::System.Data.DataRow {
            
            private RepmacPurchaseDataTable tableRepmacPurchase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacPurchaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepmacPurchase = ((RepmacPurchaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal seiGak {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacPurchase.seiGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'seiGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.seiGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.Date1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'Date1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.Date1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kbn1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.kbn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'kbn1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.kbn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.code1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'code1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.code1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code4 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.code4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'code4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.code4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'name1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'name2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'name3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk1 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacPurchase.kngk1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'kngk1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.kngk1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk2 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacPurchase.kngk2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'kngk2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.kngk2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.sonota1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'sonota1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.sonota1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.jyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'jyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.jyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.jyMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'jyMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.jyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string urMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.urMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'urMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.urMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string renbn {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.renbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'renbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.renbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string syamei {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.syameiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'syamei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.syameiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string splitflg {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.splitflgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'splitflg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.splitflgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacPurchase.sonota2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'sonota2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.sonota2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ritu1 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacPurchase.Ritu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacPurchase\' にある列 \'Ritu1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacPurchase.Ritu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiGakNull() {
                return this.IsNull(this.tableRepmacPurchase.seiGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiGakNull() {
                this[this.tableRepmacPurchase.seiGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDate1Null() {
                return this.IsNull(this.tableRepmacPurchase.Date1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDate1Null() {
                this[this.tableRepmacPurchase.Date1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskbn1Null() {
                return this.IsNull(this.tableRepmacPurchase.kbn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkbn1Null() {
                this[this.tableRepmacPurchase.kbn1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode1Null() {
                return this.IsNull(this.tableRepmacPurchase.code1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode1Null() {
                this[this.tableRepmacPurchase.code1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode4Null() {
                return this.IsNull(this.tableRepmacPurchase.code4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode4Null() {
                this[this.tableRepmacPurchase.code4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1Null() {
                return this.IsNull(this.tableRepmacPurchase.name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1Null() {
                this[this.tableRepmacPurchase.name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2Null() {
                return this.IsNull(this.tableRepmacPurchase.name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2Null() {
                this[this.tableRepmacPurchase.name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3Null() {
                return this.IsNull(this.tableRepmacPurchase.name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3Null() {
                this[this.tableRepmacPurchase.name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk1Null() {
                return this.IsNull(this.tableRepmacPurchase.kngk1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk1Null() {
                this[this.tableRepmacPurchase.kngk1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk2Null() {
                return this.IsNull(this.tableRepmacPurchase.kngk2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk2Null() {
                this[this.tableRepmacPurchase.kngk2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota1Null() {
                return this.IsNull(this.tableRepmacPurchase.sonota1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota1Null() {
                this[this.tableRepmacPurchase.sonota1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutNoNull() {
                return this.IsNull(this.tableRepmacPurchase.jyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutNoNull() {
                this[this.tableRepmacPurchase.jyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyMeiNoNull() {
                return this.IsNull(this.tableRepmacPurchase.jyMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyMeiNoNull() {
                this[this.tableRepmacPurchase.jyMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurMeiNoNull() {
                return this.IsNull(this.tableRepmacPurchase.urMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturMeiNoNull() {
                this[this.tableRepmacPurchase.urMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrenbnNull() {
                return this.IsNull(this.tableRepmacPurchase.renbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrenbnNull() {
                this[this.tableRepmacPurchase.renbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssyameiNull() {
                return this.IsNull(this.tableRepmacPurchase.syameiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsyameiNull() {
                this[this.tableRepmacPurchase.syameiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssplitflgNull() {
                return this.IsNull(this.tableRepmacPurchase.splitflgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsplitflgNull() {
                this[this.tableRepmacPurchase.splitflgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota2Null() {
                return this.IsNull(this.tableRepmacPurchase.sonota2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota2Null() {
                this[this.tableRepmacPurchase.sonota2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRitu1Null() {
                return this.IsNull(this.tableRepmacPurchase.Ritu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRitu1Null() {
                this[this.tableRepmacPurchase.Ritu1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepLicenseeRow : global::System.Data.DataRow {
            
            private RepLicenseeDataTable tableRepLicensee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepLicenseeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepLicensee = ((RepLicenseeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seiGak {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.seiGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'seiGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.seiGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code1 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.code1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'code1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.code1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'name1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'name2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'name3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kngk1 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.kngk1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'kngk1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.kngk1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kngk2 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.kngk2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'kngk2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.kngk2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota1 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.sonota1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'sonota1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.sonota1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutNo {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.jyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'jyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.jyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jymeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.jymeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'jymeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.jymeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string urMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.urMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'urMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.urMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string renbn {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.renbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'renbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.renbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field4 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.field4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'field4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.field4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field12 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.field12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'field12\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.field12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field5 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.field5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'field5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.field5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field6 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.field6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'field6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.field6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field10 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.field10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'field10\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.field10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field11 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.field11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'field11\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.field11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field20 {
                get {
                    if (this.Isfield20Null()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableRepLicensee.field20Column]));
                    }
                }
                set {
                    this[this.tableRepLicensee.field20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota2 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.sonota2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'sonota2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.sonota2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ritu1 {
                get {
                    try {
                        return ((string)(this[this.tableRepLicensee.Ritu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepLicensee\' にある列 \'Ritu1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepLicensee.Ritu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiGakNull() {
                return this.IsNull(this.tableRepLicensee.seiGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiGakNull() {
                this[this.tableRepLicensee.seiGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode1Null() {
                return this.IsNull(this.tableRepLicensee.code1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode1Null() {
                this[this.tableRepLicensee.code1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1Null() {
                return this.IsNull(this.tableRepLicensee.name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1Null() {
                this[this.tableRepLicensee.name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2Null() {
                return this.IsNull(this.tableRepLicensee.name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2Null() {
                this[this.tableRepLicensee.name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3Null() {
                return this.IsNull(this.tableRepLicensee.name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3Null() {
                this[this.tableRepLicensee.name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk1Null() {
                return this.IsNull(this.tableRepLicensee.kngk1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk1Null() {
                this[this.tableRepLicensee.kngk1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk2Null() {
                return this.IsNull(this.tableRepLicensee.kngk2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk2Null() {
                this[this.tableRepLicensee.kngk2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota1Null() {
                return this.IsNull(this.tableRepLicensee.sonota1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota1Null() {
                this[this.tableRepLicensee.sonota1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutNoNull() {
                return this.IsNull(this.tableRepLicensee.jyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutNoNull() {
                this[this.tableRepLicensee.jyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjymeiNoNull() {
                return this.IsNull(this.tableRepLicensee.jymeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjymeiNoNull() {
                this[this.tableRepLicensee.jymeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurMeiNoNull() {
                return this.IsNull(this.tableRepLicensee.urMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturMeiNoNull() {
                this[this.tableRepLicensee.urMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrenbnNull() {
                return this.IsNull(this.tableRepLicensee.renbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrenbnNull() {
                this[this.tableRepLicensee.renbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield4Null() {
                return this.IsNull(this.tableRepLicensee.field4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield4Null() {
                this[this.tableRepLicensee.field4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield12Null() {
                return this.IsNull(this.tableRepLicensee.field12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield12Null() {
                this[this.tableRepLicensee.field12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield5Null() {
                return this.IsNull(this.tableRepLicensee.field5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield5Null() {
                this[this.tableRepLicensee.field5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield6Null() {
                return this.IsNull(this.tableRepLicensee.field6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield6Null() {
                this[this.tableRepLicensee.field6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield10Null() {
                return this.IsNull(this.tableRepLicensee.field10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield10Null() {
                this[this.tableRepLicensee.field10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield11Null() {
                return this.IsNull(this.tableRepLicensee.field11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield11Null() {
                this[this.tableRepLicensee.field11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield20Null() {
                return this.IsNull(this.tableRepLicensee.field20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield20Null() {
                this[this.tableRepLicensee.field20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota2Null() {
                return this.IsNull(this.tableRepLicensee.sonota2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota2Null() {
                this[this.tableRepLicensee.sonota2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRitu1Null() {
                return this.IsNull(this.tableRepLicensee.Ritu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRitu1Null() {
                this[this.tableRepLicensee.Ritu1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dgvLicenseeRow : global::System.Data.DataRow {
            
            private dgvLicenseeDataTable tabledgvLicensee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dgvLicenseeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledgvLicensee = ((dgvLicenseeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string toriCd {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.toriCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'toriCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.toriCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string licenseeSyaName {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.licenseeSyaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'licenseeSyaName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.licenseeSyaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenCd {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.tenCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'tenCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.tenCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenName {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.tenNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'tenName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.tenNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uriMeiNo {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.uriMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'uriMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.uriMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string adress {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.adressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'adress\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.adressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kenName {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.kenNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'kenName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.kenNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string representName {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.representNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'representName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.representNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string suRyo {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.suRyoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'suRyo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.suRyoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tanka {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.tankaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'tanka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.tankaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kngk {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.kngkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'kngk\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.kngkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string denpyoNum {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.denpyoNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'denpyoNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.denpyoNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bunCd {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.bunCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'bunCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.bunCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string adress2 {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.adress2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'adress2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.adress2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ritu1 {
                get {
                    try {
                        return ((string)(this[this.tabledgvLicensee.Ritu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'dgvLicensee\' にある列 \'Ritu1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tabledgvLicensee.Ritu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstoriCdNull() {
                return this.IsNull(this.tabledgvLicensee.toriCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettoriCdNull() {
                this[this.tabledgvLicensee.toriCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslicenseeSyaNameNull() {
                return this.IsNull(this.tabledgvLicensee.licenseeSyaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlicenseeSyaNameNull() {
                this[this.tabledgvLicensee.licenseeSyaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstenCdNull() {
                return this.IsNull(this.tabledgvLicensee.tenCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettenCdNull() {
                this[this.tabledgvLicensee.tenCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstenNameNull() {
                return this.IsNull(this.tabledgvLicensee.tenNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettenNameNull() {
                this[this.tabledgvLicensee.tenNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuriMeiNoNull() {
                return this.IsNull(this.tabledgvLicensee.uriMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturiMeiNoNull() {
                this[this.tabledgvLicensee.uriMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadressNull() {
                return this.IsNull(this.tabledgvLicensee.adressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadressNull() {
                this[this.tabledgvLicensee.adressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskenNameNull() {
                return this.IsNull(this.tabledgvLicensee.kenNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkenNameNull() {
                this[this.tabledgvLicensee.kenNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrepresentNameNull() {
                return this.IsNull(this.tabledgvLicensee.representNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrepresentNameNull() {
                this[this.tabledgvLicensee.representNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssuRyoNull() {
                return this.IsNull(this.tabledgvLicensee.suRyoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsuRyoNull() {
                this[this.tabledgvLicensee.suRyoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstankaNull() {
                return this.IsNull(this.tabledgvLicensee.tankaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettankaNull() {
                this[this.tabledgvLicensee.tankaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskngkNull() {
                return this.IsNull(this.tabledgvLicensee.kngkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkngkNull() {
                this[this.tabledgvLicensee.kngkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdenpyoNumNull() {
                return this.IsNull(this.tabledgvLicensee.denpyoNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdenpyoNumNull() {
                this[this.tabledgvLicensee.denpyoNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbunCdNull() {
                return this.IsNull(this.tabledgvLicensee.bunCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbunCdNull() {
                this[this.tabledgvLicensee.bunCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isadress2Null() {
                return this.IsNull(this.tabledgvLicensee.adress2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setadress2Null() {
                this[this.tabledgvLicensee.adress2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRitu1Null() {
                return this.IsNull(this.tabledgvLicensee.Ritu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRitu1Null() {
                this[this.tabledgvLicensee.Ritu1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepmacGetDenNumRow : global::System.Data.DataRow {
            
            private RepmacGetDenNumDataTable tableRepmacGetDenNum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacGetDenNumRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepmacGetDenNum = ((RepmacGetDenNumDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DenNum {
                get {
                    try {
                        return ((string)(this[this.tableRepmacGetDenNum.DenNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacGetDenNum\' にある列 \'DenNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacGetDenNum.DenNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DenNumMax {
                get {
                    try {
                        return ((string)(this[this.tableRepmacGetDenNum.DenNumMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacGetDenNum\' にある列 \'DenNumMax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacGetDenNum.DenNumMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrhskCd {
                get {
                    try {
                        return ((string)(this[this.tableRepmacGetDenNum.TrhskCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacGetDenNum\' にある列 \'TrhskCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacGetDenNum.TrhskCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacGetDenNum.TelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacGetDenNum\' にある列 \'TelNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacGetDenNum.TelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableRepmacGetDenNum.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacGetDenNum\' にある列 \'Address\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacGetDenNum.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetDenpyo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacGetDenNum.SetDenpyoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacGetDenNum\' にある列 \'SetDenpyo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacGetDenNum.SetDenpyoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetLabel {
                get {
                    try {
                        return ((string)(this[this.tableRepmacGetDenNum.SetLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacGetDenNum\' にある列 \'SetLabel\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacGetDenNum.SetLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ComTax {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacGetDenNum.ComTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacGetDenNum\' にある列 \'ComTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacGetDenNum.ComTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDenNumNull() {
                return this.IsNull(this.tableRepmacGetDenNum.DenNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDenNumNull() {
                this[this.tableRepmacGetDenNum.DenNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDenNumMaxNull() {
                return this.IsNull(this.tableRepmacGetDenNum.DenNumMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDenNumMaxNull() {
                this[this.tableRepmacGetDenNum.DenNumMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrhskCdNull() {
                return this.IsNull(this.tableRepmacGetDenNum.TrhskCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrhskCdNull() {
                this[this.tableRepmacGetDenNum.TrhskCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelNoNull() {
                return this.IsNull(this.tableRepmacGetDenNum.TelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelNoNull() {
                this[this.tableRepmacGetDenNum.TelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableRepmacGetDenNum.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableRepmacGetDenNum.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetDenpyoNull() {
                return this.IsNull(this.tableRepmacGetDenNum.SetDenpyoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetDenpyoNull() {
                this[this.tableRepmacGetDenNum.SetDenpyoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetLabelNull() {
                return this.IsNull(this.tableRepmacGetDenNum.SetLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetLabelNull() {
                this[this.tableRepmacGetDenNum.SetLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComTaxNull() {
                return this.IsNull(this.tableRepmacGetDenNum.ComTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComTaxNull() {
                this[this.tableRepmacGetDenNum.ComTaxColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class outputRequestRow : global::System.Data.DataRow {
            
            private outputRequestDataTable tableoutputRequest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal outputRequestRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutputRequest = ((outputRequestDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal seiGak {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputRequest.seiGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'seiGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.seiGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.Date1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'Date1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.Date1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kbn1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.kbn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'kbn1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.kbn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.code1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'code1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.code1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code4 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.code4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'code4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.code4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'name1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'name2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'name3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk1 {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputRequest.kngk1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'kngk1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.kngk1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk2 {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputRequest.kngk2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'kngk2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.kngk2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.sonota1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'sonota1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.sonota1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutNo {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.jyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'jyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.jyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.jyMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'jyMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.jyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string urMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.urMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'urMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.urMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string renbn {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.renbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'renbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.renbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string syamei {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.syameiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'syamei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.syameiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'address1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address2 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'address2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yubinNo {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.yubinNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'yubinNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.yubinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota2 {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.sonota2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'sonota2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.sonota2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DenNum {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.DenNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'DenNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.DenNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrhskCd {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.TrhskCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'TrhskCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.TrhskCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelNo {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.TelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'TelNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.TelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'Address\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetDenpyo {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.SetDenpyoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'SetDenpyo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.SetDenpyoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetLabel {
                get {
                    try {
                        return ((string)(this[this.tableoutputRequest.SetLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'SetLabel\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.SetLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ComTax {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputRequest.ComTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'ComTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.ComTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ritu1 {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputRequest.Ritu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputRequest\' にある列 \'Ritu1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputRequest.Ritu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiGakNull() {
                return this.IsNull(this.tableoutputRequest.seiGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiGakNull() {
                this[this.tableoutputRequest.seiGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDate1Null() {
                return this.IsNull(this.tableoutputRequest.Date1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDate1Null() {
                this[this.tableoutputRequest.Date1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskbn1Null() {
                return this.IsNull(this.tableoutputRequest.kbn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkbn1Null() {
                this[this.tableoutputRequest.kbn1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode1Null() {
                return this.IsNull(this.tableoutputRequest.code1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode1Null() {
                this[this.tableoutputRequest.code1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode4Null() {
                return this.IsNull(this.tableoutputRequest.code4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode4Null() {
                this[this.tableoutputRequest.code4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1Null() {
                return this.IsNull(this.tableoutputRequest.name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1Null() {
                this[this.tableoutputRequest.name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2Null() {
                return this.IsNull(this.tableoutputRequest.name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2Null() {
                this[this.tableoutputRequest.name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3Null() {
                return this.IsNull(this.tableoutputRequest.name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3Null() {
                this[this.tableoutputRequest.name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk1Null() {
                return this.IsNull(this.tableoutputRequest.kngk1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk1Null() {
                this[this.tableoutputRequest.kngk1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk2Null() {
                return this.IsNull(this.tableoutputRequest.kngk2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk2Null() {
                this[this.tableoutputRequest.kngk2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota1Null() {
                return this.IsNull(this.tableoutputRequest.sonota1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota1Null() {
                this[this.tableoutputRequest.sonota1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutNoNull() {
                return this.IsNull(this.tableoutputRequest.jyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutNoNull() {
                this[this.tableoutputRequest.jyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyMeiNoNull() {
                return this.IsNull(this.tableoutputRequest.jyMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyMeiNoNull() {
                this[this.tableoutputRequest.jyMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurMeiNoNull() {
                return this.IsNull(this.tableoutputRequest.urMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturMeiNoNull() {
                this[this.tableoutputRequest.urMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrenbnNull() {
                return this.IsNull(this.tableoutputRequest.renbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrenbnNull() {
                this[this.tableoutputRequest.renbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssyameiNull() {
                return this.IsNull(this.tableoutputRequest.syameiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsyameiNull() {
                this[this.tableoutputRequest.syameiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress1Null() {
                return this.IsNull(this.tableoutputRequest.address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress1Null() {
                this[this.tableoutputRequest.address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress2Null() {
                return this.IsNull(this.tableoutputRequest.address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress2Null() {
                this[this.tableoutputRequest.address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyubinNoNull() {
                return this.IsNull(this.tableoutputRequest.yubinNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyubinNoNull() {
                this[this.tableoutputRequest.yubinNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota2Null() {
                return this.IsNull(this.tableoutputRequest.sonota2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota2Null() {
                this[this.tableoutputRequest.sonota2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDenNumNull() {
                return this.IsNull(this.tableoutputRequest.DenNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDenNumNull() {
                this[this.tableoutputRequest.DenNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrhskCdNull() {
                return this.IsNull(this.tableoutputRequest.TrhskCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrhskCdNull() {
                this[this.tableoutputRequest.TrhskCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelNoNull() {
                return this.IsNull(this.tableoutputRequest.TelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelNoNull() {
                this[this.tableoutputRequest.TelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableoutputRequest.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableoutputRequest.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetDenpyoNull() {
                return this.IsNull(this.tableoutputRequest.SetDenpyoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetDenpyoNull() {
                this[this.tableoutputRequest.SetDenpyoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetLabelNull() {
                return this.IsNull(this.tableoutputRequest.SetLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetLabelNull() {
                this[this.tableoutputRequest.SetLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComTaxNull() {
                return this.IsNull(this.tableoutputRequest.ComTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComTaxNull() {
                this[this.tableoutputRequest.ComTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRitu1Null() {
                return this.IsNull(this.tableoutputRequest.Ritu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRitu1Null() {
                this[this.tableoutputRequest.Ritu1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepmacUpdPurchaseRow : global::System.Data.DataRow {
            
            private RepmacUpdPurchaseDataTable tableRepmacUpdPurchase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacUpdPurchaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepmacUpdPurchase = ((RepmacUpdPurchaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Yymm {
                get {
                    return ((string)(this[this.tableRepmacUpdPurchase.YymmColumn]));
                }
                set {
                    this[this.tableRepmacUpdPurchase.YymmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JyutNo {
                get {
                    return ((string)(this[this.tableRepmacUpdPurchase.JyutNoColumn]));
                }
                set {
                    this[this.tableRepmacUpdPurchase.JyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JyMeiNo {
                get {
                    return ((string)(this[this.tableRepmacUpdPurchase.JyMeiNoColumn]));
                }
                set {
                    this[this.tableRepmacUpdPurchase.JyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UrMeiNo {
                get {
                    return ((string)(this[this.tableRepmacUpdPurchase.UrMeiNoColumn]));
                }
                set {
                    this[this.tableRepmacUpdPurchase.UrMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Renbn {
                get {
                    return ((string)(this[this.tableRepmacUpdPurchase.RenbnColumn]));
                }
                set {
                    this[this.tableRepmacUpdPurchase.RenbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sonota1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacUpdPurchase.Sonota1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacUpdPurchase\' にある列 \'Sonota1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacUpdPurchase.Sonota1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kbn1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacUpdPurchase.kbn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacUpdPurchase\' にある列 \'kbn1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacUpdPurchase.kbn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSonota1Null() {
                return this.IsNull(this.tableRepmacUpdPurchase.Sonota1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSonota1Null() {
                this[this.tableRepmacUpdPurchase.Sonota1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskbn1Null() {
                return this.IsNull(this.tableRepmacUpdPurchase.kbn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkbn1Null() {
                this[this.tableRepmacUpdPurchase.kbn1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepmacRequestRow : global::System.Data.DataRow {
            
            private RepmacRequestDataTable tableRepmacRequest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacRequestRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepmacRequest = ((RepmacRequestDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal seiGak {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacRequest.seiGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'seiGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.seiGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.Date1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'Date1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.Date1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kbn1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.kbn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'kbn1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.kbn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.code1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'code1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.code1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code4 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.code4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'code4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.code4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'name1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'name2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'name3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk1 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacRequest.kngk1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'kngk1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.kngk1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk2 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacRequest.kngk2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'kngk2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.kngk2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.sonota1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'sonota1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.sonota1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.jyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'jyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.jyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.jyMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'jyMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.jyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string urMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.urMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'urMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.urMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string renbn {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.renbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'renbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.renbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string syamei {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.syameiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'syamei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.syameiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address1 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'address1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'address2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yubinNo {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.yubinNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'yubinNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.yubinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota2 {
                get {
                    try {
                        return ((string)(this[this.tableRepmacRequest.sonota2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'sonota2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.sonota2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ritu1 {
                get {
                    try {
                        return ((decimal)(this[this.tableRepmacRequest.Ritu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RepmacRequest\' にある列 \'Ritu1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRepmacRequest.Ritu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiGakNull() {
                return this.IsNull(this.tableRepmacRequest.seiGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiGakNull() {
                this[this.tableRepmacRequest.seiGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDate1Null() {
                return this.IsNull(this.tableRepmacRequest.Date1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDate1Null() {
                this[this.tableRepmacRequest.Date1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskbn1Null() {
                return this.IsNull(this.tableRepmacRequest.kbn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkbn1Null() {
                this[this.tableRepmacRequest.kbn1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode1Null() {
                return this.IsNull(this.tableRepmacRequest.code1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode1Null() {
                this[this.tableRepmacRequest.code1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode4Null() {
                return this.IsNull(this.tableRepmacRequest.code4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode4Null() {
                this[this.tableRepmacRequest.code4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1Null() {
                return this.IsNull(this.tableRepmacRequest.name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1Null() {
                this[this.tableRepmacRequest.name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2Null() {
                return this.IsNull(this.tableRepmacRequest.name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2Null() {
                this[this.tableRepmacRequest.name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3Null() {
                return this.IsNull(this.tableRepmacRequest.name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3Null() {
                this[this.tableRepmacRequest.name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk1Null() {
                return this.IsNull(this.tableRepmacRequest.kngk1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk1Null() {
                this[this.tableRepmacRequest.kngk1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk2Null() {
                return this.IsNull(this.tableRepmacRequest.kngk2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk2Null() {
                this[this.tableRepmacRequest.kngk2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota1Null() {
                return this.IsNull(this.tableRepmacRequest.sonota1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota1Null() {
                this[this.tableRepmacRequest.sonota1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutNoNull() {
                return this.IsNull(this.tableRepmacRequest.jyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutNoNull() {
                this[this.tableRepmacRequest.jyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyMeiNoNull() {
                return this.IsNull(this.tableRepmacRequest.jyMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyMeiNoNull() {
                this[this.tableRepmacRequest.jyMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurMeiNoNull() {
                return this.IsNull(this.tableRepmacRequest.urMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturMeiNoNull() {
                this[this.tableRepmacRequest.urMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrenbnNull() {
                return this.IsNull(this.tableRepmacRequest.renbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrenbnNull() {
                this[this.tableRepmacRequest.renbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssyameiNull() {
                return this.IsNull(this.tableRepmacRequest.syameiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsyameiNull() {
                this[this.tableRepmacRequest.syameiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress1Null() {
                return this.IsNull(this.tableRepmacRequest.address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress1Null() {
                this[this.tableRepmacRequest.address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress2Null() {
                return this.IsNull(this.tableRepmacRequest.address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress2Null() {
                this[this.tableRepmacRequest.address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyubinNoNull() {
                return this.IsNull(this.tableRepmacRequest.yubinNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyubinNoNull() {
                this[this.tableRepmacRequest.yubinNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota2Null() {
                return this.IsNull(this.tableRepmacRequest.sonota2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota2Null() {
                this[this.tableRepmacRequest.sonota2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRitu1Null() {
                return this.IsNull(this.tableRepmacRequest.Ritu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRitu1Null() {
                this[this.tableRepmacRequest.Ritu1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class outputPurchaseRow : global::System.Data.DataRow {
            
            private outputPurchaseDataTable tableoutputPurchase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal outputPurchaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutputPurchase = ((outputPurchaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal seiGak {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputPurchase.seiGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'seiGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.seiGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.Date1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'Date1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.Date1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kbn1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.kbn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'kbn1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.kbn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.code1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'code1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.code1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code4 {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.code4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'code4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.code4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'name1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2 {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'name2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3 {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'name3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk1 {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputPurchase.kngk1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'kngk1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.kngk1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk2 {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputPurchase.kngk2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'kngk2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.kngk2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota1 {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.sonota1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'sonota1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.sonota1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutNo {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.jyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'jyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.jyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.jyMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'jyMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.jyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string urMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.urMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'urMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.urMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string renbn {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.renbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'renbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.renbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string syamei {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.syameiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'syamei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.syameiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string splitflg {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.splitflgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'splitflg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.splitflgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sonota2 {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.sonota2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'sonota2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.sonota2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DenNum {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.DenNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'DenNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.DenNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrhskCd {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.TrhskCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'TrhskCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.TrhskCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelNo {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.TelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'TelNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.TelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'Address\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetDenpyo {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.SetDenpyoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'SetDenpyo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.SetDenpyoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetLabel {
                get {
                    try {
                        return ((string)(this[this.tableoutputPurchase.SetLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'SetLabel\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.SetLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ComTax {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputPurchase.ComTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'ComTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.ComTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ritu1 {
                get {
                    try {
                        return ((decimal)(this[this.tableoutputPurchase.Ritu1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'outputPurchase\' にある列 \'Ritu1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableoutputPurchase.Ritu1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiGakNull() {
                return this.IsNull(this.tableoutputPurchase.seiGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiGakNull() {
                this[this.tableoutputPurchase.seiGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDate1Null() {
                return this.IsNull(this.tableoutputPurchase.Date1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDate1Null() {
                this[this.tableoutputPurchase.Date1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskbn1Null() {
                return this.IsNull(this.tableoutputPurchase.kbn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkbn1Null() {
                this[this.tableoutputPurchase.kbn1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode1Null() {
                return this.IsNull(this.tableoutputPurchase.code1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode1Null() {
                this[this.tableoutputPurchase.code1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode4Null() {
                return this.IsNull(this.tableoutputPurchase.code4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode4Null() {
                this[this.tableoutputPurchase.code4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1Null() {
                return this.IsNull(this.tableoutputPurchase.name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1Null() {
                this[this.tableoutputPurchase.name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2Null() {
                return this.IsNull(this.tableoutputPurchase.name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2Null() {
                this[this.tableoutputPurchase.name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3Null() {
                return this.IsNull(this.tableoutputPurchase.name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3Null() {
                this[this.tableoutputPurchase.name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk1Null() {
                return this.IsNull(this.tableoutputPurchase.kngk1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk1Null() {
                this[this.tableoutputPurchase.kngk1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk2Null() {
                return this.IsNull(this.tableoutputPurchase.kngk2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk2Null() {
                this[this.tableoutputPurchase.kngk2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota1Null() {
                return this.IsNull(this.tableoutputPurchase.sonota1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota1Null() {
                this[this.tableoutputPurchase.sonota1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutNoNull() {
                return this.IsNull(this.tableoutputPurchase.jyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutNoNull() {
                this[this.tableoutputPurchase.jyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyMeiNoNull() {
                return this.IsNull(this.tableoutputPurchase.jyMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyMeiNoNull() {
                this[this.tableoutputPurchase.jyMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurMeiNoNull() {
                return this.IsNull(this.tableoutputPurchase.urMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturMeiNoNull() {
                this[this.tableoutputPurchase.urMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrenbnNull() {
                return this.IsNull(this.tableoutputPurchase.renbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrenbnNull() {
                this[this.tableoutputPurchase.renbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssyameiNull() {
                return this.IsNull(this.tableoutputPurchase.syameiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsyameiNull() {
                this[this.tableoutputPurchase.syameiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssplitflgNull() {
                return this.IsNull(this.tableoutputPurchase.splitflgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsplitflgNull() {
                this[this.tableoutputPurchase.splitflgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issonota2Null() {
                return this.IsNull(this.tableoutputPurchase.sonota2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsonota2Null() {
                this[this.tableoutputPurchase.sonota2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDenNumNull() {
                return this.IsNull(this.tableoutputPurchase.DenNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDenNumNull() {
                this[this.tableoutputPurchase.DenNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrhskCdNull() {
                return this.IsNull(this.tableoutputPurchase.TrhskCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrhskCdNull() {
                this[this.tableoutputPurchase.TrhskCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelNoNull() {
                return this.IsNull(this.tableoutputPurchase.TelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelNoNull() {
                this[this.tableoutputPurchase.TelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableoutputPurchase.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableoutputPurchase.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetDenpyoNull() {
                return this.IsNull(this.tableoutputPurchase.SetDenpyoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetDenpyoNull() {
                this[this.tableoutputPurchase.SetDenpyoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetLabelNull() {
                return this.IsNull(this.tableoutputPurchase.SetLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetLabelNull() {
                this[this.tableoutputPurchase.SetLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComTaxNull() {
                return this.IsNull(this.tableoutputPurchase.ComTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComTaxNull() {
                this[this.tableoutputPurchase.ComTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRitu1Null() {
                return this.IsNull(this.tableoutputPurchase.Ritu1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRitu1Null() {
                this[this.tableoutputPurchase.Ritu1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepmacUpdRequestRow : global::System.Data.DataRow {
            
            private RepmacUpdRequestDataTable tableRepmacUpdRequest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepmacUpdRequestRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepmacUpdRequest = ((RepmacUpdRequestDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Yymm {
                get {
                    return ((string)(this[this.tableRepmacUpdRequest.YymmColumn]));
                }
                set {
                    this[this.tableRepmacUpdRequest.YymmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JyutNo {
                get {
                    return ((string)(this[this.tableRepmacUpdRequest.JyutNoColumn]));
                }
                set {
                    this[this.tableRepmacUpdRequest.JyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JyMeiNo {
                get {
                    return ((string)(this[this.tableRepmacUpdRequest.JyMeiNoColumn]));
                }
                set {
                    this[this.tableRepmacUpdRequest.JyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UrMeiNo {
                get {
                    return ((string)(this[this.tableRepmacUpdRequest.UrMeiNoColumn]));
                }
                set {
                    this[this.tableRepmacUpdRequest.UrMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Renbn {
                get {
                    return ((string)(this[this.tableRepmacUpdRequest.RenbnColumn]));
                }
                set {
                    this[this.tableRepmacUpdRequest.RenbnColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepmacRowChangeEvent : global::System.EventArgs {
            
            private RepmacRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRowChangeEvent(RepmacRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepmacSchklstRowChangeEvent : global::System.EventArgs {
            
            private RepmacSchklstRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacSchklstRowChangeEvent(RepmacSchklstRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacSchklstRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepmacPurchaseRowChangeEvent : global::System.EventArgs {
            
            private RepmacPurchaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacPurchaseRowChangeEvent(RepmacPurchaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacPurchaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepLicenseeRowChangeEvent : global::System.EventArgs {
            
            private RepLicenseeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepLicenseeRowChangeEvent(RepLicenseeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepLicenseeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dgvLicenseeRowChangeEvent : global::System.EventArgs {
            
            private dgvLicenseeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dgvLicenseeRowChangeEvent(dgvLicenseeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dgvLicenseeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepmacGetDenNumRowChangeEvent : global::System.EventArgs {
            
            private RepmacGetDenNumRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacGetDenNumRowChangeEvent(RepmacGetDenNumRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacGetDenNumRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class outputRequestRowChangeEvent : global::System.EventArgs {
            
            private outputRequestRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputRequestRowChangeEvent(outputRequestRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputRequestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepmacUpdPurchaseRowChangeEvent : global::System.EventArgs {
            
            private RepmacUpdPurchaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdPurchaseRowChangeEvent(RepmacUpdPurchaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdPurchaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepmacRequestRowChangeEvent : global::System.EventArgs {
            
            private RepmacRequestRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRequestRowChangeEvent(RepmacRequestRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacRequestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class outputPurchaseRowChangeEvent : global::System.EventArgs {
            
            private outputPurchaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputPurchaseRowChangeEvent(outputPurchaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public outputPurchaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepmacUpdRequestRowChangeEvent : global::System.EventArgs {
            
            private RepmacUpdRequestRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdRequestRowChangeEvent(RepmacUpdRequestRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepmacUpdRequestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591