//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3643
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Mac.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MastDSMac")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MastDSMac : global::System.Data.DataSet {
        
        private TenpoRrkDataTable tableTenpoRrk;
        
        private DisplayTenpoRrkDataTable tableDisplayTenpoRrk;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MastDSMac() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MastDSMac(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TenpoRrk"] != null)) {
                    base.Tables.Add(new TenpoRrkDataTable(ds.Tables["TenpoRrk"]));
                }
                if ((ds.Tables["DisplayTenpoRrk"] != null)) {
                    base.Tables.Add(new DisplayTenpoRrkDataTable(ds.Tables["DisplayTenpoRrk"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TenpoRrkDataTable TenpoRrk {
            get {
                return this.tableTenpoRrk;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DisplayTenpoRrkDataTable DisplayTenpoRrk {
            get {
                return this.tableDisplayTenpoRrk;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MastDSMac cln = ((MastDSMac)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TenpoRrk"] != null)) {
                    base.Tables.Add(new TenpoRrkDataTable(ds.Tables["TenpoRrk"]));
                }
                if ((ds.Tables["DisplayTenpoRrk"] != null)) {
                    base.Tables.Add(new DisplayTenpoRrkDataTable(ds.Tables["DisplayTenpoRrk"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTenpoRrk = ((TenpoRrkDataTable)(base.Tables["TenpoRrk"]));
            if ((initTable == true)) {
                if ((this.tableTenpoRrk != null)) {
                    this.tableTenpoRrk.InitVars();
                }
            }
            this.tableDisplayTenpoRrk = ((DisplayTenpoRrkDataTable)(base.Tables["DisplayTenpoRrk"]));
            if ((initTable == true)) {
                if ((this.tableDisplayTenpoRrk != null)) {
                    this.tableDisplayTenpoRrk.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MastDSMac";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MastDSMac.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTenpoRrk = new TenpoRrkDataTable();
            base.Tables.Add(this.tableTenpoRrk);
            this.tableDisplayTenpoRrk = new DisplayTenpoRrkDataTable();
            base.Tables.Add(this.tableDisplayTenpoRrk);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTenpoRrk() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDisplayTenpoRrk() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MastDSMac ds = new MastDSMac();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TenpoRrkRowChangeEventHandler(object sender, TenpoRrkRowChangeEvent e);
        
        public delegate void DisplayTenpoRrkRowChangeEventHandler(object sender, DisplayTenpoRrkRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TenpoRrkDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntrkTimStmp;
            
            private global::System.Data.DataColumn columntrkPl;
            
            private global::System.Data.DataColumn columntrkTnt;
            
            private global::System.Data.DataColumn columnupdTimStmp;
            
            private global::System.Data.DataColumn columnupdaPl;
            
            private global::System.Data.DataColumn columnupdTnt;
            
            private global::System.Data.DataColumn columnegCd;
            
            private global::System.Data.DataColumn columntksKgyCd;
            
            private global::System.Data.DataColumn columntksBmnSeqNo;
            
            private global::System.Data.DataColumn columntksTntSeqNo;
            
            private global::System.Data.DataColumn columntenpoCd;
            
            private global::System.Data.DataColumn columntenpoNm;
            
            private global::System.Data.DataColumn columnterritory;
            
            private global::System.Data.DataColumn columntenpoKbn;
            
            private global::System.Data.DataColumn columnkamoku;
            
            private global::System.Data.DataColumn columnyubinNo;
            
            private global::System.Data.DataColumn columnaddress1;
            
            private global::System.Data.DataColumn columnaddress2;
            
            private global::System.Data.DataColumn columntelNo;
            
            private global::System.Data.DataColumn columnsplitFlg;
            
            private global::System.Data.DataColumn columncompanyNm;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columntorihikiCd;
            
            private global::System.Data.DataColumn columninStatus;
            
            private global::System.Data.DataColumn columnsGOpen;
            
            private global::System.Data.DataColumn columngOpen;
            
            private global::System.Data.DataColumn columngClose;
            
            private global::System.Data.DataColumn columnupdRrkTimstmp;
            
            private global::System.Data.DataColumn columntorikomiFlg;
            
            private global::System.Data.DataColumn columnrrkSybt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TenpoRrkDataTable() {
                this.TableName = "TenpoRrk";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TenpoRrkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TenpoRrkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trkTimStmpColumn {
                get {
                    return this.columntrkTimStmp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trkPlColumn {
                get {
                    return this.columntrkPl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trkTntColumn {
                get {
                    return this.columntrkTnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updTimStmpColumn {
                get {
                    return this.columnupdTimStmp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updaPlColumn {
                get {
                    return this.columnupdaPl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updTntColumn {
                get {
                    return this.columnupdTnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn egCdColumn {
                get {
                    return this.columnegCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tksKgyCdColumn {
                get {
                    return this.columntksKgyCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tksBmnSeqNoColumn {
                get {
                    return this.columntksBmnSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tksTntSeqNoColumn {
                get {
                    return this.columntksTntSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenpoCdColumn {
                get {
                    return this.columntenpoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenpoNmColumn {
                get {
                    return this.columntenpoNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn territoryColumn {
                get {
                    return this.columnterritory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenpoKbnColumn {
                get {
                    return this.columntenpoKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kamokuColumn {
                get {
                    return this.columnkamoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yubinNoColumn {
                get {
                    return this.columnyubinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address1Column {
                get {
                    return this.columnaddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address2Column {
                get {
                    return this.columnaddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn telNoColumn {
                get {
                    return this.columntelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn splitFlgColumn {
                get {
                    return this.columnsplitFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyNmColumn {
                get {
                    return this.columncompanyNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn torihikiCdColumn {
                get {
                    return this.columntorihikiCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inStatusColumn {
                get {
                    return this.columninStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sGOpenColumn {
                get {
                    return this.columnsGOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gOpenColumn {
                get {
                    return this.columngOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gCloseColumn {
                get {
                    return this.columngClose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updRrkTimstmpColumn {
                get {
                    return this.columnupdRrkTimstmp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn torikomiFlgColumn {
                get {
                    return this.columntorikomiFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rrkSybtColumn {
                get {
                    return this.columnrrkSybt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TenpoRrkRow this[int index] {
                get {
                    return ((TenpoRrkRow)(this.Rows[index]));
                }
            }
            
            public event TenpoRrkRowChangeEventHandler TenpoRrkRowChanging;
            
            public event TenpoRrkRowChangeEventHandler TenpoRrkRowChanged;
            
            public event TenpoRrkRowChangeEventHandler TenpoRrkRowDeleting;
            
            public event TenpoRrkRowChangeEventHandler TenpoRrkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTenpoRrkRow(TenpoRrkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TenpoRrkRow AddTenpoRrkRow(
                        string trkTimStmp, 
                        string trkPl, 
                        string trkTnt, 
                        string updTimStmp, 
                        string updaPl, 
                        string updTnt, 
                        string egCd, 
                        string tksKgyCd, 
                        string tksBmnSeqNo, 
                        string tksTntSeqNo, 
                        string tenpoCd, 
                        string tenpoNm, 
                        string territory, 
                        string tenpoKbn, 
                        string kamoku, 
                        string yubinNo, 
                        string address1, 
                        string address2, 
                        string telNo, 
                        string splitFlg, 
                        string companyNm, 
                        string name, 
                        string torihikiCd, 
                        string inStatus, 
                        string sGOpen, 
                        string gOpen, 
                        string gClose, 
                        string updRrkTimstmp, 
                        string torikomiFlg, 
                        string rrkSybt) {
                TenpoRrkRow rowTenpoRrkRow = ((TenpoRrkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        trkTimStmp,
                        trkPl,
                        trkTnt,
                        updTimStmp,
                        updaPl,
                        updTnt,
                        egCd,
                        tksKgyCd,
                        tksBmnSeqNo,
                        tksTntSeqNo,
                        tenpoCd,
                        tenpoNm,
                        territory,
                        tenpoKbn,
                        kamoku,
                        yubinNo,
                        address1,
                        address2,
                        telNo,
                        splitFlg,
                        companyNm,
                        name,
                        torihikiCd,
                        inStatus,
                        sGOpen,
                        gOpen,
                        gClose,
                        updRrkTimstmp,
                        torikomiFlg,
                        rrkSybt};
                rowTenpoRrkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTenpoRrkRow);
                return rowTenpoRrkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TenpoRrkDataTable cln = ((TenpoRrkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TenpoRrkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntrkTimStmp = base.Columns["trkTimStmp"];
                this.columntrkPl = base.Columns["trkPl"];
                this.columntrkTnt = base.Columns["trkTnt"];
                this.columnupdTimStmp = base.Columns["updTimStmp"];
                this.columnupdaPl = base.Columns["updaPl"];
                this.columnupdTnt = base.Columns["updTnt"];
                this.columnegCd = base.Columns["egCd"];
                this.columntksKgyCd = base.Columns["tksKgyCd"];
                this.columntksBmnSeqNo = base.Columns["tksBmnSeqNo"];
                this.columntksTntSeqNo = base.Columns["tksTntSeqNo"];
                this.columntenpoCd = base.Columns["tenpoCd"];
                this.columntenpoNm = base.Columns["tenpoNm"];
                this.columnterritory = base.Columns["territory"];
                this.columntenpoKbn = base.Columns["tenpoKbn"];
                this.columnkamoku = base.Columns["kamoku"];
                this.columnyubinNo = base.Columns["yubinNo"];
                this.columnaddress1 = base.Columns["address1"];
                this.columnaddress2 = base.Columns["address2"];
                this.columntelNo = base.Columns["telNo"];
                this.columnsplitFlg = base.Columns["splitFlg"];
                this.columncompanyNm = base.Columns["companyNm"];
                this.columnname = base.Columns["name"];
                this.columntorihikiCd = base.Columns["torihikiCd"];
                this.columninStatus = base.Columns["inStatus"];
                this.columnsGOpen = base.Columns["sGOpen"];
                this.columngOpen = base.Columns["gOpen"];
                this.columngClose = base.Columns["gClose"];
                this.columnupdRrkTimstmp = base.Columns["updRrkTimstmp"];
                this.columntorikomiFlg = base.Columns["torikomiFlg"];
                this.columnrrkSybt = base.Columns["rrkSybt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntrkTimStmp = new global::System.Data.DataColumn("trkTimStmp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrkTimStmp);
                this.columntrkPl = new global::System.Data.DataColumn("trkPl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrkPl);
                this.columntrkTnt = new global::System.Data.DataColumn("trkTnt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrkTnt);
                this.columnupdTimStmp = new global::System.Data.DataColumn("updTimStmp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdTimStmp);
                this.columnupdaPl = new global::System.Data.DataColumn("updaPl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdaPl);
                this.columnupdTnt = new global::System.Data.DataColumn("updTnt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdTnt);
                this.columnegCd = new global::System.Data.DataColumn("egCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnegCd);
                this.columntksKgyCd = new global::System.Data.DataColumn("tksKgyCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntksKgyCd);
                this.columntksBmnSeqNo = new global::System.Data.DataColumn("tksBmnSeqNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntksBmnSeqNo);
                this.columntksTntSeqNo = new global::System.Data.DataColumn("tksTntSeqNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntksTntSeqNo);
                this.columntenpoCd = new global::System.Data.DataColumn("tenpoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenpoCd);
                this.columntenpoNm = new global::System.Data.DataColumn("tenpoNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenpoNm);
                this.columnterritory = new global::System.Data.DataColumn("territory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnterritory);
                this.columntenpoKbn = new global::System.Data.DataColumn("tenpoKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenpoKbn);
                this.columnkamoku = new global::System.Data.DataColumn("kamoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkamoku);
                this.columnyubinNo = new global::System.Data.DataColumn("yubinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyubinNo);
                this.columnaddress1 = new global::System.Data.DataColumn("address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress1);
                this.columnaddress2 = new global::System.Data.DataColumn("address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress2);
                this.columntelNo = new global::System.Data.DataColumn("telNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelNo);
                this.columnsplitFlg = new global::System.Data.DataColumn("splitFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsplitFlg);
                this.columncompanyNm = new global::System.Data.DataColumn("companyNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompanyNm);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columntorihikiCd = new global::System.Data.DataColumn("torihikiCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntorihikiCd);
                this.columninStatus = new global::System.Data.DataColumn("inStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninStatus);
                this.columnsGOpen = new global::System.Data.DataColumn("sGOpen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsGOpen);
                this.columngOpen = new global::System.Data.DataColumn("gOpen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngOpen);
                this.columngClose = new global::System.Data.DataColumn("gClose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngClose);
                this.columnupdRrkTimstmp = new global::System.Data.DataColumn("updRrkTimstmp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdRrkTimstmp);
                this.columntorikomiFlg = new global::System.Data.DataColumn("torikomiFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntorikomiFlg);
                this.columnrrkSybt = new global::System.Data.DataColumn("rrkSybt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrrkSybt);
                this.columntenpoCd.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TenpoRrkRow NewTenpoRrkRow() {
                return ((TenpoRrkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TenpoRrkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TenpoRrkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TenpoRrkRowChanged != null)) {
                    this.TenpoRrkRowChanged(this, new TenpoRrkRowChangeEvent(((TenpoRrkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TenpoRrkRowChanging != null)) {
                    this.TenpoRrkRowChanging(this, new TenpoRrkRowChangeEvent(((TenpoRrkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TenpoRrkRowDeleted != null)) {
                    this.TenpoRrkRowDeleted(this, new TenpoRrkRowChangeEvent(((TenpoRrkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TenpoRrkRowDeleting != null)) {
                    this.TenpoRrkRowDeleting(this, new TenpoRrkRowChangeEvent(((TenpoRrkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTenpoRrkRow(TenpoRrkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MastDSMac ds = new MastDSMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TenpoRrkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DisplayTenpoRrkDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncheck;
            
            private global::System.Data.DataColumn columnupdRrkTimstmp;
            
            private global::System.Data.DataColumn columnrrkSybt;
            
            private global::System.Data.DataColumn columnrrkSybtCd;
            
            private global::System.Data.DataColumn columntorikomiFlg;
            
            private global::System.Data.DataColumn columntorikomiFlgCd;
            
            private global::System.Data.DataColumn columntenpoCd;
            
            private global::System.Data.DataColumn columntenpoNm;
            
            private global::System.Data.DataColumn columnterritory;
            
            private global::System.Data.DataColumn columnterritoryCd;
            
            private global::System.Data.DataColumn columntenpoKbn;
            
            private global::System.Data.DataColumn columntenpoKbnCd;
            
            private global::System.Data.DataColumn columnkamoku;
            
            private global::System.Data.DataColumn columnyubinNo;
            
            private global::System.Data.DataColumn columnaddress1;
            
            private global::System.Data.DataColumn columnaddress2;
            
            private global::System.Data.DataColumn columntelNo;
            
            private global::System.Data.DataColumn columnsplitFlg;
            
            private global::System.Data.DataColumn columnsplitFlgCd;
            
            private global::System.Data.DataColumn columncompanyNm;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columntorihikiCd;
            
            private global::System.Data.DataColumn columninStatus;
            
            private global::System.Data.DataColumn columnsGOpen;
            
            private global::System.Data.DataColumn columngOpen;
            
            private global::System.Data.DataColumn columngClose;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DisplayTenpoRrkDataTable() {
                this.TableName = "DisplayTenpoRrk";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DisplayTenpoRrkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DisplayTenpoRrkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn checkColumn {
                get {
                    return this.columncheck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updRrkTimstmpColumn {
                get {
                    return this.columnupdRrkTimstmp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rrkSybtColumn {
                get {
                    return this.columnrrkSybt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rrkSybtCdColumn {
                get {
                    return this.columnrrkSybtCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn torikomiFlgColumn {
                get {
                    return this.columntorikomiFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn torikomiFlgCdColumn {
                get {
                    return this.columntorikomiFlgCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenpoCdColumn {
                get {
                    return this.columntenpoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenpoNmColumn {
                get {
                    return this.columntenpoNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn territoryColumn {
                get {
                    return this.columnterritory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn territoryCdColumn {
                get {
                    return this.columnterritoryCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenpoKbnColumn {
                get {
                    return this.columntenpoKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenpoKbnCdColumn {
                get {
                    return this.columntenpoKbnCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kamokuColumn {
                get {
                    return this.columnkamoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yubinNoColumn {
                get {
                    return this.columnyubinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address1Column {
                get {
                    return this.columnaddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address2Column {
                get {
                    return this.columnaddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn telNoColumn {
                get {
                    return this.columntelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn splitFlgColumn {
                get {
                    return this.columnsplitFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn splitFlgCdColumn {
                get {
                    return this.columnsplitFlgCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyNmColumn {
                get {
                    return this.columncompanyNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn torihikiCdColumn {
                get {
                    return this.columntorihikiCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inStatusColumn {
                get {
                    return this.columninStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sGOpenColumn {
                get {
                    return this.columnsGOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gOpenColumn {
                get {
                    return this.columngOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gCloseColumn {
                get {
                    return this.columngClose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DisplayTenpoRrkRow this[int index] {
                get {
                    return ((DisplayTenpoRrkRow)(this.Rows[index]));
                }
            }
            
            public event DisplayTenpoRrkRowChangeEventHandler DisplayTenpoRrkRowChanging;
            
            public event DisplayTenpoRrkRowChangeEventHandler DisplayTenpoRrkRowChanged;
            
            public event DisplayTenpoRrkRowChangeEventHandler DisplayTenpoRrkRowDeleting;
            
            public event DisplayTenpoRrkRowChangeEventHandler DisplayTenpoRrkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDisplayTenpoRrkRow(DisplayTenpoRrkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DisplayTenpoRrkRow AddDisplayTenpoRrkRow(
                        string check, 
                        string updRrkTimstmp, 
                        string rrkSybt, 
                        string rrkSybtCd, 
                        string torikomiFlg, 
                        string torikomiFlgCd, 
                        string tenpoCd, 
                        string tenpoNm, 
                        string territory, 
                        string territoryCd, 
                        string tenpoKbn, 
                        string tenpoKbnCd, 
                        string kamoku, 
                        string yubinNo, 
                        string address1, 
                        string address2, 
                        string telNo, 
                        string splitFlg, 
                        string splitFlgCd, 
                        string companyNm, 
                        string name, 
                        string torihikiCd, 
                        string inStatus, 
                        string sGOpen, 
                        string gOpen, 
                        string gClose) {
                DisplayTenpoRrkRow rowDisplayTenpoRrkRow = ((DisplayTenpoRrkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        check,
                        updRrkTimstmp,
                        rrkSybt,
                        rrkSybtCd,
                        torikomiFlg,
                        torikomiFlgCd,
                        tenpoCd,
                        tenpoNm,
                        territory,
                        territoryCd,
                        tenpoKbn,
                        tenpoKbnCd,
                        kamoku,
                        yubinNo,
                        address1,
                        address2,
                        telNo,
                        splitFlg,
                        splitFlgCd,
                        companyNm,
                        name,
                        torihikiCd,
                        inStatus,
                        sGOpen,
                        gOpen,
                        gClose};
                rowDisplayTenpoRrkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDisplayTenpoRrkRow);
                return rowDisplayTenpoRrkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DisplayTenpoRrkDataTable cln = ((DisplayTenpoRrkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DisplayTenpoRrkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncheck = base.Columns["check"];
                this.columnupdRrkTimstmp = base.Columns["updRrkTimstmp"];
                this.columnrrkSybt = base.Columns["rrkSybt"];
                this.columnrrkSybtCd = base.Columns["rrkSybtCd"];
                this.columntorikomiFlg = base.Columns["torikomiFlg"];
                this.columntorikomiFlgCd = base.Columns["torikomiFlgCd"];
                this.columntenpoCd = base.Columns["tenpoCd"];
                this.columntenpoNm = base.Columns["tenpoNm"];
                this.columnterritory = base.Columns["territory"];
                this.columnterritoryCd = base.Columns["territoryCd"];
                this.columntenpoKbn = base.Columns["tenpoKbn"];
                this.columntenpoKbnCd = base.Columns["tenpoKbnCd"];
                this.columnkamoku = base.Columns["kamoku"];
                this.columnyubinNo = base.Columns["yubinNo"];
                this.columnaddress1 = base.Columns["address1"];
                this.columnaddress2 = base.Columns["address2"];
                this.columntelNo = base.Columns["telNo"];
                this.columnsplitFlg = base.Columns["splitFlg"];
                this.columnsplitFlgCd = base.Columns["splitFlgCd"];
                this.columncompanyNm = base.Columns["companyNm"];
                this.columnname = base.Columns["name"];
                this.columntorihikiCd = base.Columns["torihikiCd"];
                this.columninStatus = base.Columns["inStatus"];
                this.columnsGOpen = base.Columns["sGOpen"];
                this.columngOpen = base.Columns["gOpen"];
                this.columngClose = base.Columns["gClose"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncheck = new global::System.Data.DataColumn("check", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheck);
                this.columnupdRrkTimstmp = new global::System.Data.DataColumn("updRrkTimstmp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdRrkTimstmp);
                this.columnrrkSybt = new global::System.Data.DataColumn("rrkSybt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrrkSybt);
                this.columnrrkSybtCd = new global::System.Data.DataColumn("rrkSybtCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrrkSybtCd);
                this.columntorikomiFlg = new global::System.Data.DataColumn("torikomiFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntorikomiFlg);
                this.columntorikomiFlgCd = new global::System.Data.DataColumn("torikomiFlgCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntorikomiFlgCd);
                this.columntenpoCd = new global::System.Data.DataColumn("tenpoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenpoCd);
                this.columntenpoNm = new global::System.Data.DataColumn("tenpoNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenpoNm);
                this.columnterritory = new global::System.Data.DataColumn("territory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnterritory);
                this.columnterritoryCd = new global::System.Data.DataColumn("territoryCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnterritoryCd);
                this.columntenpoKbn = new global::System.Data.DataColumn("tenpoKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenpoKbn);
                this.columntenpoKbnCd = new global::System.Data.DataColumn("tenpoKbnCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenpoKbnCd);
                this.columnkamoku = new global::System.Data.DataColumn("kamoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkamoku);
                this.columnyubinNo = new global::System.Data.DataColumn("yubinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyubinNo);
                this.columnaddress1 = new global::System.Data.DataColumn("address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress1);
                this.columnaddress2 = new global::System.Data.DataColumn("address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress2);
                this.columntelNo = new global::System.Data.DataColumn("telNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelNo);
                this.columnsplitFlg = new global::System.Data.DataColumn("splitFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsplitFlg);
                this.columnsplitFlgCd = new global::System.Data.DataColumn("splitFlgCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsplitFlgCd);
                this.columncompanyNm = new global::System.Data.DataColumn("companyNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompanyNm);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columntorihikiCd = new global::System.Data.DataColumn("torihikiCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntorihikiCd);
                this.columninStatus = new global::System.Data.DataColumn("inStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninStatus);
                this.columnsGOpen = new global::System.Data.DataColumn("sGOpen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsGOpen);
                this.columngOpen = new global::System.Data.DataColumn("gOpen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngOpen);
                this.columngClose = new global::System.Data.DataColumn("gClose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngClose);
                this.columntenpoCd.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DisplayTenpoRrkRow NewDisplayTenpoRrkRow() {
                return ((DisplayTenpoRrkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DisplayTenpoRrkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DisplayTenpoRrkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DisplayTenpoRrkRowChanged != null)) {
                    this.DisplayTenpoRrkRowChanged(this, new DisplayTenpoRrkRowChangeEvent(((DisplayTenpoRrkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DisplayTenpoRrkRowChanging != null)) {
                    this.DisplayTenpoRrkRowChanging(this, new DisplayTenpoRrkRowChangeEvent(((DisplayTenpoRrkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DisplayTenpoRrkRowDeleted != null)) {
                    this.DisplayTenpoRrkRowDeleted(this, new DisplayTenpoRrkRowChangeEvent(((DisplayTenpoRrkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DisplayTenpoRrkRowDeleting != null)) {
                    this.DisplayTenpoRrkRowDeleting(this, new DisplayTenpoRrkRowChangeEvent(((DisplayTenpoRrkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDisplayTenpoRrkRow(DisplayTenpoRrkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MastDSMac ds = new MastDSMac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DisplayTenpoRrkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TenpoRrkRow : global::System.Data.DataRow {
            
            private TenpoRrkDataTable tableTenpoRrk;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TenpoRrkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTenpoRrk = ((TenpoRrkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string trkTimStmp {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.trkTimStmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'trkTimStmp\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.trkTimStmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string trkPl {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.trkPlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'trkPl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.trkPlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string trkTnt {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.trkTntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'trkTnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.trkTntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string updTimStmp {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.updTimStmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'updTimStmp\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.updTimStmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string updaPl {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.updaPlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'updaPl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.updaPlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string updTnt {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.updTntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'updTnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.updTntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string egCd {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.egCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'egCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.egCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tksKgyCd {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.tksKgyCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'tksKgyCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.tksKgyCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tksBmnSeqNo {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.tksBmnSeqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'tksBmnSeqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.tksBmnSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tksTntSeqNo {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.tksTntSeqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'tksTntSeqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.tksTntSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenpoCd {
                get {
                    return ((string)(this[this.tableTenpoRrk.tenpoCdColumn]));
                }
                set {
                    this[this.tableTenpoRrk.tenpoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenpoNm {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.tenpoNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'tenpoNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.tenpoNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string territory {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.territoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'territory\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.territoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenpoKbn {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.tenpoKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'tenpoKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.tenpoKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kamoku {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.kamokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'kamoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.kamokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yubinNo {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.yubinNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'yubinNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.yubinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address1 {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'address1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address2 {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'address2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string telNo {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.telNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'telNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.telNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string splitFlg {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.splitFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'splitFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.splitFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string companyNm {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.companyNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'companyNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.companyNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'name\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string torihikiCd {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.torihikiCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'torihikiCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.torihikiCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inStatus {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.inStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'inStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.inStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sGOpen {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.sGOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'sGOpen\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.sGOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gOpen {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.gOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'gOpen\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.gOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gClose {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.gCloseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'gClose\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.gCloseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string updRrkTimstmp {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.updRrkTimstmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'updRrkTimstmp\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.updRrkTimstmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string torikomiFlg {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.torikomiFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'torikomiFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.torikomiFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rrkSybt {
                get {
                    try {
                        return ((string)(this[this.tableTenpoRrk.rrkSybtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TenpoRrk\' にある列 \'rrkSybt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTenpoRrk.rrkSybtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrkTimStmpNull() {
                return this.IsNull(this.tableTenpoRrk.trkTimStmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrkTimStmpNull() {
                this[this.tableTenpoRrk.trkTimStmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrkPlNull() {
                return this.IsNull(this.tableTenpoRrk.trkPlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrkPlNull() {
                this[this.tableTenpoRrk.trkPlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrkTntNull() {
                return this.IsNull(this.tableTenpoRrk.trkTntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrkTntNull() {
                this[this.tableTenpoRrk.trkTntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdTimStmpNull() {
                return this.IsNull(this.tableTenpoRrk.updTimStmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdTimStmpNull() {
                this[this.tableTenpoRrk.updTimStmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdaPlNull() {
                return this.IsNull(this.tableTenpoRrk.updaPlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdaPlNull() {
                this[this.tableTenpoRrk.updaPlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdTntNull() {
                return this.IsNull(this.tableTenpoRrk.updTntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdTntNull() {
                this[this.tableTenpoRrk.updTntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsegCdNull() {
                return this.IsNull(this.tableTenpoRrk.egCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetegCdNull() {
                this[this.tableTenpoRrk.egCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstksKgyCdNull() {
                return this.IsNull(this.tableTenpoRrk.tksKgyCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettksKgyCdNull() {
                this[this.tableTenpoRrk.tksKgyCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstksBmnSeqNoNull() {
                return this.IsNull(this.tableTenpoRrk.tksBmnSeqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettksBmnSeqNoNull() {
                this[this.tableTenpoRrk.tksBmnSeqNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstksTntSeqNoNull() {
                return this.IsNull(this.tableTenpoRrk.tksTntSeqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettksTntSeqNoNull() {
                this[this.tableTenpoRrk.tksTntSeqNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstenpoNmNull() {
                return this.IsNull(this.tableTenpoRrk.tenpoNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettenpoNmNull() {
                this[this.tableTenpoRrk.tenpoNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsterritoryNull() {
                return this.IsNull(this.tableTenpoRrk.territoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetterritoryNull() {
                this[this.tableTenpoRrk.territoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstenpoKbnNull() {
                return this.IsNull(this.tableTenpoRrk.tenpoKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettenpoKbnNull() {
                this[this.tableTenpoRrk.tenpoKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskamokuNull() {
                return this.IsNull(this.tableTenpoRrk.kamokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkamokuNull() {
                this[this.tableTenpoRrk.kamokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyubinNoNull() {
                return this.IsNull(this.tableTenpoRrk.yubinNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyubinNoNull() {
                this[this.tableTenpoRrk.yubinNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress1Null() {
                return this.IsNull(this.tableTenpoRrk.address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress1Null() {
                this[this.tableTenpoRrk.address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress2Null() {
                return this.IsNull(this.tableTenpoRrk.address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress2Null() {
                this[this.tableTenpoRrk.address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstelNoNull() {
                return this.IsNull(this.tableTenpoRrk.telNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettelNoNull() {
                this[this.tableTenpoRrk.telNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssplitFlgNull() {
                return this.IsNull(this.tableTenpoRrk.splitFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsplitFlgNull() {
                this[this.tableTenpoRrk.splitFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyNmNull() {
                return this.IsNull(this.tableTenpoRrk.companyNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyNmNull() {
                this[this.tableTenpoRrk.companyNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableTenpoRrk.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableTenpoRrk.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstorihikiCdNull() {
                return this.IsNull(this.tableTenpoRrk.torihikiCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettorihikiCdNull() {
                this[this.tableTenpoRrk.torihikiCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinStatusNull() {
                return this.IsNull(this.tableTenpoRrk.inStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinStatusNull() {
                this[this.tableTenpoRrk.inStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssGOpenNull() {
                return this.IsNull(this.tableTenpoRrk.sGOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsGOpenNull() {
                this[this.tableTenpoRrk.sGOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgOpenNull() {
                return this.IsNull(this.tableTenpoRrk.gOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgOpenNull() {
                this[this.tableTenpoRrk.gOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgCloseNull() {
                return this.IsNull(this.tableTenpoRrk.gCloseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgCloseNull() {
                this[this.tableTenpoRrk.gCloseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdRrkTimstmpNull() {
                return this.IsNull(this.tableTenpoRrk.updRrkTimstmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdRrkTimstmpNull() {
                this[this.tableTenpoRrk.updRrkTimstmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstorikomiFlgNull() {
                return this.IsNull(this.tableTenpoRrk.torikomiFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettorikomiFlgNull() {
                this[this.tableTenpoRrk.torikomiFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrrkSybtNull() {
                return this.IsNull(this.tableTenpoRrk.rrkSybtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrrkSybtNull() {
                this[this.tableTenpoRrk.rrkSybtColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DisplayTenpoRrkRow : global::System.Data.DataRow {
            
            private DisplayTenpoRrkDataTable tableDisplayTenpoRrk;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DisplayTenpoRrkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDisplayTenpoRrk = ((DisplayTenpoRrkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string check {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.checkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'check\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.checkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string updRrkTimstmp {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.updRrkTimstmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'updRrkTimstmp\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.updRrkTimstmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rrkSybt {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.rrkSybtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'rrkSybt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.rrkSybtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rrkSybtCd {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.rrkSybtCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'rrkSybtCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.rrkSybtCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string torikomiFlg {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.torikomiFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'torikomiFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.torikomiFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string torikomiFlgCd {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.torikomiFlgCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'torikomiFlgCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.torikomiFlgCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenpoCd {
                get {
                    return ((string)(this[this.tableDisplayTenpoRrk.tenpoCdColumn]));
                }
                set {
                    this[this.tableDisplayTenpoRrk.tenpoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenpoNm {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.tenpoNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'tenpoNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.tenpoNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string territory {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.territoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'territory\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.territoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string territoryCd {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.territoryCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'territoryCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.territoryCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenpoKbn {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.tenpoKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'tenpoKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.tenpoKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenpoKbnCd {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.tenpoKbnCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'tenpoKbnCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.tenpoKbnCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kamoku {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.kamokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'kamoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.kamokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yubinNo {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.yubinNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'yubinNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.yubinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address1 {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'address1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address2 {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'address2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string telNo {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.telNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'telNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.telNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string splitFlg {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.splitFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'splitFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.splitFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string splitFlgCd {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.splitFlgCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'splitFlgCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.splitFlgCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string companyNm {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.companyNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'companyNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.companyNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'name\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string torihikiCd {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.torihikiCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'torihikiCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.torihikiCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inStatus {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.inStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'inStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.inStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sGOpen {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.sGOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'sGOpen\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.sGOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gOpen {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.gOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'gOpen\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.gOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gClose {
                get {
                    try {
                        return ((string)(this[this.tableDisplayTenpoRrk.gCloseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DisplayTenpoRrk\' にある列 \'gClose\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDisplayTenpoRrk.gCloseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscheckNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.checkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcheckNull() {
                this[this.tableDisplayTenpoRrk.checkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdRrkTimstmpNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.updRrkTimstmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdRrkTimstmpNull() {
                this[this.tableDisplayTenpoRrk.updRrkTimstmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrrkSybtNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.rrkSybtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrrkSybtNull() {
                this[this.tableDisplayTenpoRrk.rrkSybtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrrkSybtCdNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.rrkSybtCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrrkSybtCdNull() {
                this[this.tableDisplayTenpoRrk.rrkSybtCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstorikomiFlgNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.torikomiFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettorikomiFlgNull() {
                this[this.tableDisplayTenpoRrk.torikomiFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstorikomiFlgCdNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.torikomiFlgCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettorikomiFlgCdNull() {
                this[this.tableDisplayTenpoRrk.torikomiFlgCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstenpoNmNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.tenpoNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettenpoNmNull() {
                this[this.tableDisplayTenpoRrk.tenpoNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsterritoryNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.territoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetterritoryNull() {
                this[this.tableDisplayTenpoRrk.territoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsterritoryCdNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.territoryCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetterritoryCdNull() {
                this[this.tableDisplayTenpoRrk.territoryCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstenpoKbnNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.tenpoKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettenpoKbnNull() {
                this[this.tableDisplayTenpoRrk.tenpoKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstenpoKbnCdNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.tenpoKbnCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettenpoKbnCdNull() {
                this[this.tableDisplayTenpoRrk.tenpoKbnCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskamokuNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.kamokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkamokuNull() {
                this[this.tableDisplayTenpoRrk.kamokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyubinNoNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.yubinNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyubinNoNull() {
                this[this.tableDisplayTenpoRrk.yubinNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress1Null() {
                return this.IsNull(this.tableDisplayTenpoRrk.address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress1Null() {
                this[this.tableDisplayTenpoRrk.address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress2Null() {
                return this.IsNull(this.tableDisplayTenpoRrk.address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress2Null() {
                this[this.tableDisplayTenpoRrk.address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstelNoNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.telNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettelNoNull() {
                this[this.tableDisplayTenpoRrk.telNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssplitFlgNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.splitFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsplitFlgNull() {
                this[this.tableDisplayTenpoRrk.splitFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssplitFlgCdNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.splitFlgCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsplitFlgCdNull() {
                this[this.tableDisplayTenpoRrk.splitFlgCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyNmNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.companyNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyNmNull() {
                this[this.tableDisplayTenpoRrk.companyNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableDisplayTenpoRrk.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstorihikiCdNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.torihikiCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettorihikiCdNull() {
                this[this.tableDisplayTenpoRrk.torihikiCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinStatusNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.inStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinStatusNull() {
                this[this.tableDisplayTenpoRrk.inStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssGOpenNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.sGOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsGOpenNull() {
                this[this.tableDisplayTenpoRrk.sGOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgOpenNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.gOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgOpenNull() {
                this[this.tableDisplayTenpoRrk.gOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgCloseNull() {
                return this.IsNull(this.tableDisplayTenpoRrk.gCloseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgCloseNull() {
                this[this.tableDisplayTenpoRrk.gCloseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TenpoRrkRowChangeEvent : global::System.EventArgs {
            
            private TenpoRrkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TenpoRrkRowChangeEvent(TenpoRrkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TenpoRrkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DisplayTenpoRrkRowChangeEvent : global::System.EventArgs {
            
            private DisplayTenpoRrkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DisplayTenpoRrkRowChangeEvent(DisplayTenpoRrkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DisplayTenpoRrkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591