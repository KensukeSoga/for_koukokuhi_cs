//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3625
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Tkd.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ReportDSTkdBilling")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ReportDSTkdBilling : global::System.Data.DataSet {
        
        private ReportByMiddleClassificationResultDataTable tableReportByMiddleClassificationResult;
        
        private ReportByMiddleClassificationMacroDataTable tableReportByMiddleClassificationMacro;
        
        private ReportByItemResultDataTable tableReportByItemResult;
        
        private ReportByItemViewDataTable tableReportByItemView;
        
        private ReportForPlanningCostResultDataTable tableReportForPlanningCostResult;
        
        private ReportForPlanningCostViewDataTable tableReportForPlanningCostView;
        
        private ReportByMiddleClassificationViewDataTable tableReportByMiddleClassificationView;
        
        private ReportByItemMacroDataTable tableReportByItemMacro;
        
        private ReportForPlanningCostMacroDataTable tableReportForPlanningCostMacro;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReportDSTkdBilling() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ReportDSTkdBilling(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ReportByMiddleClassificationResult"] != null)) {
                    base.Tables.Add(new ReportByMiddleClassificationResultDataTable(ds.Tables["ReportByMiddleClassificationResult"]));
                }
                if ((ds.Tables["ReportByMiddleClassificationMacro"] != null)) {
                    base.Tables.Add(new ReportByMiddleClassificationMacroDataTable(ds.Tables["ReportByMiddleClassificationMacro"]));
                }
                if ((ds.Tables["ReportByItemResult"] != null)) {
                    base.Tables.Add(new ReportByItemResultDataTable(ds.Tables["ReportByItemResult"]));
                }
                if ((ds.Tables["ReportByItemView"] != null)) {
                    base.Tables.Add(new ReportByItemViewDataTable(ds.Tables["ReportByItemView"]));
                }
                if ((ds.Tables["ReportForPlanningCostResult"] != null)) {
                    base.Tables.Add(new ReportForPlanningCostResultDataTable(ds.Tables["ReportForPlanningCostResult"]));
                }
                if ((ds.Tables["ReportForPlanningCostView"] != null)) {
                    base.Tables.Add(new ReportForPlanningCostViewDataTable(ds.Tables["ReportForPlanningCostView"]));
                }
                if ((ds.Tables["ReportByMiddleClassificationView"] != null)) {
                    base.Tables.Add(new ReportByMiddleClassificationViewDataTable(ds.Tables["ReportByMiddleClassificationView"]));
                }
                if ((ds.Tables["ReportByItemMacro"] != null)) {
                    base.Tables.Add(new ReportByItemMacroDataTable(ds.Tables["ReportByItemMacro"]));
                }
                if ((ds.Tables["ReportForPlanningCostMacro"] != null)) {
                    base.Tables.Add(new ReportForPlanningCostMacroDataTable(ds.Tables["ReportForPlanningCostMacro"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportByMiddleClassificationResultDataTable ReportByMiddleClassificationResult {
            get {
                return this.tableReportByMiddleClassificationResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportByMiddleClassificationMacroDataTable ReportByMiddleClassificationMacro {
            get {
                return this.tableReportByMiddleClassificationMacro;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportByItemResultDataTable ReportByItemResult {
            get {
                return this.tableReportByItemResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportByItemViewDataTable ReportByItemView {
            get {
                return this.tableReportByItemView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportForPlanningCostResultDataTable ReportForPlanningCostResult {
            get {
                return this.tableReportForPlanningCostResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportForPlanningCostViewDataTable ReportForPlanningCostView {
            get {
                return this.tableReportForPlanningCostView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportByMiddleClassificationViewDataTable ReportByMiddleClassificationView {
            get {
                return this.tableReportByMiddleClassificationView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportByItemMacroDataTable ReportByItemMacro {
            get {
                return this.tableReportByItemMacro;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportForPlanningCostMacroDataTable ReportForPlanningCostMacro {
            get {
                return this.tableReportForPlanningCostMacro;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ReportDSTkdBilling cln = ((ReportDSTkdBilling)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ReportByMiddleClassificationResult"] != null)) {
                    base.Tables.Add(new ReportByMiddleClassificationResultDataTable(ds.Tables["ReportByMiddleClassificationResult"]));
                }
                if ((ds.Tables["ReportByMiddleClassificationMacro"] != null)) {
                    base.Tables.Add(new ReportByMiddleClassificationMacroDataTable(ds.Tables["ReportByMiddleClassificationMacro"]));
                }
                if ((ds.Tables["ReportByItemResult"] != null)) {
                    base.Tables.Add(new ReportByItemResultDataTable(ds.Tables["ReportByItemResult"]));
                }
                if ((ds.Tables["ReportByItemView"] != null)) {
                    base.Tables.Add(new ReportByItemViewDataTable(ds.Tables["ReportByItemView"]));
                }
                if ((ds.Tables["ReportForPlanningCostResult"] != null)) {
                    base.Tables.Add(new ReportForPlanningCostResultDataTable(ds.Tables["ReportForPlanningCostResult"]));
                }
                if ((ds.Tables["ReportForPlanningCostView"] != null)) {
                    base.Tables.Add(new ReportForPlanningCostViewDataTable(ds.Tables["ReportForPlanningCostView"]));
                }
                if ((ds.Tables["ReportByMiddleClassificationView"] != null)) {
                    base.Tables.Add(new ReportByMiddleClassificationViewDataTable(ds.Tables["ReportByMiddleClassificationView"]));
                }
                if ((ds.Tables["ReportByItemMacro"] != null)) {
                    base.Tables.Add(new ReportByItemMacroDataTable(ds.Tables["ReportByItemMacro"]));
                }
                if ((ds.Tables["ReportForPlanningCostMacro"] != null)) {
                    base.Tables.Add(new ReportForPlanningCostMacroDataTable(ds.Tables["ReportForPlanningCostMacro"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableReportByMiddleClassificationResult = ((ReportByMiddleClassificationResultDataTable)(base.Tables["ReportByMiddleClassificationResult"]));
            if ((initTable == true)) {
                if ((this.tableReportByMiddleClassificationResult != null)) {
                    this.tableReportByMiddleClassificationResult.InitVars();
                }
            }
            this.tableReportByMiddleClassificationMacro = ((ReportByMiddleClassificationMacroDataTable)(base.Tables["ReportByMiddleClassificationMacro"]));
            if ((initTable == true)) {
                if ((this.tableReportByMiddleClassificationMacro != null)) {
                    this.tableReportByMiddleClassificationMacro.InitVars();
                }
            }
            this.tableReportByItemResult = ((ReportByItemResultDataTable)(base.Tables["ReportByItemResult"]));
            if ((initTable == true)) {
                if ((this.tableReportByItemResult != null)) {
                    this.tableReportByItemResult.InitVars();
                }
            }
            this.tableReportByItemView = ((ReportByItemViewDataTable)(base.Tables["ReportByItemView"]));
            if ((initTable == true)) {
                if ((this.tableReportByItemView != null)) {
                    this.tableReportByItemView.InitVars();
                }
            }
            this.tableReportForPlanningCostResult = ((ReportForPlanningCostResultDataTable)(base.Tables["ReportForPlanningCostResult"]));
            if ((initTable == true)) {
                if ((this.tableReportForPlanningCostResult != null)) {
                    this.tableReportForPlanningCostResult.InitVars();
                }
            }
            this.tableReportForPlanningCostView = ((ReportForPlanningCostViewDataTable)(base.Tables["ReportForPlanningCostView"]));
            if ((initTable == true)) {
                if ((this.tableReportForPlanningCostView != null)) {
                    this.tableReportForPlanningCostView.InitVars();
                }
            }
            this.tableReportByMiddleClassificationView = ((ReportByMiddleClassificationViewDataTable)(base.Tables["ReportByMiddleClassificationView"]));
            if ((initTable == true)) {
                if ((this.tableReportByMiddleClassificationView != null)) {
                    this.tableReportByMiddleClassificationView.InitVars();
                }
            }
            this.tableReportByItemMacro = ((ReportByItemMacroDataTable)(base.Tables["ReportByItemMacro"]));
            if ((initTable == true)) {
                if ((this.tableReportByItemMacro != null)) {
                    this.tableReportByItemMacro.InitVars();
                }
            }
            this.tableReportForPlanningCostMacro = ((ReportForPlanningCostMacroDataTable)(base.Tables["ReportForPlanningCostMacro"]));
            if ((initTable == true)) {
                if ((this.tableReportForPlanningCostMacro != null)) {
                    this.tableReportForPlanningCostMacro.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ReportDSTkdBilling";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ReportDSTkdBilling.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableReportByMiddleClassificationResult = new ReportByMiddleClassificationResultDataTable();
            base.Tables.Add(this.tableReportByMiddleClassificationResult);
            this.tableReportByMiddleClassificationMacro = new ReportByMiddleClassificationMacroDataTable();
            base.Tables.Add(this.tableReportByMiddleClassificationMacro);
            this.tableReportByItemResult = new ReportByItemResultDataTable();
            base.Tables.Add(this.tableReportByItemResult);
            this.tableReportByItemView = new ReportByItemViewDataTable();
            base.Tables.Add(this.tableReportByItemView);
            this.tableReportForPlanningCostResult = new ReportForPlanningCostResultDataTable();
            base.Tables.Add(this.tableReportForPlanningCostResult);
            this.tableReportForPlanningCostView = new ReportForPlanningCostViewDataTable();
            base.Tables.Add(this.tableReportForPlanningCostView);
            this.tableReportByMiddleClassificationView = new ReportByMiddleClassificationViewDataTable();
            base.Tables.Add(this.tableReportByMiddleClassificationView);
            this.tableReportByItemMacro = new ReportByItemMacroDataTable();
            base.Tables.Add(this.tableReportByItemMacro);
            this.tableReportForPlanningCostMacro = new ReportForPlanningCostMacroDataTable();
            base.Tables.Add(this.tableReportForPlanningCostMacro);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportByMiddleClassificationResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportByMiddleClassificationMacro() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportByItemResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportByItemView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportForPlanningCostResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportForPlanningCostView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportByMiddleClassificationView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportByItemMacro() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportForPlanningCostMacro() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ReportDSTkdBilling ds = new ReportDSTkdBilling();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ReportByMiddleClassificationResultRowChangeEventHandler(object sender, ReportByMiddleClassificationResultRowChangeEvent e);
        
        public delegate void ReportByMiddleClassificationMacroRowChangeEventHandler(object sender, ReportByMiddleClassificationMacroRowChangeEvent e);
        
        public delegate void ReportByItemResultRowChangeEventHandler(object sender, ReportByItemResultRowChangeEvent e);
        
        public delegate void ReportByItemViewRowChangeEventHandler(object sender, ReportByItemViewRowChangeEvent e);
        
        public delegate void ReportForPlanningCostResultRowChangeEventHandler(object sender, ReportForPlanningCostResultRowChangeEvent e);
        
        public delegate void ReportForPlanningCostViewRowChangeEventHandler(object sender, ReportForPlanningCostViewRowChangeEvent e);
        
        public delegate void ReportByMiddleClassificationViewRowChangeEventHandler(object sender, ReportByMiddleClassificationViewRowChangeEvent e);
        
        public delegate void ReportByItemMacroRowChangeEventHandler(object sender, ReportByItemMacroRowChangeEvent e);
        
        public delegate void ReportForPlanningCostMacroRowChangeEventHandler(object sender, ReportForPlanningCostMacroRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportByMiddleClassificationResultDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSQLNO;
            
            private global::System.Data.DataColumn columnstrDairitenCD;
            
            private global::System.Data.DataColumn columnstrYM;
            
            private global::System.Data.DataColumn columnstrCYBNCD;
            
            private global::System.Data.DataColumn columnstrCYBNNM;
            
            private global::System.Data.DataColumn columnCYBNO;
            
            private global::System.Data.DataColumn columnstrKBTNM;
            
            private global::System.Data.DataColumn columnstrKBTCD;
            
            private global::System.Data.DataColumn columnBAINO;
            
            private global::System.Data.DataColumn columnRENNO;
            
            private global::System.Data.DataColumn columnstrHinmokuNM;
            
            private global::System.Data.DataColumn columnstrHinmokuCD;
            
            private global::System.Data.DataColumn columnHINNO;
            
            private global::System.Data.DataColumn columnstrKanriKBN;
            
            private global::System.Data.DataColumn columnintHaibunHiritsu;
            
            private global::System.Data.DataColumn columncurHaifugaku;
            
            private global::System.Data.DataColumn columnstrSite;
            
            private global::System.Data.DataColumn columnstrBiko;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationResultDataTable() {
                this.TableName = "ReportByMiddleClassificationResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByMiddleClassificationResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportByMiddleClassificationResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQLNOColumn {
                get {
                    return this.columnSQLNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strDairitenCDColumn {
                get {
                    return this.columnstrDairitenCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strYMColumn {
                get {
                    return this.columnstrYM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strCYBNCDColumn {
                get {
                    return this.columnstrCYBNCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strCYBNNMColumn {
                get {
                    return this.columnstrCYBNNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CYBNOColumn {
                get {
                    return this.columnCYBNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strKBTNMColumn {
                get {
                    return this.columnstrKBTNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strKBTCDColumn {
                get {
                    return this.columnstrKBTCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAINOColumn {
                get {
                    return this.columnBAINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENNOColumn {
                get {
                    return this.columnRENNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strHinmokuNMColumn {
                get {
                    return this.columnstrHinmokuNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strHinmokuCDColumn {
                get {
                    return this.columnstrHinmokuCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HINNOColumn {
                get {
                    return this.columnHINNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strKanriKBNColumn {
                get {
                    return this.columnstrKanriKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn intHaibunHiritsuColumn {
                get {
                    return this.columnintHaibunHiritsu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curHaifugakuColumn {
                get {
                    return this.columncurHaifugaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strSiteColumn {
                get {
                    return this.columnstrSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strBikoColumn {
                get {
                    return this.columnstrBiko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationResultRow this[int index] {
                get {
                    return ((ReportByMiddleClassificationResultRow)(this.Rows[index]));
                }
            }
            
            public event ReportByMiddleClassificationResultRowChangeEventHandler ReportByMiddleClassificationResultRowChanging;
            
            public event ReportByMiddleClassificationResultRowChangeEventHandler ReportByMiddleClassificationResultRowChanged;
            
            public event ReportByMiddleClassificationResultRowChangeEventHandler ReportByMiddleClassificationResultRowDeleting;
            
            public event ReportByMiddleClassificationResultRowChangeEventHandler ReportByMiddleClassificationResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportByMiddleClassificationResultRow(ReportByMiddleClassificationResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationResultRow AddReportByMiddleClassificationResultRow(
                        string SQLNO, 
                        string strDairitenCD, 
                        string strYM, 
                        string strCYBNCD, 
                        string strCYBNNM, 
                        string CYBNO, 
                        string strKBTNM, 
                        string strKBTCD, 
                        string BAINO, 
                        string RENNO, 
                        string strHinmokuNM, 
                        string strHinmokuCD, 
                        string HINNO, 
                        string strKanriKBN, 
                        string intHaibunHiritsu, 
                        string curHaifugaku, 
                        string strSite, 
                        string strBiko) {
                ReportByMiddleClassificationResultRow rowReportByMiddleClassificationResultRow = ((ReportByMiddleClassificationResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SQLNO,
                        strDairitenCD,
                        strYM,
                        strCYBNCD,
                        strCYBNNM,
                        CYBNO,
                        strKBTNM,
                        strKBTCD,
                        BAINO,
                        RENNO,
                        strHinmokuNM,
                        strHinmokuCD,
                        HINNO,
                        strKanriKBN,
                        intHaibunHiritsu,
                        curHaifugaku,
                        strSite,
                        strBiko};
                rowReportByMiddleClassificationResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportByMiddleClassificationResultRow);
                return rowReportByMiddleClassificationResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportByMiddleClassificationResultDataTable cln = ((ReportByMiddleClassificationResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportByMiddleClassificationResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSQLNO = base.Columns["SQLNO"];
                this.columnstrDairitenCD = base.Columns["strDairitenCD"];
                this.columnstrYM = base.Columns["strYM"];
                this.columnstrCYBNCD = base.Columns["strCYBNCD"];
                this.columnstrCYBNNM = base.Columns["strCYBNNM"];
                this.columnCYBNO = base.Columns["CYBNO"];
                this.columnstrKBTNM = base.Columns["strKBTNM"];
                this.columnstrKBTCD = base.Columns["strKBTCD"];
                this.columnBAINO = base.Columns["BAINO"];
                this.columnRENNO = base.Columns["RENNO"];
                this.columnstrHinmokuNM = base.Columns["strHinmokuNM"];
                this.columnstrHinmokuCD = base.Columns["strHinmokuCD"];
                this.columnHINNO = base.Columns["HINNO"];
                this.columnstrKanriKBN = base.Columns["strKanriKBN"];
                this.columnintHaibunHiritsu = base.Columns["intHaibunHiritsu"];
                this.columncurHaifugaku = base.Columns["curHaifugaku"];
                this.columnstrSite = base.Columns["strSite"];
                this.columnstrBiko = base.Columns["strBiko"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSQLNO = new global::System.Data.DataColumn("SQLNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLNO);
                this.columnstrDairitenCD = new global::System.Data.DataColumn("strDairitenCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDairitenCD);
                this.columnstrYM = new global::System.Data.DataColumn("strYM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrYM);
                this.columnstrCYBNCD = new global::System.Data.DataColumn("strCYBNCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCYBNCD);
                this.columnstrCYBNNM = new global::System.Data.DataColumn("strCYBNNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCYBNNM);
                this.columnCYBNO = new global::System.Data.DataColumn("CYBNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCYBNO);
                this.columnstrKBTNM = new global::System.Data.DataColumn("strKBTNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrKBTNM);
                this.columnstrKBTCD = new global::System.Data.DataColumn("strKBTCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrKBTCD);
                this.columnBAINO = new global::System.Data.DataColumn("BAINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAINO);
                this.columnRENNO = new global::System.Data.DataColumn("RENNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENNO);
                this.columnstrHinmokuNM = new global::System.Data.DataColumn("strHinmokuNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHinmokuNM);
                this.columnstrHinmokuCD = new global::System.Data.DataColumn("strHinmokuCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHinmokuCD);
                this.columnHINNO = new global::System.Data.DataColumn("HINNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHINNO);
                this.columnstrKanriKBN = new global::System.Data.DataColumn("strKanriKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrKanriKBN);
                this.columnintHaibunHiritsu = new global::System.Data.DataColumn("intHaibunHiritsu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintHaibunHiritsu);
                this.columncurHaifugaku = new global::System.Data.DataColumn("curHaifugaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurHaifugaku);
                this.columnstrSite = new global::System.Data.DataColumn("strSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrSite);
                this.columnstrBiko = new global::System.Data.DataColumn("strBiko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBiko);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationResultRow NewReportByMiddleClassificationResultRow() {
                return ((ReportByMiddleClassificationResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportByMiddleClassificationResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportByMiddleClassificationResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportByMiddleClassificationResultRowChanged != null)) {
                    this.ReportByMiddleClassificationResultRowChanged(this, new ReportByMiddleClassificationResultRowChangeEvent(((ReportByMiddleClassificationResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportByMiddleClassificationResultRowChanging != null)) {
                    this.ReportByMiddleClassificationResultRowChanging(this, new ReportByMiddleClassificationResultRowChangeEvent(((ReportByMiddleClassificationResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportByMiddleClassificationResultRowDeleted != null)) {
                    this.ReportByMiddleClassificationResultRowDeleted(this, new ReportByMiddleClassificationResultRowChangeEvent(((ReportByMiddleClassificationResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportByMiddleClassificationResultRowDeleting != null)) {
                    this.ReportByMiddleClassificationResultRowDeleting(this, new ReportByMiddleClassificationResultRowChangeEvent(((ReportByMiddleClassificationResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportByMiddleClassificationResultRow(ReportByMiddleClassificationResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDSTkdBilling ds = new ReportDSTkdBilling();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportByMiddleClassificationResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportByMiddleClassificationMacroDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnstrDairitenCD;
            
            private global::System.Data.DataColumn columnstrYM;
            
            private global::System.Data.DataColumn columnstrCYBNCD;
            
            private global::System.Data.DataColumn columnstrCYBNNM;
            
            private global::System.Data.DataColumn columnstrKBTNM;
            
            private global::System.Data.DataColumn columnstrKBTCD;
            
            private global::System.Data.DataColumn columnstrRenNo;
            
            private global::System.Data.DataColumn columnstrHinmokuNM;
            
            private global::System.Data.DataColumn columnstrHinmokuCD;
            
            private global::System.Data.DataColumn columnstrKanriKBN;
            
            private global::System.Data.DataColumn columnintHaibunHiritsu;
            
            private global::System.Data.DataColumn columncurHaifugaku;
            
            private global::System.Data.DataColumn columnstrSite;
            
            private global::System.Data.DataColumn columnstrBiko;
            
            private global::System.Data.DataColumn columnkeyCountSite;
            
            private global::System.Data.DataColumn columnkeyCountCYBN;
            
            private global::System.Data.DataColumn columnkeyCountKBT;
            
            private global::System.Data.DataColumn columnkeyCountHinmoku;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationMacroDataTable() {
                this.TableName = "ReportByMiddleClassificationMacro";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByMiddleClassificationMacroDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportByMiddleClassificationMacroDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strDairitenCDColumn {
                get {
                    return this.columnstrDairitenCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strYMColumn {
                get {
                    return this.columnstrYM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strCYBNCDColumn {
                get {
                    return this.columnstrCYBNCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strCYBNNMColumn {
                get {
                    return this.columnstrCYBNNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strKBTNMColumn {
                get {
                    return this.columnstrKBTNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strKBTCDColumn {
                get {
                    return this.columnstrKBTCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strRenNoColumn {
                get {
                    return this.columnstrRenNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strHinmokuNMColumn {
                get {
                    return this.columnstrHinmokuNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strHinmokuCDColumn {
                get {
                    return this.columnstrHinmokuCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strKanriKBNColumn {
                get {
                    return this.columnstrKanriKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn intHaibunHiritsuColumn {
                get {
                    return this.columnintHaibunHiritsu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curHaifugakuColumn {
                get {
                    return this.columncurHaifugaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strSiteColumn {
                get {
                    return this.columnstrSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strBikoColumn {
                get {
                    return this.columnstrBiko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyCountSiteColumn {
                get {
                    return this.columnkeyCountSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyCountCYBNColumn {
                get {
                    return this.columnkeyCountCYBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyCountKBTColumn {
                get {
                    return this.columnkeyCountKBT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyCountHinmokuColumn {
                get {
                    return this.columnkeyCountHinmoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationMacroRow this[int index] {
                get {
                    return ((ReportByMiddleClassificationMacroRow)(this.Rows[index]));
                }
            }
            
            public event ReportByMiddleClassificationMacroRowChangeEventHandler ReportByMiddleClassificationMacroRowChanging;
            
            public event ReportByMiddleClassificationMacroRowChangeEventHandler ReportByMiddleClassificationMacroRowChanged;
            
            public event ReportByMiddleClassificationMacroRowChangeEventHandler ReportByMiddleClassificationMacroRowDeleting;
            
            public event ReportByMiddleClassificationMacroRowChangeEventHandler ReportByMiddleClassificationMacroRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportByMiddleClassificationMacroRow(ReportByMiddleClassificationMacroRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationMacroRow AddReportByMiddleClassificationMacroRow(
                        string strDairitenCD, 
                        string strYM, 
                        string strCYBNCD, 
                        string strCYBNNM, 
                        string strKBTNM, 
                        string strKBTCD, 
                        string strRenNo, 
                        string strHinmokuNM, 
                        string strHinmokuCD, 
                        string strKanriKBN, 
                        string intHaibunHiritsu, 
                        string curHaifugaku, 
                        string strSite, 
                        string strBiko, 
                        string keyCountSite, 
                        string keyCountCYBN, 
                        string keyCountKBT, 
                        string keyCountHinmoku) {
                ReportByMiddleClassificationMacroRow rowReportByMiddleClassificationMacroRow = ((ReportByMiddleClassificationMacroRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strDairitenCD,
                        strYM,
                        strCYBNCD,
                        strCYBNNM,
                        strKBTNM,
                        strKBTCD,
                        strRenNo,
                        strHinmokuNM,
                        strHinmokuCD,
                        strKanriKBN,
                        intHaibunHiritsu,
                        curHaifugaku,
                        strSite,
                        strBiko,
                        keyCountSite,
                        keyCountCYBN,
                        keyCountKBT,
                        keyCountHinmoku};
                rowReportByMiddleClassificationMacroRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportByMiddleClassificationMacroRow);
                return rowReportByMiddleClassificationMacroRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportByMiddleClassificationMacroDataTable cln = ((ReportByMiddleClassificationMacroDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportByMiddleClassificationMacroDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstrDairitenCD = base.Columns["strDairitenCD"];
                this.columnstrYM = base.Columns["strYM"];
                this.columnstrCYBNCD = base.Columns["strCYBNCD"];
                this.columnstrCYBNNM = base.Columns["strCYBNNM"];
                this.columnstrKBTNM = base.Columns["strKBTNM"];
                this.columnstrKBTCD = base.Columns["strKBTCD"];
                this.columnstrRenNo = base.Columns["strRenNo"];
                this.columnstrHinmokuNM = base.Columns["strHinmokuNM"];
                this.columnstrHinmokuCD = base.Columns["strHinmokuCD"];
                this.columnstrKanriKBN = base.Columns["strKanriKBN"];
                this.columnintHaibunHiritsu = base.Columns["intHaibunHiritsu"];
                this.columncurHaifugaku = base.Columns["curHaifugaku"];
                this.columnstrSite = base.Columns["strSite"];
                this.columnstrBiko = base.Columns["strBiko"];
                this.columnkeyCountSite = base.Columns["keyCountSite"];
                this.columnkeyCountCYBN = base.Columns["keyCountCYBN"];
                this.columnkeyCountKBT = base.Columns["keyCountKBT"];
                this.columnkeyCountHinmoku = base.Columns["keyCountHinmoku"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstrDairitenCD = new global::System.Data.DataColumn("strDairitenCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDairitenCD);
                this.columnstrYM = new global::System.Data.DataColumn("strYM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrYM);
                this.columnstrCYBNCD = new global::System.Data.DataColumn("strCYBNCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCYBNCD);
                this.columnstrCYBNNM = new global::System.Data.DataColumn("strCYBNNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCYBNNM);
                this.columnstrKBTNM = new global::System.Data.DataColumn("strKBTNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrKBTNM);
                this.columnstrKBTCD = new global::System.Data.DataColumn("strKBTCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrKBTCD);
                this.columnstrRenNo = new global::System.Data.DataColumn("strRenNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrRenNo);
                this.columnstrHinmokuNM = new global::System.Data.DataColumn("strHinmokuNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHinmokuNM);
                this.columnstrHinmokuCD = new global::System.Data.DataColumn("strHinmokuCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHinmokuCD);
                this.columnstrKanriKBN = new global::System.Data.DataColumn("strKanriKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrKanriKBN);
                this.columnintHaibunHiritsu = new global::System.Data.DataColumn("intHaibunHiritsu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintHaibunHiritsu);
                this.columncurHaifugaku = new global::System.Data.DataColumn("curHaifugaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurHaifugaku);
                this.columnstrSite = new global::System.Data.DataColumn("strSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrSite);
                this.columnstrBiko = new global::System.Data.DataColumn("strBiko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBiko);
                this.columnkeyCountSite = new global::System.Data.DataColumn("keyCountSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeyCountSite);
                this.columnkeyCountCYBN = new global::System.Data.DataColumn("keyCountCYBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeyCountCYBN);
                this.columnkeyCountKBT = new global::System.Data.DataColumn("keyCountKBT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeyCountKBT);
                this.columnkeyCountHinmoku = new global::System.Data.DataColumn("keyCountHinmoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeyCountHinmoku);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationMacroRow NewReportByMiddleClassificationMacroRow() {
                return ((ReportByMiddleClassificationMacroRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportByMiddleClassificationMacroRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportByMiddleClassificationMacroRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportByMiddleClassificationMacroRowChanged != null)) {
                    this.ReportByMiddleClassificationMacroRowChanged(this, new ReportByMiddleClassificationMacroRowChangeEvent(((ReportByMiddleClassificationMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportByMiddleClassificationMacroRowChanging != null)) {
                    this.ReportByMiddleClassificationMacroRowChanging(this, new ReportByMiddleClassificationMacroRowChangeEvent(((ReportByMiddleClassificationMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportByMiddleClassificationMacroRowDeleted != null)) {
                    this.ReportByMiddleClassificationMacroRowDeleted(this, new ReportByMiddleClassificationMacroRowChangeEvent(((ReportByMiddleClassificationMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportByMiddleClassificationMacroRowDeleting != null)) {
                    this.ReportByMiddleClassificationMacroRowDeleting(this, new ReportByMiddleClassificationMacroRowChangeEvent(((ReportByMiddleClassificationMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportByMiddleClassificationMacroRow(ReportByMiddleClassificationMacroRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDSTkdBilling ds = new ReportDSTkdBilling();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportByMiddleClassificationMacroDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportByItemResultDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSQLNO;
            
            private global::System.Data.DataColumn columnSITE;
            
            private global::System.Data.DataColumn columnstrDairitenCD;
            
            private global::System.Data.DataColumn columnstrYM;
            
            private global::System.Data.DataColumn columnstrCYBNCD;
            
            private global::System.Data.DataColumn columnCYBNO;
            
            private global::System.Data.DataColumn columnstrCYBNNM;
            
            private global::System.Data.DataColumn columnstrHinmokuNM;
            
            private global::System.Data.DataColumn columnstrHinmokuCD;
            
            private global::System.Data.DataColumn columnHNMKCD;
            
            private global::System.Data.DataColumn columnKNRKBN;
            
            private global::System.Data.DataColumn columncurKingaku;
            
            private global::System.Data.DataColumn columnFEECD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemResultDataTable() {
                this.TableName = "ReportByItemResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByItemResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportByItemResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQLNOColumn {
                get {
                    return this.columnSQLNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SITEColumn {
                get {
                    return this.columnSITE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strDairitenCDColumn {
                get {
                    return this.columnstrDairitenCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strYMColumn {
                get {
                    return this.columnstrYM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strCYBNCDColumn {
                get {
                    return this.columnstrCYBNCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CYBNOColumn {
                get {
                    return this.columnCYBNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strCYBNNMColumn {
                get {
                    return this.columnstrCYBNNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strHinmokuNMColumn {
                get {
                    return this.columnstrHinmokuNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strHinmokuCDColumn {
                get {
                    return this.columnstrHinmokuCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HNMKCDColumn {
                get {
                    return this.columnHNMKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KNRKBNColumn {
                get {
                    return this.columnKNRKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curKingakuColumn {
                get {
                    return this.columncurKingaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEECDColumn {
                get {
                    return this.columnFEECD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemResultRow this[int index] {
                get {
                    return ((ReportByItemResultRow)(this.Rows[index]));
                }
            }
            
            public event ReportByItemResultRowChangeEventHandler ReportByItemResultRowChanging;
            
            public event ReportByItemResultRowChangeEventHandler ReportByItemResultRowChanged;
            
            public event ReportByItemResultRowChangeEventHandler ReportByItemResultRowDeleting;
            
            public event ReportByItemResultRowChangeEventHandler ReportByItemResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportByItemResultRow(ReportByItemResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemResultRow AddReportByItemResultRow(string SQLNO, string SITE, string strDairitenCD, string strYM, string strCYBNCD, string CYBNO, string strCYBNNM, string strHinmokuNM, string strHinmokuCD, string HNMKCD, string KNRKBN, string curKingaku, string FEECD) {
                ReportByItemResultRow rowReportByItemResultRow = ((ReportByItemResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SQLNO,
                        SITE,
                        strDairitenCD,
                        strYM,
                        strCYBNCD,
                        CYBNO,
                        strCYBNNM,
                        strHinmokuNM,
                        strHinmokuCD,
                        HNMKCD,
                        KNRKBN,
                        curKingaku,
                        FEECD};
                rowReportByItemResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportByItemResultRow);
                return rowReportByItemResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportByItemResultDataTable cln = ((ReportByItemResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportByItemResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSQLNO = base.Columns["SQLNO"];
                this.columnSITE = base.Columns["SITE"];
                this.columnstrDairitenCD = base.Columns["strDairitenCD"];
                this.columnstrYM = base.Columns["strYM"];
                this.columnstrCYBNCD = base.Columns["strCYBNCD"];
                this.columnCYBNO = base.Columns["CYBNO"];
                this.columnstrCYBNNM = base.Columns["strCYBNNM"];
                this.columnstrHinmokuNM = base.Columns["strHinmokuNM"];
                this.columnstrHinmokuCD = base.Columns["strHinmokuCD"];
                this.columnHNMKCD = base.Columns["HNMKCD"];
                this.columnKNRKBN = base.Columns["KNRKBN"];
                this.columncurKingaku = base.Columns["curKingaku"];
                this.columnFEECD = base.Columns["FEECD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSQLNO = new global::System.Data.DataColumn("SQLNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLNO);
                this.columnSITE = new global::System.Data.DataColumn("SITE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSITE);
                this.columnstrDairitenCD = new global::System.Data.DataColumn("strDairitenCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDairitenCD);
                this.columnstrYM = new global::System.Data.DataColumn("strYM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrYM);
                this.columnstrCYBNCD = new global::System.Data.DataColumn("strCYBNCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCYBNCD);
                this.columnCYBNO = new global::System.Data.DataColumn("CYBNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCYBNO);
                this.columnstrCYBNNM = new global::System.Data.DataColumn("strCYBNNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCYBNNM);
                this.columnstrHinmokuNM = new global::System.Data.DataColumn("strHinmokuNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHinmokuNM);
                this.columnstrHinmokuCD = new global::System.Data.DataColumn("strHinmokuCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHinmokuCD);
                this.columnHNMKCD = new global::System.Data.DataColumn("HNMKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHNMKCD);
                this.columnKNRKBN = new global::System.Data.DataColumn("KNRKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKNRKBN);
                this.columncurKingaku = new global::System.Data.DataColumn("curKingaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurKingaku);
                this.columnFEECD = new global::System.Data.DataColumn("FEECD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEECD);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemResultRow NewReportByItemResultRow() {
                return ((ReportByItemResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportByItemResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportByItemResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportByItemResultRowChanged != null)) {
                    this.ReportByItemResultRowChanged(this, new ReportByItemResultRowChangeEvent(((ReportByItemResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportByItemResultRowChanging != null)) {
                    this.ReportByItemResultRowChanging(this, new ReportByItemResultRowChangeEvent(((ReportByItemResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportByItemResultRowDeleted != null)) {
                    this.ReportByItemResultRowDeleted(this, new ReportByItemResultRowChangeEvent(((ReportByItemResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportByItemResultRowDeleting != null)) {
                    this.ReportByItemResultRowDeleting(this, new ReportByItemResultRowChangeEvent(((ReportByItemResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportByItemResultRow(ReportByItemResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDSTkdBilling ds = new ReportDSTkdBilling();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportByItemResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportByItemViewDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncHHSite;
            
            private global::System.Data.DataColumn columncHDairinm;
            
            private global::System.Data.DataColumn columncHDairicd;
            
            private global::System.Data.DataColumn columncHym;
            
            private global::System.Data.DataColumn columncHBtccd;
            
            private global::System.Data.DataColumn columncHBtcnm;
            
            private global::System.Data.DataColumn columncHHinmoku;
            
            private global::System.Data.DataColumn columncHHinmokucd;
            
            private global::System.Data.DataColumn columncHKanricbn;
            
            private global::System.Data.DataColumn columncHKingaku;
            
            private global::System.Data.DataColumn columncHZeikomi;
            
            private global::System.Data.DataColumn columncHFeeCd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemViewDataTable() {
                this.TableName = "ReportByItemView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByItemViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportByItemViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHHSiteColumn {
                get {
                    return this.columncHHSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHDairinmColumn {
                get {
                    return this.columncHDairinm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHDairicdColumn {
                get {
                    return this.columncHDairicd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHymColumn {
                get {
                    return this.columncHym;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHBtccdColumn {
                get {
                    return this.columncHBtccd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHBtcnmColumn {
                get {
                    return this.columncHBtcnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHHinmokuColumn {
                get {
                    return this.columncHHinmoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHHinmokucdColumn {
                get {
                    return this.columncHHinmokucd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHKanricbnColumn {
                get {
                    return this.columncHKanricbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHKingakuColumn {
                get {
                    return this.columncHKingaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHZeikomiColumn {
                get {
                    return this.columncHZeikomi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHFeeCdColumn {
                get {
                    return this.columncHFeeCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemViewRow this[int index] {
                get {
                    return ((ReportByItemViewRow)(this.Rows[index]));
                }
            }
            
            public event ReportByItemViewRowChangeEventHandler ReportByItemViewRowChanging;
            
            public event ReportByItemViewRowChangeEventHandler ReportByItemViewRowChanged;
            
            public event ReportByItemViewRowChangeEventHandler ReportByItemViewRowDeleting;
            
            public event ReportByItemViewRowChangeEventHandler ReportByItemViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportByItemViewRow(ReportByItemViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemViewRow AddReportByItemViewRow(string cHHSite, string cHDairinm, string cHDairicd, string cHym, string cHBtccd, string cHBtcnm, string cHHinmoku, string cHHinmokucd, string cHKanricbn, string cHKingaku, string cHZeikomi, string cHFeeCd) {
                ReportByItemViewRow rowReportByItemViewRow = ((ReportByItemViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cHHSite,
                        cHDairinm,
                        cHDairicd,
                        cHym,
                        cHBtccd,
                        cHBtcnm,
                        cHHinmoku,
                        cHHinmokucd,
                        cHKanricbn,
                        cHKingaku,
                        cHZeikomi,
                        cHFeeCd};
                rowReportByItemViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportByItemViewRow);
                return rowReportByItemViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportByItemViewDataTable cln = ((ReportByItemViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportByItemViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncHHSite = base.Columns["cHHSite"];
                this.columncHDairinm = base.Columns["cHDairinm"];
                this.columncHDairicd = base.Columns["cHDairicd"];
                this.columncHym = base.Columns["cHym"];
                this.columncHBtccd = base.Columns["cHBtccd"];
                this.columncHBtcnm = base.Columns["cHBtcnm"];
                this.columncHHinmoku = base.Columns["cHHinmoku"];
                this.columncHHinmokucd = base.Columns["cHHinmokucd"];
                this.columncHKanricbn = base.Columns["cHKanricbn"];
                this.columncHKingaku = base.Columns["cHKingaku"];
                this.columncHZeikomi = base.Columns["cHZeikomi"];
                this.columncHFeeCd = base.Columns["cHFeeCd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncHHSite = new global::System.Data.DataColumn("cHHSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHHSite);
                this.columncHDairinm = new global::System.Data.DataColumn("cHDairinm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHDairinm);
                this.columncHDairicd = new global::System.Data.DataColumn("cHDairicd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHDairicd);
                this.columncHym = new global::System.Data.DataColumn("cHym", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHym);
                this.columncHBtccd = new global::System.Data.DataColumn("cHBtccd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHBtccd);
                this.columncHBtcnm = new global::System.Data.DataColumn("cHBtcnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHBtcnm);
                this.columncHHinmoku = new global::System.Data.DataColumn("cHHinmoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHHinmoku);
                this.columncHHinmokucd = new global::System.Data.DataColumn("cHHinmokucd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHHinmokucd);
                this.columncHKanricbn = new global::System.Data.DataColumn("cHKanricbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHKanricbn);
                this.columncHKingaku = new global::System.Data.DataColumn("cHKingaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHKingaku);
                this.columncHZeikomi = new global::System.Data.DataColumn("cHZeikomi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHZeikomi);
                this.columncHFeeCd = new global::System.Data.DataColumn("cHFeeCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHFeeCd);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemViewRow NewReportByItemViewRow() {
                return ((ReportByItemViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportByItemViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportByItemViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportByItemViewRowChanged != null)) {
                    this.ReportByItemViewRowChanged(this, new ReportByItemViewRowChangeEvent(((ReportByItemViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportByItemViewRowChanging != null)) {
                    this.ReportByItemViewRowChanging(this, new ReportByItemViewRowChangeEvent(((ReportByItemViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportByItemViewRowDeleted != null)) {
                    this.ReportByItemViewRowDeleted(this, new ReportByItemViewRowChangeEvent(((ReportByItemViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportByItemViewRowDeleting != null)) {
                    this.ReportByItemViewRowDeleting(this, new ReportByItemViewRowChangeEvent(((ReportByItemViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportByItemViewRow(ReportByItemViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDSTkdBilling ds = new ReportDSTkdBilling();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportByItemViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportForPlanningCostResultDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnKNGK1;
            
            private global::System.Data.DataColumn columnSCD;
            
            private global::System.Data.DataColumn columnSNM;
            
            private global::System.Data.DataColumn columnTEKIYO;
            
            private global::System.Data.DataColumn columnKBN;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnSZEIRITU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostResultDataTable() {
                this.TableName = "ReportForPlanningCostResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportForPlanningCostResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportForPlanningCostResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KNGK1Column {
                get {
                    return this.columnKNGK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCDColumn {
                get {
                    return this.columnSCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SNMColumn {
                get {
                    return this.columnSNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEKIYOColumn {
                get {
                    return this.columnTEKIYO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KBNColumn {
                get {
                    return this.columnKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZEIRITUColumn {
                get {
                    return this.columnSZEIRITU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostResultRow this[int index] {
                get {
                    return ((ReportForPlanningCostResultRow)(this.Rows[index]));
                }
            }
            
            public event ReportForPlanningCostResultRowChangeEventHandler ReportForPlanningCostResultRowChanging;
            
            public event ReportForPlanningCostResultRowChangeEventHandler ReportForPlanningCostResultRowChanged;
            
            public event ReportForPlanningCostResultRowChangeEventHandler ReportForPlanningCostResultRowDeleting;
            
            public event ReportForPlanningCostResultRowChangeEventHandler ReportForPlanningCostResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportForPlanningCostResultRow(ReportForPlanningCostResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostResultRow AddReportForPlanningCostResultRow(string JYUTNO, string JYMEINO, string URMEINO, string KNGK1, string SCD, string SNM, string TEKIYO, string KBN, string SEIGAK, string SZEIRITU) {
                ReportForPlanningCostResultRow rowReportForPlanningCostResultRow = ((ReportForPlanningCostResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        KNGK1,
                        SCD,
                        SNM,
                        TEKIYO,
                        KBN,
                        SEIGAK,
                        SZEIRITU};
                rowReportForPlanningCostResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportForPlanningCostResultRow);
                return rowReportForPlanningCostResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportForPlanningCostResultDataTable cln = ((ReportForPlanningCostResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportForPlanningCostResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnKNGK1 = base.Columns["KNGK1"];
                this.columnSCD = base.Columns["SCD"];
                this.columnSNM = base.Columns["SNM"];
                this.columnTEKIYO = base.Columns["TEKIYO"];
                this.columnKBN = base.Columns["KBN"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnSZEIRITU = base.Columns["SZEIRITU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnKNGK1 = new global::System.Data.DataColumn("KNGK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKNGK1);
                this.columnSCD = new global::System.Data.DataColumn("SCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCD);
                this.columnSNM = new global::System.Data.DataColumn("SNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSNM);
                this.columnTEKIYO = new global::System.Data.DataColumn("TEKIYO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEKIYO);
                this.columnKBN = new global::System.Data.DataColumn("KBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKBN);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnSZEIRITU = new global::System.Data.DataColumn("SZEIRITU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZEIRITU);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostResultRow NewReportForPlanningCostResultRow() {
                return ((ReportForPlanningCostResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportForPlanningCostResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportForPlanningCostResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportForPlanningCostResultRowChanged != null)) {
                    this.ReportForPlanningCostResultRowChanged(this, new ReportForPlanningCostResultRowChangeEvent(((ReportForPlanningCostResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportForPlanningCostResultRowChanging != null)) {
                    this.ReportForPlanningCostResultRowChanging(this, new ReportForPlanningCostResultRowChangeEvent(((ReportForPlanningCostResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportForPlanningCostResultRowDeleted != null)) {
                    this.ReportForPlanningCostResultRowDeleted(this, new ReportForPlanningCostResultRowChangeEvent(((ReportForPlanningCostResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportForPlanningCostResultRowDeleting != null)) {
                    this.ReportForPlanningCostResultRowDeleting(this, new ReportForPlanningCostResultRowChangeEvent(((ReportForPlanningCostResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportForPlanningCostResultRow(ReportForPlanningCostResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDSTkdBilling ds = new ReportDSTkdBilling();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportForPlanningCostResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportForPlanningCostViewDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncKKHinmoku;
            
            private global::System.Data.DataColumn columncKKTekiyo;
            
            private global::System.Data.DataColumn columncKKSuryo;
            
            private global::System.Data.DataColumn columncKKTanka;
            
            private global::System.Data.DataColumn columncKKHongaku;
            
            private global::System.Data.DataColumn columncKKZeigaku;
            
            private global::System.Data.DataColumn columncKKKingaku;
            
            private global::System.Data.DataColumn columncKKKbn;
            
            private global::System.Data.DataColumn columncKKLineFlg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostViewDataTable() {
                this.TableName = "ReportForPlanningCostView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportForPlanningCostViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportForPlanningCostViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cKKHinmokuColumn {
                get {
                    return this.columncKKHinmoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cKKTekiyoColumn {
                get {
                    return this.columncKKTekiyo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cKKSuryoColumn {
                get {
                    return this.columncKKSuryo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cKKTankaColumn {
                get {
                    return this.columncKKTanka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cKKHongakuColumn {
                get {
                    return this.columncKKHongaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cKKZeigakuColumn {
                get {
                    return this.columncKKZeigaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cKKKingakuColumn {
                get {
                    return this.columncKKKingaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cKKKbnColumn {
                get {
                    return this.columncKKKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cKKLineFlgColumn {
                get {
                    return this.columncKKLineFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostViewRow this[int index] {
                get {
                    return ((ReportForPlanningCostViewRow)(this.Rows[index]));
                }
            }
            
            public event ReportForPlanningCostViewRowChangeEventHandler ReportForPlanningCostViewRowChanging;
            
            public event ReportForPlanningCostViewRowChangeEventHandler ReportForPlanningCostViewRowChanged;
            
            public event ReportForPlanningCostViewRowChangeEventHandler ReportForPlanningCostViewRowDeleting;
            
            public event ReportForPlanningCostViewRowChangeEventHandler ReportForPlanningCostViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportForPlanningCostViewRow(ReportForPlanningCostViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostViewRow AddReportForPlanningCostViewRow(string cKKHinmoku, string cKKTekiyo, string cKKSuryo, string cKKTanka, string cKKHongaku, string cKKZeigaku, string cKKKingaku, string cKKKbn, string cKKLineFlg) {
                ReportForPlanningCostViewRow rowReportForPlanningCostViewRow = ((ReportForPlanningCostViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cKKHinmoku,
                        cKKTekiyo,
                        cKKSuryo,
                        cKKTanka,
                        cKKHongaku,
                        cKKZeigaku,
                        cKKKingaku,
                        cKKKbn,
                        cKKLineFlg};
                rowReportForPlanningCostViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportForPlanningCostViewRow);
                return rowReportForPlanningCostViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportForPlanningCostViewDataTable cln = ((ReportForPlanningCostViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportForPlanningCostViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncKKHinmoku = base.Columns["cKKHinmoku"];
                this.columncKKTekiyo = base.Columns["cKKTekiyo"];
                this.columncKKSuryo = base.Columns["cKKSuryo"];
                this.columncKKTanka = base.Columns["cKKTanka"];
                this.columncKKHongaku = base.Columns["cKKHongaku"];
                this.columncKKZeigaku = base.Columns["cKKZeigaku"];
                this.columncKKKingaku = base.Columns["cKKKingaku"];
                this.columncKKKbn = base.Columns["cKKKbn"];
                this.columncKKLineFlg = base.Columns["cKKLineFlg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncKKHinmoku = new global::System.Data.DataColumn("cKKHinmoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncKKHinmoku);
                this.columncKKTekiyo = new global::System.Data.DataColumn("cKKTekiyo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncKKTekiyo);
                this.columncKKSuryo = new global::System.Data.DataColumn("cKKSuryo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncKKSuryo);
                this.columncKKTanka = new global::System.Data.DataColumn("cKKTanka", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncKKTanka);
                this.columncKKHongaku = new global::System.Data.DataColumn("cKKHongaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncKKHongaku);
                this.columncKKZeigaku = new global::System.Data.DataColumn("cKKZeigaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncKKZeigaku);
                this.columncKKKingaku = new global::System.Data.DataColumn("cKKKingaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncKKKingaku);
                this.columncKKKbn = new global::System.Data.DataColumn("cKKKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncKKKbn);
                this.columncKKLineFlg = new global::System.Data.DataColumn("cKKLineFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncKKLineFlg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostViewRow NewReportForPlanningCostViewRow() {
                return ((ReportForPlanningCostViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportForPlanningCostViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportForPlanningCostViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportForPlanningCostViewRowChanged != null)) {
                    this.ReportForPlanningCostViewRowChanged(this, new ReportForPlanningCostViewRowChangeEvent(((ReportForPlanningCostViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportForPlanningCostViewRowChanging != null)) {
                    this.ReportForPlanningCostViewRowChanging(this, new ReportForPlanningCostViewRowChangeEvent(((ReportForPlanningCostViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportForPlanningCostViewRowDeleted != null)) {
                    this.ReportForPlanningCostViewRowDeleted(this, new ReportForPlanningCostViewRowChangeEvent(((ReportForPlanningCostViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportForPlanningCostViewRowDeleting != null)) {
                    this.ReportForPlanningCostViewRowDeleting(this, new ReportForPlanningCostViewRowChangeEvent(((ReportForPlanningCostViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportForPlanningCostViewRow(ReportForPlanningCostViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDSTkdBilling ds = new ReportDSTkdBilling();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportForPlanningCostViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportByMiddleClassificationViewDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncCHSite;
            
            private global::System.Data.DataColumn columncCDairinm;
            
            private global::System.Data.DataColumn columncCDairicd;
            
            private global::System.Data.DataColumn columncCym;
            
            private global::System.Data.DataColumn columncCBtccd;
            
            private global::System.Data.DataColumn columncCBtcnm;
            
            private global::System.Data.DataColumn columncCBtkbtnm;
            
            private global::System.Data.DataColumn columncCBtkbtcd;
            
            private global::System.Data.DataColumn columncCIchirenno;
            
            private global::System.Data.DataColumn columncCSougaku;
            
            private global::System.Data.DataColumn columncCHinmokunm;
            
            private global::System.Data.DataColumn columncCHinmokucd;
            
            private global::System.Data.DataColumn columncCKanrikbn;
            
            private global::System.Data.DataColumn columncCHaibun;
            
            private global::System.Data.DataColumn columncCHaifugaku;
            
            private global::System.Data.DataColumn columncCSite;
            
            private global::System.Data.DataColumn columncCBiko;
            
            private global::System.Data.DataColumn columncCFee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationViewDataTable() {
                this.TableName = "ReportByMiddleClassificationView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByMiddleClassificationViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportByMiddleClassificationViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCHSiteColumn {
                get {
                    return this.columncCHSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCDairinmColumn {
                get {
                    return this.columncCDairinm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCDairicdColumn {
                get {
                    return this.columncCDairicd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCymColumn {
                get {
                    return this.columncCym;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCBtccdColumn {
                get {
                    return this.columncCBtccd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCBtcnmColumn {
                get {
                    return this.columncCBtcnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCBtkbtnmColumn {
                get {
                    return this.columncCBtkbtnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCBtkbtcdColumn {
                get {
                    return this.columncCBtkbtcd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCIchirennoColumn {
                get {
                    return this.columncCIchirenno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCSougakuColumn {
                get {
                    return this.columncCSougaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCHinmokunmColumn {
                get {
                    return this.columncCHinmokunm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCHinmokucdColumn {
                get {
                    return this.columncCHinmokucd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCKanrikbnColumn {
                get {
                    return this.columncCKanrikbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCHaibunColumn {
                get {
                    return this.columncCHaibun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCHaifugakuColumn {
                get {
                    return this.columncCHaifugaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCSiteColumn {
                get {
                    return this.columncCSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCBikoColumn {
                get {
                    return this.columncCBiko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCFeeColumn {
                get {
                    return this.columncCFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationViewRow this[int index] {
                get {
                    return ((ReportByMiddleClassificationViewRow)(this.Rows[index]));
                }
            }
            
            public event ReportByMiddleClassificationViewRowChangeEventHandler ReportByMiddleClassificationViewRowChanging;
            
            public event ReportByMiddleClassificationViewRowChangeEventHandler ReportByMiddleClassificationViewRowChanged;
            
            public event ReportByMiddleClassificationViewRowChangeEventHandler ReportByMiddleClassificationViewRowDeleting;
            
            public event ReportByMiddleClassificationViewRowChangeEventHandler ReportByMiddleClassificationViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportByMiddleClassificationViewRow(ReportByMiddleClassificationViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationViewRow AddReportByMiddleClassificationViewRow(
                        string cCHSite, 
                        string cCDairinm, 
                        string cCDairicd, 
                        string cCym, 
                        string cCBtccd, 
                        string cCBtcnm, 
                        string cCBtkbtnm, 
                        string cCBtkbtcd, 
                        string cCIchirenno, 
                        string cCSougaku, 
                        string cCHinmokunm, 
                        string cCHinmokucd, 
                        string cCKanrikbn, 
                        string cCHaibun, 
                        string cCHaifugaku, 
                        string cCSite, 
                        string cCBiko, 
                        string cCFee) {
                ReportByMiddleClassificationViewRow rowReportByMiddleClassificationViewRow = ((ReportByMiddleClassificationViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cCHSite,
                        cCDairinm,
                        cCDairicd,
                        cCym,
                        cCBtccd,
                        cCBtcnm,
                        cCBtkbtnm,
                        cCBtkbtcd,
                        cCIchirenno,
                        cCSougaku,
                        cCHinmokunm,
                        cCHinmokucd,
                        cCKanrikbn,
                        cCHaibun,
                        cCHaifugaku,
                        cCSite,
                        cCBiko,
                        cCFee};
                rowReportByMiddleClassificationViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportByMiddleClassificationViewRow);
                return rowReportByMiddleClassificationViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportByMiddleClassificationViewDataTable cln = ((ReportByMiddleClassificationViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportByMiddleClassificationViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncCHSite = base.Columns["cCHSite"];
                this.columncCDairinm = base.Columns["cCDairinm"];
                this.columncCDairicd = base.Columns["cCDairicd"];
                this.columncCym = base.Columns["cCym"];
                this.columncCBtccd = base.Columns["cCBtccd"];
                this.columncCBtcnm = base.Columns["cCBtcnm"];
                this.columncCBtkbtnm = base.Columns["cCBtkbtnm"];
                this.columncCBtkbtcd = base.Columns["cCBtkbtcd"];
                this.columncCIchirenno = base.Columns["cCIchirenno"];
                this.columncCSougaku = base.Columns["cCSougaku"];
                this.columncCHinmokunm = base.Columns["cCHinmokunm"];
                this.columncCHinmokucd = base.Columns["cCHinmokucd"];
                this.columncCKanrikbn = base.Columns["cCKanrikbn"];
                this.columncCHaibun = base.Columns["cCHaibun"];
                this.columncCHaifugaku = base.Columns["cCHaifugaku"];
                this.columncCSite = base.Columns["cCSite"];
                this.columncCBiko = base.Columns["cCBiko"];
                this.columncCFee = base.Columns["cCFee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncCHSite = new global::System.Data.DataColumn("cCHSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCHSite);
                this.columncCDairinm = new global::System.Data.DataColumn("cCDairinm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCDairinm);
                this.columncCDairicd = new global::System.Data.DataColumn("cCDairicd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCDairicd);
                this.columncCym = new global::System.Data.DataColumn("cCym", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCym);
                this.columncCBtccd = new global::System.Data.DataColumn("cCBtccd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCBtccd);
                this.columncCBtcnm = new global::System.Data.DataColumn("cCBtcnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCBtcnm);
                this.columncCBtkbtnm = new global::System.Data.DataColumn("cCBtkbtnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCBtkbtnm);
                this.columncCBtkbtcd = new global::System.Data.DataColumn("cCBtkbtcd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCBtkbtcd);
                this.columncCIchirenno = new global::System.Data.DataColumn("cCIchirenno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCIchirenno);
                this.columncCSougaku = new global::System.Data.DataColumn("cCSougaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCSougaku);
                this.columncCHinmokunm = new global::System.Data.DataColumn("cCHinmokunm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCHinmokunm);
                this.columncCHinmokucd = new global::System.Data.DataColumn("cCHinmokucd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCHinmokucd);
                this.columncCKanrikbn = new global::System.Data.DataColumn("cCKanrikbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCKanrikbn);
                this.columncCHaibun = new global::System.Data.DataColumn("cCHaibun", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCHaibun);
                this.columncCHaifugaku = new global::System.Data.DataColumn("cCHaifugaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCHaifugaku);
                this.columncCSite = new global::System.Data.DataColumn("cCSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCSite);
                this.columncCBiko = new global::System.Data.DataColumn("cCBiko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCBiko);
                this.columncCFee = new global::System.Data.DataColumn("cCFee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCFee);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationViewRow NewReportByMiddleClassificationViewRow() {
                return ((ReportByMiddleClassificationViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportByMiddleClassificationViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportByMiddleClassificationViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportByMiddleClassificationViewRowChanged != null)) {
                    this.ReportByMiddleClassificationViewRowChanged(this, new ReportByMiddleClassificationViewRowChangeEvent(((ReportByMiddleClassificationViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportByMiddleClassificationViewRowChanging != null)) {
                    this.ReportByMiddleClassificationViewRowChanging(this, new ReportByMiddleClassificationViewRowChangeEvent(((ReportByMiddleClassificationViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportByMiddleClassificationViewRowDeleted != null)) {
                    this.ReportByMiddleClassificationViewRowDeleted(this, new ReportByMiddleClassificationViewRowChangeEvent(((ReportByMiddleClassificationViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportByMiddleClassificationViewRowDeleting != null)) {
                    this.ReportByMiddleClassificationViewRowDeleting(this, new ReportByMiddleClassificationViewRowChangeEvent(((ReportByMiddleClassificationViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportByMiddleClassificationViewRow(ReportByMiddleClassificationViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDSTkdBilling ds = new ReportDSTkdBilling();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportByMiddleClassificationViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportByItemMacroDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnstrDairitenCD;
            
            private global::System.Data.DataColumn columnstrYM;
            
            private global::System.Data.DataColumn columnstrSite;
            
            private global::System.Data.DataColumn columnstrCYBNCD;
            
            private global::System.Data.DataColumn columnstrCYBNNM;
            
            private global::System.Data.DataColumn columnstrHinmokuNM;
            
            private global::System.Data.DataColumn columnstrHinmokuCD;
            
            private global::System.Data.DataColumn columnstrKanriKBN;
            
            private global::System.Data.DataColumn columncurKingaku;
            
            private global::System.Data.DataColumn columncurZeikomi;
            
            private global::System.Data.DataColumn columnstrFEECD;
            
            private global::System.Data.DataColumn columnkeyCountSite;
            
            private global::System.Data.DataColumn columnkeyCountCYBN;
            
            private global::System.Data.DataColumn columnkeyCountHinmoku;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemMacroDataTable() {
                this.TableName = "ReportByItemMacro";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByItemMacroDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportByItemMacroDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strDairitenCDColumn {
                get {
                    return this.columnstrDairitenCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strYMColumn {
                get {
                    return this.columnstrYM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strSiteColumn {
                get {
                    return this.columnstrSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strCYBNCDColumn {
                get {
                    return this.columnstrCYBNCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strCYBNNMColumn {
                get {
                    return this.columnstrCYBNNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strHinmokuNMColumn {
                get {
                    return this.columnstrHinmokuNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strHinmokuCDColumn {
                get {
                    return this.columnstrHinmokuCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strKanriKBNColumn {
                get {
                    return this.columnstrKanriKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curKingakuColumn {
                get {
                    return this.columncurKingaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curZeikomiColumn {
                get {
                    return this.columncurZeikomi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strFEECDColumn {
                get {
                    return this.columnstrFEECD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyCountSiteColumn {
                get {
                    return this.columnkeyCountSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyCountCYBNColumn {
                get {
                    return this.columnkeyCountCYBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyCountHinmokuColumn {
                get {
                    return this.columnkeyCountHinmoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemMacroRow this[int index] {
                get {
                    return ((ReportByItemMacroRow)(this.Rows[index]));
                }
            }
            
            public event ReportByItemMacroRowChangeEventHandler ReportByItemMacroRowChanging;
            
            public event ReportByItemMacroRowChangeEventHandler ReportByItemMacroRowChanged;
            
            public event ReportByItemMacroRowChangeEventHandler ReportByItemMacroRowDeleting;
            
            public event ReportByItemMacroRowChangeEventHandler ReportByItemMacroRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportByItemMacroRow(ReportByItemMacroRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemMacroRow AddReportByItemMacroRow(string strDairitenCD, string strYM, string strSite, string strCYBNCD, string strCYBNNM, string strHinmokuNM, string strHinmokuCD, string strKanriKBN, string curKingaku, string curZeikomi, string strFEECD, string keyCountSite, string keyCountCYBN, string keyCountHinmoku) {
                ReportByItemMacroRow rowReportByItemMacroRow = ((ReportByItemMacroRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strDairitenCD,
                        strYM,
                        strSite,
                        strCYBNCD,
                        strCYBNNM,
                        strHinmokuNM,
                        strHinmokuCD,
                        strKanriKBN,
                        curKingaku,
                        curZeikomi,
                        strFEECD,
                        keyCountSite,
                        keyCountCYBN,
                        keyCountHinmoku};
                rowReportByItemMacroRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportByItemMacroRow);
                return rowReportByItemMacroRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportByItemMacroDataTable cln = ((ReportByItemMacroDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportByItemMacroDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstrDairitenCD = base.Columns["strDairitenCD"];
                this.columnstrYM = base.Columns["strYM"];
                this.columnstrSite = base.Columns["strSite"];
                this.columnstrCYBNCD = base.Columns["strCYBNCD"];
                this.columnstrCYBNNM = base.Columns["strCYBNNM"];
                this.columnstrHinmokuNM = base.Columns["strHinmokuNM"];
                this.columnstrHinmokuCD = base.Columns["strHinmokuCD"];
                this.columnstrKanriKBN = base.Columns["strKanriKBN"];
                this.columncurKingaku = base.Columns["curKingaku"];
                this.columncurZeikomi = base.Columns["curZeikomi"];
                this.columnstrFEECD = base.Columns["strFEECD"];
                this.columnkeyCountSite = base.Columns["keyCountSite"];
                this.columnkeyCountCYBN = base.Columns["keyCountCYBN"];
                this.columnkeyCountHinmoku = base.Columns["keyCountHinmoku"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstrDairitenCD = new global::System.Data.DataColumn("strDairitenCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDairitenCD);
                this.columnstrYM = new global::System.Data.DataColumn("strYM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrYM);
                this.columnstrSite = new global::System.Data.DataColumn("strSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrSite);
                this.columnstrCYBNCD = new global::System.Data.DataColumn("strCYBNCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCYBNCD);
                this.columnstrCYBNNM = new global::System.Data.DataColumn("strCYBNNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCYBNNM);
                this.columnstrHinmokuNM = new global::System.Data.DataColumn("strHinmokuNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHinmokuNM);
                this.columnstrHinmokuCD = new global::System.Data.DataColumn("strHinmokuCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHinmokuCD);
                this.columnstrKanriKBN = new global::System.Data.DataColumn("strKanriKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrKanriKBN);
                this.columncurKingaku = new global::System.Data.DataColumn("curKingaku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurKingaku);
                this.columncurZeikomi = new global::System.Data.DataColumn("curZeikomi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurZeikomi);
                this.columnstrFEECD = new global::System.Data.DataColumn("strFEECD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrFEECD);
                this.columnkeyCountSite = new global::System.Data.DataColumn("keyCountSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeyCountSite);
                this.columnkeyCountCYBN = new global::System.Data.DataColumn("keyCountCYBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeyCountCYBN);
                this.columnkeyCountHinmoku = new global::System.Data.DataColumn("keyCountHinmoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeyCountHinmoku);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemMacroRow NewReportByItemMacroRow() {
                return ((ReportByItemMacroRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportByItemMacroRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportByItemMacroRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportByItemMacroRowChanged != null)) {
                    this.ReportByItemMacroRowChanged(this, new ReportByItemMacroRowChangeEvent(((ReportByItemMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportByItemMacroRowChanging != null)) {
                    this.ReportByItemMacroRowChanging(this, new ReportByItemMacroRowChangeEvent(((ReportByItemMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportByItemMacroRowDeleted != null)) {
                    this.ReportByItemMacroRowDeleted(this, new ReportByItemMacroRowChangeEvent(((ReportByItemMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportByItemMacroRowDeleting != null)) {
                    this.ReportByItemMacroRowDeleting(this, new ReportByItemMacroRowChangeEvent(((ReportByItemMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportByItemMacroRow(ReportByItemMacroRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDSTkdBilling ds = new ReportDSTkdBilling();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportByItemMacroDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportForPlanningCostMacroDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnKNGK1;
            
            private global::System.Data.DataColumn columnSCD;
            
            private global::System.Data.DataColumn columnSNM;
            
            private global::System.Data.DataColumn columnTEKIYO;
            
            private global::System.Data.DataColumn columnKBN;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnSZEIRITU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostMacroDataTable() {
                this.TableName = "ReportForPlanningCostMacro";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportForPlanningCostMacroDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportForPlanningCostMacroDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KNGK1Column {
                get {
                    return this.columnKNGK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCDColumn {
                get {
                    return this.columnSCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SNMColumn {
                get {
                    return this.columnSNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEKIYOColumn {
                get {
                    return this.columnTEKIYO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KBNColumn {
                get {
                    return this.columnKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZEIRITUColumn {
                get {
                    return this.columnSZEIRITU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostMacroRow this[int index] {
                get {
                    return ((ReportForPlanningCostMacroRow)(this.Rows[index]));
                }
            }
            
            public event ReportForPlanningCostMacroRowChangeEventHandler ReportForPlanningCostMacroRowChanging;
            
            public event ReportForPlanningCostMacroRowChangeEventHandler ReportForPlanningCostMacroRowChanged;
            
            public event ReportForPlanningCostMacroRowChangeEventHandler ReportForPlanningCostMacroRowDeleting;
            
            public event ReportForPlanningCostMacroRowChangeEventHandler ReportForPlanningCostMacroRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportForPlanningCostMacroRow(ReportForPlanningCostMacroRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostMacroRow AddReportForPlanningCostMacroRow(string JYUTNO, string JYMEINO, string URMEINO, string KNGK1, string SCD, string SNM, string TEKIYO, string KBN, string SEIGAK, string SZEIRITU) {
                ReportForPlanningCostMacroRow rowReportForPlanningCostMacroRow = ((ReportForPlanningCostMacroRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        KNGK1,
                        SCD,
                        SNM,
                        TEKIYO,
                        KBN,
                        SEIGAK,
                        SZEIRITU};
                rowReportForPlanningCostMacroRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportForPlanningCostMacroRow);
                return rowReportForPlanningCostMacroRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportForPlanningCostMacroDataTable cln = ((ReportForPlanningCostMacroDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportForPlanningCostMacroDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnKNGK1 = base.Columns["KNGK1"];
                this.columnSCD = base.Columns["SCD"];
                this.columnSNM = base.Columns["SNM"];
                this.columnTEKIYO = base.Columns["TEKIYO"];
                this.columnKBN = base.Columns["KBN"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnSZEIRITU = base.Columns["SZEIRITU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnKNGK1 = new global::System.Data.DataColumn("KNGK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKNGK1);
                this.columnSCD = new global::System.Data.DataColumn("SCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCD);
                this.columnSNM = new global::System.Data.DataColumn("SNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSNM);
                this.columnTEKIYO = new global::System.Data.DataColumn("TEKIYO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEKIYO);
                this.columnKBN = new global::System.Data.DataColumn("KBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKBN);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnSZEIRITU = new global::System.Data.DataColumn("SZEIRITU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZEIRITU);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostMacroRow NewReportForPlanningCostMacroRow() {
                return ((ReportForPlanningCostMacroRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportForPlanningCostMacroRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportForPlanningCostMacroRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportForPlanningCostMacroRowChanged != null)) {
                    this.ReportForPlanningCostMacroRowChanged(this, new ReportForPlanningCostMacroRowChangeEvent(((ReportForPlanningCostMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportForPlanningCostMacroRowChanging != null)) {
                    this.ReportForPlanningCostMacroRowChanging(this, new ReportForPlanningCostMacroRowChangeEvent(((ReportForPlanningCostMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportForPlanningCostMacroRowDeleted != null)) {
                    this.ReportForPlanningCostMacroRowDeleted(this, new ReportForPlanningCostMacroRowChangeEvent(((ReportForPlanningCostMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportForPlanningCostMacroRowDeleting != null)) {
                    this.ReportForPlanningCostMacroRowDeleting(this, new ReportForPlanningCostMacroRowChangeEvent(((ReportForPlanningCostMacroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportForPlanningCostMacroRow(ReportForPlanningCostMacroRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDSTkdBilling ds = new ReportDSTkdBilling();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportForPlanningCostMacroDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportByMiddleClassificationResultRow : global::System.Data.DataRow {
            
            private ReportByMiddleClassificationResultDataTable tableReportByMiddleClassificationResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByMiddleClassificationResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportByMiddleClassificationResult = ((ReportByMiddleClassificationResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQLNO {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.SQLNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'SQLNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.SQLNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strDairitenCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strDairitenCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strDairitenCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strDairitenCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strYM {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strYMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strYM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strYMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strCYBNCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strCYBNCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strCYBNCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strCYBNCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strCYBNNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strCYBNNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strCYBNNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strCYBNNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CYBNO {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.CYBNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'CYBNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.CYBNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strKBTNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strKBTNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strKBTNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strKBTNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strKBTCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strKBTCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strKBTCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strKBTCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAINO {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.BAINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'BAINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.BAINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENNO {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.RENNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'RENNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.RENNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strHinmokuNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strHinmokuNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strHinmokuNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strHinmokuNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strHinmokuCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strHinmokuCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strHinmokuCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strHinmokuCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HINNO {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.HINNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'HINNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.HINNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strKanriKBN {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strKanriKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strKanriKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strKanriKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string intHaibunHiritsu {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.intHaibunHiritsuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'intHaibunHiritsu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.intHaibunHiritsuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string curHaifugaku {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.curHaifugakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'curHaifugaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.curHaifugakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strSite {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strSite\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strBiko {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationResult.strBikoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationResult\' にある列 \'strBiko\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationResult.strBikoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQLNONull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.SQLNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQLNONull() {
                this[this.tableReportByMiddleClassificationResult.SQLNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrDairitenCDNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strDairitenCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrDairitenCDNull() {
                this[this.tableReportByMiddleClassificationResult.strDairitenCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrYMNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strYMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrYMNull() {
                this[this.tableReportByMiddleClassificationResult.strYMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrCYBNCDNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strCYBNCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrCYBNCDNull() {
                this[this.tableReportByMiddleClassificationResult.strCYBNCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrCYBNNMNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strCYBNNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrCYBNNMNull() {
                this[this.tableReportByMiddleClassificationResult.strCYBNNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCYBNONull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.CYBNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCYBNONull() {
                this[this.tableReportByMiddleClassificationResult.CYBNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrKBTNMNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strKBTNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrKBTNMNull() {
                this[this.tableReportByMiddleClassificationResult.strKBTNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrKBTCDNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strKBTCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrKBTCDNull() {
                this[this.tableReportByMiddleClassificationResult.strKBTCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAINONull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.BAINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAINONull() {
                this[this.tableReportByMiddleClassificationResult.BAINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENNONull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.RENNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENNONull() {
                this[this.tableReportByMiddleClassificationResult.RENNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrHinmokuNMNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strHinmokuNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrHinmokuNMNull() {
                this[this.tableReportByMiddleClassificationResult.strHinmokuNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrHinmokuCDNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strHinmokuCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrHinmokuCDNull() {
                this[this.tableReportByMiddleClassificationResult.strHinmokuCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHINNONull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.HINNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHINNONull() {
                this[this.tableReportByMiddleClassificationResult.HINNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrKanriKBNNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strKanriKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrKanriKBNNull() {
                this[this.tableReportByMiddleClassificationResult.strKanriKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsintHaibunHiritsuNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.intHaibunHiritsuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetintHaibunHiritsuNull() {
                this[this.tableReportByMiddleClassificationResult.intHaibunHiritsuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurHaifugakuNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.curHaifugakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurHaifugakuNull() {
                this[this.tableReportByMiddleClassificationResult.curHaifugakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrSiteNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrSiteNull() {
                this[this.tableReportByMiddleClassificationResult.strSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrBikoNull() {
                return this.IsNull(this.tableReportByMiddleClassificationResult.strBikoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrBikoNull() {
                this[this.tableReportByMiddleClassificationResult.strBikoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportByMiddleClassificationMacroRow : global::System.Data.DataRow {
            
            private ReportByMiddleClassificationMacroDataTable tableReportByMiddleClassificationMacro;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByMiddleClassificationMacroRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportByMiddleClassificationMacro = ((ReportByMiddleClassificationMacroDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strDairitenCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strDairitenCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strDairitenCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strDairitenCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strYM {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strYMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strYM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strYMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strCYBNCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strCYBNCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strCYBNCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strCYBNCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strCYBNNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strCYBNNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strCYBNNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strCYBNNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strKBTNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strKBTNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strKBTNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strKBTNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strKBTCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strKBTCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strKBTCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strKBTCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strRenNo {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strRenNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strRenNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strRenNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strHinmokuNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strHinmokuNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strHinmokuNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strHinmokuNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strHinmokuCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strHinmokuCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strHinmokuCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strHinmokuCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strKanriKBN {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strKanriKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strKanriKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strKanriKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string intHaibunHiritsu {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.intHaibunHiritsuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'intHaibunHiritsu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.intHaibunHiritsuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string curHaifugaku {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.curHaifugakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'curHaifugaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.curHaifugakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strSite {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strSite\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strBiko {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.strBikoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'strBiko\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.strBikoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keyCountSite {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.keyCountSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'keyCountSite\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.keyCountSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keyCountCYBN {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.keyCountCYBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'keyCountCYBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.keyCountCYBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keyCountKBT {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.keyCountKBTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'keyCountKBT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.keyCountKBTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keyCountHinmoku {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationMacro.keyCountHinmokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationMacro\' にある列 \'keyCountHinmoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationMacro.keyCountHinmokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrDairitenCDNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strDairitenCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrDairitenCDNull() {
                this[this.tableReportByMiddleClassificationMacro.strDairitenCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrYMNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strYMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrYMNull() {
                this[this.tableReportByMiddleClassificationMacro.strYMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrCYBNCDNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strCYBNCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrCYBNCDNull() {
                this[this.tableReportByMiddleClassificationMacro.strCYBNCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrCYBNNMNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strCYBNNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrCYBNNMNull() {
                this[this.tableReportByMiddleClassificationMacro.strCYBNNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrKBTNMNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strKBTNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrKBTNMNull() {
                this[this.tableReportByMiddleClassificationMacro.strKBTNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrKBTCDNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strKBTCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrKBTCDNull() {
                this[this.tableReportByMiddleClassificationMacro.strKBTCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrRenNoNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strRenNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrRenNoNull() {
                this[this.tableReportByMiddleClassificationMacro.strRenNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrHinmokuNMNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strHinmokuNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrHinmokuNMNull() {
                this[this.tableReportByMiddleClassificationMacro.strHinmokuNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrHinmokuCDNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strHinmokuCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrHinmokuCDNull() {
                this[this.tableReportByMiddleClassificationMacro.strHinmokuCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrKanriKBNNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strKanriKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrKanriKBNNull() {
                this[this.tableReportByMiddleClassificationMacro.strKanriKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsintHaibunHiritsuNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.intHaibunHiritsuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetintHaibunHiritsuNull() {
                this[this.tableReportByMiddleClassificationMacro.intHaibunHiritsuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurHaifugakuNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.curHaifugakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurHaifugakuNull() {
                this[this.tableReportByMiddleClassificationMacro.curHaifugakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrSiteNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrSiteNull() {
                this[this.tableReportByMiddleClassificationMacro.strSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrBikoNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.strBikoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrBikoNull() {
                this[this.tableReportByMiddleClassificationMacro.strBikoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeyCountSiteNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.keyCountSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeyCountSiteNull() {
                this[this.tableReportByMiddleClassificationMacro.keyCountSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeyCountCYBNNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.keyCountCYBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeyCountCYBNNull() {
                this[this.tableReportByMiddleClassificationMacro.keyCountCYBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeyCountKBTNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.keyCountKBTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeyCountKBTNull() {
                this[this.tableReportByMiddleClassificationMacro.keyCountKBTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeyCountHinmokuNull() {
                return this.IsNull(this.tableReportByMiddleClassificationMacro.keyCountHinmokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeyCountHinmokuNull() {
                this[this.tableReportByMiddleClassificationMacro.keyCountHinmokuColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportByItemResultRow : global::System.Data.DataRow {
            
            private ReportByItemResultDataTable tableReportByItemResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByItemResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportByItemResult = ((ReportByItemResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQLNO {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.SQLNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'SQLNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.SQLNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SITE {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.SITEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'SITE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.SITEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strDairitenCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.strDairitenCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'strDairitenCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.strDairitenCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strYM {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.strYMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'strYM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.strYMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strCYBNCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.strCYBNCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'strCYBNCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.strCYBNCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CYBNO {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.CYBNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'CYBNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.CYBNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strCYBNNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.strCYBNNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'strCYBNNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.strCYBNNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strHinmokuNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.strHinmokuNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'strHinmokuNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.strHinmokuNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strHinmokuCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.strHinmokuCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'strHinmokuCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.strHinmokuCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HNMKCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.HNMKCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'HNMKCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.HNMKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KNRKBN {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.KNRKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'KNRKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.KNRKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string curKingaku {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.curKingakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'curKingaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.curKingakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FEECD {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemResult.FEECDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemResult\' にある列 \'FEECD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemResult.FEECDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQLNONull() {
                return this.IsNull(this.tableReportByItemResult.SQLNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQLNONull() {
                this[this.tableReportByItemResult.SQLNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSITENull() {
                return this.IsNull(this.tableReportByItemResult.SITEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSITENull() {
                this[this.tableReportByItemResult.SITEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrDairitenCDNull() {
                return this.IsNull(this.tableReportByItemResult.strDairitenCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrDairitenCDNull() {
                this[this.tableReportByItemResult.strDairitenCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrYMNull() {
                return this.IsNull(this.tableReportByItemResult.strYMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrYMNull() {
                this[this.tableReportByItemResult.strYMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrCYBNCDNull() {
                return this.IsNull(this.tableReportByItemResult.strCYBNCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrCYBNCDNull() {
                this[this.tableReportByItemResult.strCYBNCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCYBNONull() {
                return this.IsNull(this.tableReportByItemResult.CYBNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCYBNONull() {
                this[this.tableReportByItemResult.CYBNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrCYBNNMNull() {
                return this.IsNull(this.tableReportByItemResult.strCYBNNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrCYBNNMNull() {
                this[this.tableReportByItemResult.strCYBNNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrHinmokuNMNull() {
                return this.IsNull(this.tableReportByItemResult.strHinmokuNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrHinmokuNMNull() {
                this[this.tableReportByItemResult.strHinmokuNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrHinmokuCDNull() {
                return this.IsNull(this.tableReportByItemResult.strHinmokuCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrHinmokuCDNull() {
                this[this.tableReportByItemResult.strHinmokuCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHNMKCDNull() {
                return this.IsNull(this.tableReportByItemResult.HNMKCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHNMKCDNull() {
                this[this.tableReportByItemResult.HNMKCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKNRKBNNull() {
                return this.IsNull(this.tableReportByItemResult.KNRKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKNRKBNNull() {
                this[this.tableReportByItemResult.KNRKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurKingakuNull() {
                return this.IsNull(this.tableReportByItemResult.curKingakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurKingakuNull() {
                this[this.tableReportByItemResult.curKingakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEECDNull() {
                return this.IsNull(this.tableReportByItemResult.FEECDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEECDNull() {
                this[this.tableReportByItemResult.FEECDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportByItemViewRow : global::System.Data.DataRow {
            
            private ReportByItemViewDataTable tableReportByItemView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByItemViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportByItemView = ((ReportByItemViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHHSite {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHHSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHHSite\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHHSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHDairinm {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHDairinmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHDairinm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHDairinmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHDairicd {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHDairicdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHDairicd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHDairicdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHym {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHymColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHym\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHymColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHBtccd {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHBtccdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHBtccd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHBtccdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHBtcnm {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHBtcnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHBtcnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHBtcnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHHinmoku {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHHinmokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHHinmoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHHinmokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHHinmokucd {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHHinmokucdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHHinmokucd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHHinmokucdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHKanricbn {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHKanricbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHKanricbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHKanricbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHKingaku {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHKingakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHKingaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHKingakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHZeikomi {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHZeikomiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHZeikomi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHZeikomiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHFeeCd {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemView.cHFeeCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemView\' にある列 \'cHFeeCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemView.cHFeeCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHHSiteNull() {
                return this.IsNull(this.tableReportByItemView.cHHSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHHSiteNull() {
                this[this.tableReportByItemView.cHHSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHDairinmNull() {
                return this.IsNull(this.tableReportByItemView.cHDairinmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHDairinmNull() {
                this[this.tableReportByItemView.cHDairinmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHDairicdNull() {
                return this.IsNull(this.tableReportByItemView.cHDairicdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHDairicdNull() {
                this[this.tableReportByItemView.cHDairicdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHymNull() {
                return this.IsNull(this.tableReportByItemView.cHymColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHymNull() {
                this[this.tableReportByItemView.cHymColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHBtccdNull() {
                return this.IsNull(this.tableReportByItemView.cHBtccdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHBtccdNull() {
                this[this.tableReportByItemView.cHBtccdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHBtcnmNull() {
                return this.IsNull(this.tableReportByItemView.cHBtcnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHBtcnmNull() {
                this[this.tableReportByItemView.cHBtcnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHHinmokuNull() {
                return this.IsNull(this.tableReportByItemView.cHHinmokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHHinmokuNull() {
                this[this.tableReportByItemView.cHHinmokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHHinmokucdNull() {
                return this.IsNull(this.tableReportByItemView.cHHinmokucdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHHinmokucdNull() {
                this[this.tableReportByItemView.cHHinmokucdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHKanricbnNull() {
                return this.IsNull(this.tableReportByItemView.cHKanricbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHKanricbnNull() {
                this[this.tableReportByItemView.cHKanricbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHKingakuNull() {
                return this.IsNull(this.tableReportByItemView.cHKingakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHKingakuNull() {
                this[this.tableReportByItemView.cHKingakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHZeikomiNull() {
                return this.IsNull(this.tableReportByItemView.cHZeikomiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHZeikomiNull() {
                this[this.tableReportByItemView.cHZeikomiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHFeeCdNull() {
                return this.IsNull(this.tableReportByItemView.cHFeeCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHFeeCdNull() {
                this[this.tableReportByItemView.cHFeeCdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportForPlanningCostResultRow : global::System.Data.DataRow {
            
            private ReportForPlanningCostResultDataTable tableReportForPlanningCostResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportForPlanningCostResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportForPlanningCostResult = ((ReportForPlanningCostResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KNGK1 {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.KNGK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'KNGK1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.KNGK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SCD {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.SCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'SCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.SCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SNM {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.SNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'SNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.SNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEKIYO {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.TEKIYOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'TEKIYO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.TEKIYOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KBN {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.KBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'KBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.KBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEIGAK {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SZEIRITU {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostResult.SZEIRITUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostResult\' にある列 \'SZEIRITU\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostResult.SZEIRITUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableReportForPlanningCostResult.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableReportForPlanningCostResult.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableReportForPlanningCostResult.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableReportForPlanningCostResult.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableReportForPlanningCostResult.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableReportForPlanningCostResult.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKNGK1Null() {
                return this.IsNull(this.tableReportForPlanningCostResult.KNGK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKNGK1Null() {
                this[this.tableReportForPlanningCostResult.KNGK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCDNull() {
                return this.IsNull(this.tableReportForPlanningCostResult.SCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCDNull() {
                this[this.tableReportForPlanningCostResult.SCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSNMNull() {
                return this.IsNull(this.tableReportForPlanningCostResult.SNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSNMNull() {
                this[this.tableReportForPlanningCostResult.SNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEKIYONull() {
                return this.IsNull(this.tableReportForPlanningCostResult.TEKIYOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEKIYONull() {
                this[this.tableReportForPlanningCostResult.TEKIYOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKBNNull() {
                return this.IsNull(this.tableReportForPlanningCostResult.KBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKBNNull() {
                this[this.tableReportForPlanningCostResult.KBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableReportForPlanningCostResult.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableReportForPlanningCostResult.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZEIRITUNull() {
                return this.IsNull(this.tableReportForPlanningCostResult.SZEIRITUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZEIRITUNull() {
                this[this.tableReportForPlanningCostResult.SZEIRITUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportForPlanningCostViewRow : global::System.Data.DataRow {
            
            private ReportForPlanningCostViewDataTable tableReportForPlanningCostView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportForPlanningCostViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportForPlanningCostView = ((ReportForPlanningCostViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cKKHinmoku {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostView.cKKHinmokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostView\' にある列 \'cKKHinmoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostView.cKKHinmokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cKKTekiyo {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostView.cKKTekiyoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostView\' にある列 \'cKKTekiyo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostView.cKKTekiyoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cKKSuryo {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostView.cKKSuryoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostView\' にある列 \'cKKSuryo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostView.cKKSuryoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cKKTanka {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostView.cKKTankaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostView\' にある列 \'cKKTanka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostView.cKKTankaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cKKHongaku {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostView.cKKHongakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostView\' にある列 \'cKKHongaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostView.cKKHongakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cKKZeigaku {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostView.cKKZeigakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostView\' にある列 \'cKKZeigaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostView.cKKZeigakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cKKKingaku {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostView.cKKKingakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostView\' にある列 \'cKKKingaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostView.cKKKingakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cKKKbn {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostView.cKKKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostView\' にある列 \'cKKKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostView.cKKKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cKKLineFlg {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostView.cKKLineFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostView\' にある列 \'cKKLineFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostView.cKKLineFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscKKHinmokuNull() {
                return this.IsNull(this.tableReportForPlanningCostView.cKKHinmokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcKKHinmokuNull() {
                this[this.tableReportForPlanningCostView.cKKHinmokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscKKTekiyoNull() {
                return this.IsNull(this.tableReportForPlanningCostView.cKKTekiyoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcKKTekiyoNull() {
                this[this.tableReportForPlanningCostView.cKKTekiyoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscKKSuryoNull() {
                return this.IsNull(this.tableReportForPlanningCostView.cKKSuryoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcKKSuryoNull() {
                this[this.tableReportForPlanningCostView.cKKSuryoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscKKTankaNull() {
                return this.IsNull(this.tableReportForPlanningCostView.cKKTankaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcKKTankaNull() {
                this[this.tableReportForPlanningCostView.cKKTankaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscKKHongakuNull() {
                return this.IsNull(this.tableReportForPlanningCostView.cKKHongakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcKKHongakuNull() {
                this[this.tableReportForPlanningCostView.cKKHongakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscKKZeigakuNull() {
                return this.IsNull(this.tableReportForPlanningCostView.cKKZeigakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcKKZeigakuNull() {
                this[this.tableReportForPlanningCostView.cKKZeigakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscKKKingakuNull() {
                return this.IsNull(this.tableReportForPlanningCostView.cKKKingakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcKKKingakuNull() {
                this[this.tableReportForPlanningCostView.cKKKingakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscKKKbnNull() {
                return this.IsNull(this.tableReportForPlanningCostView.cKKKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcKKKbnNull() {
                this[this.tableReportForPlanningCostView.cKKKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscKKLineFlgNull() {
                return this.IsNull(this.tableReportForPlanningCostView.cKKLineFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcKKLineFlgNull() {
                this[this.tableReportForPlanningCostView.cKKLineFlgColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportByMiddleClassificationViewRow : global::System.Data.DataRow {
            
            private ReportByMiddleClassificationViewDataTable tableReportByMiddleClassificationView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByMiddleClassificationViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportByMiddleClassificationView = ((ReportByMiddleClassificationViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCHSite {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCHSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCHSite\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCHSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCDairinm {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCDairinmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCDairinm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCDairinmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCDairicd {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCDairicdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCDairicd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCDairicdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCym {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCymColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCym\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCymColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCBtccd {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCBtccdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCBtccd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCBtccdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCBtcnm {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCBtcnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCBtcnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCBtcnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCBtkbtnm {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCBtkbtnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCBtkbtnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCBtkbtnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCBtkbtcd {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCBtkbtcdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCBtkbtcd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCBtkbtcdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCIchirenno {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCIchirennoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCIchirenno\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCIchirennoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCSougaku {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCSougakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCSougaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCSougakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCHinmokunm {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCHinmokunmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCHinmokunm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCHinmokunmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCHinmokucd {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCHinmokucdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCHinmokucd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCHinmokucdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCKanrikbn {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCKanrikbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCKanrikbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCKanrikbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCHaibun {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCHaibunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCHaibun\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCHaibunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCHaifugaku {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCHaifugakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCHaifugaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCHaifugakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCSite {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCSite\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCBiko {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCBikoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCBiko\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCBikoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCFee {
                get {
                    try {
                        return ((string)(this[this.tableReportByMiddleClassificationView.cCFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByMiddleClassificationView\' にある列 \'cCFee\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByMiddleClassificationView.cCFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCHSiteNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCHSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCHSiteNull() {
                this[this.tableReportByMiddleClassificationView.cCHSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCDairinmNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCDairinmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCDairinmNull() {
                this[this.tableReportByMiddleClassificationView.cCDairinmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCDairicdNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCDairicdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCDairicdNull() {
                this[this.tableReportByMiddleClassificationView.cCDairicdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCymNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCymColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCymNull() {
                this[this.tableReportByMiddleClassificationView.cCymColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCBtccdNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCBtccdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCBtccdNull() {
                this[this.tableReportByMiddleClassificationView.cCBtccdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCBtcnmNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCBtcnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCBtcnmNull() {
                this[this.tableReportByMiddleClassificationView.cCBtcnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCBtkbtnmNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCBtkbtnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCBtkbtnmNull() {
                this[this.tableReportByMiddleClassificationView.cCBtkbtnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCBtkbtcdNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCBtkbtcdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCBtkbtcdNull() {
                this[this.tableReportByMiddleClassificationView.cCBtkbtcdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCIchirennoNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCIchirennoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCIchirennoNull() {
                this[this.tableReportByMiddleClassificationView.cCIchirennoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCSougakuNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCSougakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCSougakuNull() {
                this[this.tableReportByMiddleClassificationView.cCSougakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCHinmokunmNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCHinmokunmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCHinmokunmNull() {
                this[this.tableReportByMiddleClassificationView.cCHinmokunmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCHinmokucdNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCHinmokucdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCHinmokucdNull() {
                this[this.tableReportByMiddleClassificationView.cCHinmokucdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCKanrikbnNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCKanrikbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCKanrikbnNull() {
                this[this.tableReportByMiddleClassificationView.cCKanrikbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCHaibunNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCHaibunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCHaibunNull() {
                this[this.tableReportByMiddleClassificationView.cCHaibunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCHaifugakuNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCHaifugakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCHaifugakuNull() {
                this[this.tableReportByMiddleClassificationView.cCHaifugakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCSiteNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCSiteNull() {
                this[this.tableReportByMiddleClassificationView.cCSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCBikoNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCBikoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCBikoNull() {
                this[this.tableReportByMiddleClassificationView.cCBikoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCFeeNull() {
                return this.IsNull(this.tableReportByMiddleClassificationView.cCFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCFeeNull() {
                this[this.tableReportByMiddleClassificationView.cCFeeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportByItemMacroRow : global::System.Data.DataRow {
            
            private ReportByItemMacroDataTable tableReportByItemMacro;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportByItemMacroRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportByItemMacro = ((ReportByItemMacroDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strDairitenCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.strDairitenCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'strDairitenCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.strDairitenCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strYM {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.strYMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'strYM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.strYMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strSite {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.strSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'strSite\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.strSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strCYBNCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.strCYBNCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'strCYBNCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.strCYBNCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strCYBNNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.strCYBNNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'strCYBNNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.strCYBNNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strHinmokuNM {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.strHinmokuNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'strHinmokuNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.strHinmokuNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strHinmokuCD {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.strHinmokuCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'strHinmokuCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.strHinmokuCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strKanriKBN {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.strKanriKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'strKanriKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.strKanriKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string curKingaku {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.curKingakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'curKingaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.curKingakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string curZeikomi {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.curZeikomiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'curZeikomi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.curZeikomiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strFEECD {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.strFEECDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'strFEECD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.strFEECDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keyCountSite {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.keyCountSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'keyCountSite\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.keyCountSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keyCountCYBN {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.keyCountCYBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'keyCountCYBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.keyCountCYBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keyCountHinmoku {
                get {
                    try {
                        return ((string)(this[this.tableReportByItemMacro.keyCountHinmokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportByItemMacro\' にある列 \'keyCountHinmoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportByItemMacro.keyCountHinmokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrDairitenCDNull() {
                return this.IsNull(this.tableReportByItemMacro.strDairitenCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrDairitenCDNull() {
                this[this.tableReportByItemMacro.strDairitenCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrYMNull() {
                return this.IsNull(this.tableReportByItemMacro.strYMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrYMNull() {
                this[this.tableReportByItemMacro.strYMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrSiteNull() {
                return this.IsNull(this.tableReportByItemMacro.strSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrSiteNull() {
                this[this.tableReportByItemMacro.strSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrCYBNCDNull() {
                return this.IsNull(this.tableReportByItemMacro.strCYBNCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrCYBNCDNull() {
                this[this.tableReportByItemMacro.strCYBNCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrCYBNNMNull() {
                return this.IsNull(this.tableReportByItemMacro.strCYBNNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrCYBNNMNull() {
                this[this.tableReportByItemMacro.strCYBNNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrHinmokuNMNull() {
                return this.IsNull(this.tableReportByItemMacro.strHinmokuNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrHinmokuNMNull() {
                this[this.tableReportByItemMacro.strHinmokuNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrHinmokuCDNull() {
                return this.IsNull(this.tableReportByItemMacro.strHinmokuCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrHinmokuCDNull() {
                this[this.tableReportByItemMacro.strHinmokuCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrKanriKBNNull() {
                return this.IsNull(this.tableReportByItemMacro.strKanriKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrKanriKBNNull() {
                this[this.tableReportByItemMacro.strKanriKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurKingakuNull() {
                return this.IsNull(this.tableReportByItemMacro.curKingakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurKingakuNull() {
                this[this.tableReportByItemMacro.curKingakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurZeikomiNull() {
                return this.IsNull(this.tableReportByItemMacro.curZeikomiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurZeikomiNull() {
                this[this.tableReportByItemMacro.curZeikomiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrFEECDNull() {
                return this.IsNull(this.tableReportByItemMacro.strFEECDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrFEECDNull() {
                this[this.tableReportByItemMacro.strFEECDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeyCountSiteNull() {
                return this.IsNull(this.tableReportByItemMacro.keyCountSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeyCountSiteNull() {
                this[this.tableReportByItemMacro.keyCountSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeyCountCYBNNull() {
                return this.IsNull(this.tableReportByItemMacro.keyCountCYBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeyCountCYBNNull() {
                this[this.tableReportByItemMacro.keyCountCYBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeyCountHinmokuNull() {
                return this.IsNull(this.tableReportByItemMacro.keyCountHinmokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeyCountHinmokuNull() {
                this[this.tableReportByItemMacro.keyCountHinmokuColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportForPlanningCostMacroRow : global::System.Data.DataRow {
            
            private ReportForPlanningCostMacroDataTable tableReportForPlanningCostMacro;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportForPlanningCostMacroRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportForPlanningCostMacro = ((ReportForPlanningCostMacroDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KNGK1 {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.KNGK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'KNGK1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.KNGK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SCD {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.SCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'SCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.SCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SNM {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.SNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'SNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.SNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEKIYO {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.TEKIYOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'TEKIYO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.TEKIYOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KBN {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.KBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'KBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.KBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEIGAK {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SZEIRITU {
                get {
                    try {
                        return ((string)(this[this.tableReportForPlanningCostMacro.SZEIRITUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportForPlanningCostMacro\' にある列 \'SZEIRITU\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportForPlanningCostMacro.SZEIRITUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableReportForPlanningCostMacro.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableReportForPlanningCostMacro.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableReportForPlanningCostMacro.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableReportForPlanningCostMacro.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableReportForPlanningCostMacro.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableReportForPlanningCostMacro.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKNGK1Null() {
                return this.IsNull(this.tableReportForPlanningCostMacro.KNGK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKNGK1Null() {
                this[this.tableReportForPlanningCostMacro.KNGK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCDNull() {
                return this.IsNull(this.tableReportForPlanningCostMacro.SCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCDNull() {
                this[this.tableReportForPlanningCostMacro.SCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSNMNull() {
                return this.IsNull(this.tableReportForPlanningCostMacro.SNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSNMNull() {
                this[this.tableReportForPlanningCostMacro.SNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEKIYONull() {
                return this.IsNull(this.tableReportForPlanningCostMacro.TEKIYOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEKIYONull() {
                this[this.tableReportForPlanningCostMacro.TEKIYOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKBNNull() {
                return this.IsNull(this.tableReportForPlanningCostMacro.KBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKBNNull() {
                this[this.tableReportForPlanningCostMacro.KBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableReportForPlanningCostMacro.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableReportForPlanningCostMacro.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZEIRITUNull() {
                return this.IsNull(this.tableReportForPlanningCostMacro.SZEIRITUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZEIRITUNull() {
                this[this.tableReportForPlanningCostMacro.SZEIRITUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportByMiddleClassificationResultRowChangeEvent : global::System.EventArgs {
            
            private ReportByMiddleClassificationResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationResultRowChangeEvent(ReportByMiddleClassificationResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportByMiddleClassificationMacroRowChangeEvent : global::System.EventArgs {
            
            private ReportByMiddleClassificationMacroRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationMacroRowChangeEvent(ReportByMiddleClassificationMacroRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationMacroRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportByItemResultRowChangeEvent : global::System.EventArgs {
            
            private ReportByItemResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemResultRowChangeEvent(ReportByItemResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportByItemViewRowChangeEvent : global::System.EventArgs {
            
            private ReportByItemViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemViewRowChangeEvent(ReportByItemViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportForPlanningCostResultRowChangeEvent : global::System.EventArgs {
            
            private ReportForPlanningCostResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostResultRowChangeEvent(ReportForPlanningCostResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportForPlanningCostViewRowChangeEvent : global::System.EventArgs {
            
            private ReportForPlanningCostViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostViewRowChangeEvent(ReportForPlanningCostViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportByMiddleClassificationViewRowChangeEvent : global::System.EventArgs {
            
            private ReportByMiddleClassificationViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationViewRowChangeEvent(ReportByMiddleClassificationViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByMiddleClassificationViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportByItemMacroRowChangeEvent : global::System.EventArgs {
            
            private ReportByItemMacroRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemMacroRowChangeEvent(ReportByItemMacroRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportByItemMacroRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportForPlanningCostMacroRowChangeEvent : global::System.EventArgs {
            
            private ReportForPlanningCostMacroRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostMacroRowChangeEvent(ReportForPlanningCostMacroRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportForPlanningCostMacroRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591