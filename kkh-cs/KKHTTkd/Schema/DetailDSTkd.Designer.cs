//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3625
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Tkd.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DetailDSTkd")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DetailDSTkd : global::System.Data.DataSet {
        
        private KkhDetailDataTable tableKkhDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DetailDSTkd() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DetailDSTkd(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["KkhDetail"] != null)) {
                    base.Tables.Add(new KkhDetailDataTable(ds.Tables["KkhDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KkhDetailDataTable KkhDetail {
            get {
                return this.tableKkhDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DetailDSTkd cln = ((DetailDSTkd)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["KkhDetail"] != null)) {
                    base.Tables.Add(new KkhDetailDataTable(ds.Tables["KkhDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableKkhDetail = ((KkhDetailDataTable)(base.Tables["KkhDetail"]));
            if ((initTable == true)) {
                if ((this.tableKkhDetail != null)) {
                    this.tableKkhDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DetailDSTkd";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DetailDSTkd.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableKkhDetail = new KkhDetailDataTable();
            base.Tables.Add(this.tableKkhDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKkhDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DetailDSTkd ds = new DetailDSTkd();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void KkhDetailRowChangeEventHandler(object sender, KkhDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KkhDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnengetsu;
            
            private global::System.Data.DataColumn columnchubunrui;
            
            private global::System.Data.DataColumn columnbaitaiNm;
            
            private global::System.Data.DataColumn columnjishiNo;
            
            private global::System.Data.DataColumn columnhaibunRitsu;
            
            private global::System.Data.DataColumn columnkingaku;
            
            private global::System.Data.DataColumn columnshohinNm;
            
            private global::System.Data.DataColumn columnkanriKbn;
            
            private global::System.Data.DataColumn columnshiharaiSite;
            
            private global::System.Data.DataColumn columntekiyou;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnkbn;
            
            private global::System.Data.DataColumn columnnritu;
            
            private global::System.Data.DataColumn columnngak;
            
            private global::System.Data.DataColumn columnnkgak;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailDataTable() {
                this.TableName = "KkhDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KkhDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KkhDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nengetsuColumn {
                get {
                    return this.columnnengetsu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chubunruiColumn {
                get {
                    return this.columnchubunrui;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn baitaiNmColumn {
                get {
                    return this.columnbaitaiNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jishiNoColumn {
                get {
                    return this.columnjishiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn haibunRitsuColumn {
                get {
                    return this.columnhaibunRitsu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kingakuColumn {
                get {
                    return this.columnkingaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shohinNmColumn {
                get {
                    return this.columnshohinNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kanriKbnColumn {
                get {
                    return this.columnkanriKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shiharaiSiteColumn {
                get {
                    return this.columnshiharaiSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tekiyouColumn {
                get {
                    return this.columntekiyou;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kbnColumn {
                get {
                    return this.columnkbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nrituColumn {
                get {
                    return this.columnnritu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ngakColumn {
                get {
                    return this.columnngak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nkgakColumn {
                get {
                    return this.columnnkgak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow this[int index] {
                get {
                    return ((KkhDetailRow)(this.Rows[index]));
                }
            }
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowChanging;
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowChanged;
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowDeleting;
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKkhDetailRow(KkhDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow AddKkhDetailRow(string nengetsu, string chubunrui, string baitaiNm, decimal jishiNo, decimal haibunRitsu, decimal kingaku, string shohinNm, string kanriKbn, string shiharaiSite, string tekiyou, string status, string kbn, decimal nritu, decimal ngak, decimal nkgak) {
                KkhDetailRow rowKkhDetailRow = ((KkhDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nengetsu,
                        chubunrui,
                        baitaiNm,
                        jishiNo,
                        haibunRitsu,
                        kingaku,
                        shohinNm,
                        kanriKbn,
                        shiharaiSite,
                        tekiyou,
                        status,
                        kbn,
                        nritu,
                        ngak,
                        nkgak};
                rowKkhDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKkhDetailRow);
                return rowKkhDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KkhDetailDataTable cln = ((KkhDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KkhDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnengetsu = base.Columns["nengetsu"];
                this.columnchubunrui = base.Columns["chubunrui"];
                this.columnbaitaiNm = base.Columns["baitaiNm"];
                this.columnjishiNo = base.Columns["jishiNo"];
                this.columnhaibunRitsu = base.Columns["haibunRitsu"];
                this.columnkingaku = base.Columns["kingaku"];
                this.columnshohinNm = base.Columns["shohinNm"];
                this.columnkanriKbn = base.Columns["kanriKbn"];
                this.columnshiharaiSite = base.Columns["shiharaiSite"];
                this.columntekiyou = base.Columns["tekiyou"];
                this.columnstatus = base.Columns["status"];
                this.columnkbn = base.Columns["kbn"];
                this.columnnritu = base.Columns["nritu"];
                this.columnngak = base.Columns["ngak"];
                this.columnnkgak = base.Columns["nkgak"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnengetsu = new global::System.Data.DataColumn("nengetsu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnengetsu);
                this.columnchubunrui = new global::System.Data.DataColumn("chubunrui", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchubunrui);
                this.columnbaitaiNm = new global::System.Data.DataColumn("baitaiNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaitaiNm);
                this.columnjishiNo = new global::System.Data.DataColumn("jishiNo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjishiNo);
                this.columnhaibunRitsu = new global::System.Data.DataColumn("haibunRitsu", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhaibunRitsu);
                this.columnkingaku = new global::System.Data.DataColumn("kingaku", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkingaku);
                this.columnshohinNm = new global::System.Data.DataColumn("shohinNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshohinNm);
                this.columnkanriKbn = new global::System.Data.DataColumn("kanriKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkanriKbn);
                this.columnshiharaiSite = new global::System.Data.DataColumn("shiharaiSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshiharaiSite);
                this.columntekiyou = new global::System.Data.DataColumn("tekiyou", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntekiyou);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnkbn = new global::System.Data.DataColumn("kbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkbn);
                this.columnnritu = new global::System.Data.DataColumn("nritu", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnritu);
                this.columnngak = new global::System.Data.DataColumn("ngak", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnngak);
                this.columnnkgak = new global::System.Data.DataColumn("nkgak", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnkgak);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow NewKkhDetailRow() {
                return ((KkhDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KkhDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KkhDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KkhDetailRowChanged != null)) {
                    this.KkhDetailRowChanged(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KkhDetailRowChanging != null)) {
                    this.KkhDetailRowChanging(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KkhDetailRowDeleted != null)) {
                    this.KkhDetailRowDeleted(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KkhDetailRowDeleting != null)) {
                    this.KkhDetailRowDeleting(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKkhDetailRow(KkhDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DetailDSTkd ds = new DetailDSTkd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KkhDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KkhDetailRow : global::System.Data.DataRow {
            
            private KkhDetailDataTable tableKkhDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KkhDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKkhDetail = ((KkhDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nengetsu {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.nengetsuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'nengetsu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.nengetsuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chubunrui {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.chubunruiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'chubunrui\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.chubunruiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string baitaiNm {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.baitaiNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'baitaiNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.baitaiNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jishiNo {
                get {
                    try {
                        return ((decimal)(this[this.tableKkhDetail.jishiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'jishiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.jishiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal haibunRitsu {
                get {
                    try {
                        return ((decimal)(this[this.tableKkhDetail.haibunRitsuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'haibunRitsu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.haibunRitsuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kingaku {
                get {
                    try {
                        return ((decimal)(this[this.tableKkhDetail.kingakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'kingaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.kingakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shohinNm {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.shohinNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'shohinNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.shohinNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kanriKbn {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.kanriKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'kanriKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.kanriKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shiharaiSite {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.shiharaiSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'shiharaiSite\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.shiharaiSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tekiyou {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.tekiyouColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'tekiyou\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.tekiyouColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'status\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kbn {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.kbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'kbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.kbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal nritu {
                get {
                    try {
                        return ((decimal)(this[this.tableKkhDetail.nrituColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'nritu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.nrituColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ngak {
                get {
                    try {
                        return ((decimal)(this[this.tableKkhDetail.ngakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'ngak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.ngakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal nkgak {
                get {
                    try {
                        return ((decimal)(this[this.tableKkhDetail.nkgakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'nkgak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.nkgakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnengetsuNull() {
                return this.IsNull(this.tableKkhDetail.nengetsuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnengetsuNull() {
                this[this.tableKkhDetail.nengetsuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschubunruiNull() {
                return this.IsNull(this.tableKkhDetail.chubunruiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchubunruiNull() {
                this[this.tableKkhDetail.chubunruiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbaitaiNmNull() {
                return this.IsNull(this.tableKkhDetail.baitaiNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbaitaiNmNull() {
                this[this.tableKkhDetail.baitaiNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjishiNoNull() {
                return this.IsNull(this.tableKkhDetail.jishiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjishiNoNull() {
                this[this.tableKkhDetail.jishiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshaibunRitsuNull() {
                return this.IsNull(this.tableKkhDetail.haibunRitsuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethaibunRitsuNull() {
                this[this.tableKkhDetail.haibunRitsuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskingakuNull() {
                return this.IsNull(this.tableKkhDetail.kingakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkingakuNull() {
                this[this.tableKkhDetail.kingakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshohinNmNull() {
                return this.IsNull(this.tableKkhDetail.shohinNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshohinNmNull() {
                this[this.tableKkhDetail.shohinNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskanriKbnNull() {
                return this.IsNull(this.tableKkhDetail.kanriKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkanriKbnNull() {
                this[this.tableKkhDetail.kanriKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshiharaiSiteNull() {
                return this.IsNull(this.tableKkhDetail.shiharaiSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshiharaiSiteNull() {
                this[this.tableKkhDetail.shiharaiSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstekiyouNull() {
                return this.IsNull(this.tableKkhDetail.tekiyouColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettekiyouNull() {
                this[this.tableKkhDetail.tekiyouColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableKkhDetail.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableKkhDetail.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskbnNull() {
                return this.IsNull(this.tableKkhDetail.kbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkbnNull() {
                this[this.tableKkhDetail.kbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnrituNull() {
                return this.IsNull(this.tableKkhDetail.nrituColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnrituNull() {
                this[this.tableKkhDetail.nrituColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsngakNull() {
                return this.IsNull(this.tableKkhDetail.ngakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetngakNull() {
                this[this.tableKkhDetail.ngakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnkgakNull() {
                return this.IsNull(this.tableKkhDetail.nkgakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnkgakNull() {
                this[this.tableKkhDetail.nkgakColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KkhDetailRowChangeEvent : global::System.EventArgs {
            
            private KkhDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRowChangeEvent(KkhDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591