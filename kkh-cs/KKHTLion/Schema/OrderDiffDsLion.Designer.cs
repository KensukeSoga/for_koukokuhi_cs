//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.5485
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Lion.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OrderDiffLion")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OrderDiffLion : global::System.Data.DataSet {
        
        private OrderDiffListDataTable tableOrderDiffList;
        
        private OrderNewListDataTable tableOrderNewList;
        
        private OrderAmountDiffListDataTable tableOrderAmountDiffList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrderDiffLion() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected OrderDiffLion(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OrderDiffList"] != null)) {
                    base.Tables.Add(new OrderDiffListDataTable(ds.Tables["OrderDiffList"]));
                }
                if ((ds.Tables["OrderNewList"] != null)) {
                    base.Tables.Add(new OrderNewListDataTable(ds.Tables["OrderNewList"]));
                }
                if ((ds.Tables["OrderAmountDiffList"] != null)) {
                    base.Tables.Add(new OrderAmountDiffListDataTable(ds.Tables["OrderAmountDiffList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderDiffListDataTable OrderDiffList {
            get {
                return this.tableOrderDiffList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderNewListDataTable OrderNewList {
            get {
                return this.tableOrderNewList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderAmountDiffListDataTable OrderAmountDiffList {
            get {
                return this.tableOrderAmountDiffList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            OrderDiffLion cln = ((OrderDiffLion)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OrderDiffList"] != null)) {
                    base.Tables.Add(new OrderDiffListDataTable(ds.Tables["OrderDiffList"]));
                }
                if ((ds.Tables["OrderNewList"] != null)) {
                    base.Tables.Add(new OrderNewListDataTable(ds.Tables["OrderNewList"]));
                }
                if ((ds.Tables["OrderAmountDiffList"] != null)) {
                    base.Tables.Add(new OrderAmountDiffListDataTable(ds.Tables["OrderAmountDiffList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableOrderDiffList = ((OrderDiffListDataTable)(base.Tables["OrderDiffList"]));
            if ((initTable == true)) {
                if ((this.tableOrderDiffList != null)) {
                    this.tableOrderDiffList.InitVars();
                }
            }
            this.tableOrderNewList = ((OrderNewListDataTable)(base.Tables["OrderNewList"]));
            if ((initTable == true)) {
                if ((this.tableOrderNewList != null)) {
                    this.tableOrderNewList.InitVars();
                }
            }
            this.tableOrderAmountDiffList = ((OrderAmountDiffListDataTable)(base.Tables["OrderAmountDiffList"]));
            if ((initTable == true)) {
                if ((this.tableOrderAmountDiffList != null)) {
                    this.tableOrderAmountDiffList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "OrderDiffLion";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OrderDiffLion.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOrderDiffList = new OrderDiffListDataTable();
            base.Tables.Add(this.tableOrderDiffList);
            this.tableOrderNewList = new OrderNewListDataTable();
            base.Tables.Add(this.tableOrderNewList);
            this.tableOrderAmountDiffList = new OrderAmountDiffListDataTable();
            base.Tables.Add(this.tableOrderAmountDiffList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderDiffList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderNewList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderAmountDiffList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OrderDiffLion ds = new OrderDiffLion();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void OrderDiffListRowChangeEventHandler(object sender, OrderDiffListRowChangeEvent e);
        
        public delegate void OrderNewListRowChangeEventHandler(object sender, OrderNewListRowChangeEvent e);
        
        public delegate void OrderAmountDiffListRowChangeEventHandler(object sender, OrderAmountDiffListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderDiffListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnKKNAMEKJ;
            
            private global::System.Data.DataColumn columnGYOMKBN;
            
            private global::System.Data.DataColumn columnGYOMKBNKJ;
            
            private global::System.Data.DataColumn columnHIMKCD;
            
            private global::System.Data.DataColumn columnHIMKNMKJ;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnTORIGAK;
            
            private global::System.Data.DataColumn columnSZEIGAK;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnNEBIGAK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderDiffListDataTable() {
                this.TableName = "OrderDiffList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderDiffListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderDiffListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KKNAMEKJColumn {
                get {
                    return this.columnKKNAMEKJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYOMKBNColumn {
                get {
                    return this.columnGYOMKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYOMKBNKJColumn {
                get {
                    return this.columnGYOMKBNKJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIMKCDColumn {
                get {
                    return this.columnHIMKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIMKNMKJColumn {
                get {
                    return this.columnHIMKNMKJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TORIGAKColumn {
                get {
                    return this.columnTORIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZEIGAKColumn {
                get {
                    return this.columnSZEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NEBIGAKColumn {
                get {
                    return this.columnNEBIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderDiffListRow this[int index] {
                get {
                    return ((OrderDiffListRow)(this.Rows[index]));
                }
            }
            
            public event OrderDiffListRowChangeEventHandler OrderDiffListRowChanging;
            
            public event OrderDiffListRowChangeEventHandler OrderDiffListRowChanged;
            
            public event OrderDiffListRowChangeEventHandler OrderDiffListRowDeleting;
            
            public event OrderDiffListRowChangeEventHandler OrderDiffListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderDiffListRow(OrderDiffListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderDiffListRow AddOrderDiffListRow(string JYUTNO, string JYMEINO, string URMEINO, string KKNAMEKJ, string GYOMKBN, string GYOMKBNKJ, string HIMKCD, string HIMKNMKJ, int SEIGAK, int TORIGAK, int SZEIGAK, string SEQ, int NEBIGAK) {
                OrderDiffListRow rowOrderDiffListRow = ((OrderDiffListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        KKNAMEKJ,
                        GYOMKBN,
                        GYOMKBNKJ,
                        HIMKCD,
                        HIMKNMKJ,
                        SEIGAK,
                        TORIGAK,
                        SZEIGAK,
                        SEQ,
                        NEBIGAK};
                rowOrderDiffListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrderDiffListRow);
                return rowOrderDiffListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrderDiffListDataTable cln = ((OrderDiffListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrderDiffListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnKKNAMEKJ = base.Columns["KKNAMEKJ"];
                this.columnGYOMKBN = base.Columns["GYOMKBN"];
                this.columnGYOMKBNKJ = base.Columns["GYOMKBNKJ"];
                this.columnHIMKCD = base.Columns["HIMKCD"];
                this.columnHIMKNMKJ = base.Columns["HIMKNMKJ"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnTORIGAK = base.Columns["TORIGAK"];
                this.columnSZEIGAK = base.Columns["SZEIGAK"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnNEBIGAK = base.Columns["NEBIGAK"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnKKNAMEKJ = new global::System.Data.DataColumn("KKNAMEKJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKKNAMEKJ);
                this.columnGYOMKBN = new global::System.Data.DataColumn("GYOMKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYOMKBN);
                this.columnGYOMKBNKJ = new global::System.Data.DataColumn("GYOMKBNKJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYOMKBNKJ);
                this.columnHIMKCD = new global::System.Data.DataColumn("HIMKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIMKCD);
                this.columnHIMKNMKJ = new global::System.Data.DataColumn("HIMKNMKJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIMKNMKJ);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnTORIGAK = new global::System.Data.DataColumn("TORIGAK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTORIGAK);
                this.columnSZEIGAK = new global::System.Data.DataColumn("SZEIGAK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZEIGAK);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnNEBIGAK = new global::System.Data.DataColumn("NEBIGAK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEBIGAK);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderDiffListRow NewOrderDiffListRow() {
                return ((OrderDiffListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrderDiffListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrderDiffListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderDiffListRowChanged != null)) {
                    this.OrderDiffListRowChanged(this, new OrderDiffListRowChangeEvent(((OrderDiffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderDiffListRowChanging != null)) {
                    this.OrderDiffListRowChanging(this, new OrderDiffListRowChangeEvent(((OrderDiffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderDiffListRowDeleted != null)) {
                    this.OrderDiffListRowDeleted(this, new OrderDiffListRowChangeEvent(((OrderDiffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderDiffListRowDeleting != null)) {
                    this.OrderDiffListRowDeleting(this, new OrderDiffListRowChangeEvent(((OrderDiffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderDiffListRow(OrderDiffListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OrderDiffLion ds = new OrderDiffLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderDiffListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderNewListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnBAITAIKBN;
            
            private global::System.Data.DataColumn columnBRANDCD;
            
            private global::System.Data.DataColumn columnBRANDNM;
            
            private global::System.Data.DataColumn columnKKNAMEKJ;
            
            private global::System.Data.DataColumn columnGYOMKBN;
            
            private global::System.Data.DataColumn columnGYOMKBNKJ;
            
            private global::System.Data.DataColumn columnSEIGAK2;
            
            private global::System.Data.DataColumn columnSZEIGAK2;
            
            private global::System.Data.DataColumn columnSEQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNewListDataTable() {
                this.TableName = "OrderNewList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderNewListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderNewListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAIKBNColumn {
                get {
                    return this.columnBAITAIKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANDCDColumn {
                get {
                    return this.columnBRANDCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANDNMColumn {
                get {
                    return this.columnBRANDNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KKNAMEKJColumn {
                get {
                    return this.columnKKNAMEKJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYOMKBNColumn {
                get {
                    return this.columnGYOMKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYOMKBNKJColumn {
                get {
                    return this.columnGYOMKBNKJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAK2Column {
                get {
                    return this.columnSEIGAK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZEIGAK2Column {
                get {
                    return this.columnSZEIGAK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNewListRow this[int index] {
                get {
                    return ((OrderNewListRow)(this.Rows[index]));
                }
            }
            
            public event OrderNewListRowChangeEventHandler OrderNewListRowChanging;
            
            public event OrderNewListRowChangeEventHandler OrderNewListRowChanged;
            
            public event OrderNewListRowChangeEventHandler OrderNewListRowDeleting;
            
            public event OrderNewListRowChangeEventHandler OrderNewListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderNewListRow(OrderNewListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNewListRow AddOrderNewListRow(string JYUTNO, string JYMEINO, string URMEINO, string BAITAIKBN, string BRANDCD, string BRANDNM, string KKNAMEKJ, string GYOMKBN, string GYOMKBNKJ, int SEIGAK2, int SZEIGAK2, string SEQ) {
                OrderNewListRow rowOrderNewListRow = ((OrderNewListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        BAITAIKBN,
                        BRANDCD,
                        BRANDNM,
                        KKNAMEKJ,
                        GYOMKBN,
                        GYOMKBNKJ,
                        SEIGAK2,
                        SZEIGAK2,
                        SEQ};
                rowOrderNewListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrderNewListRow);
                return rowOrderNewListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrderNewListDataTable cln = ((OrderNewListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrderNewListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnBAITAIKBN = base.Columns["BAITAIKBN"];
                this.columnBRANDCD = base.Columns["BRANDCD"];
                this.columnBRANDNM = base.Columns["BRANDNM"];
                this.columnKKNAMEKJ = base.Columns["KKNAMEKJ"];
                this.columnGYOMKBN = base.Columns["GYOMKBN"];
                this.columnGYOMKBNKJ = base.Columns["GYOMKBNKJ"];
                this.columnSEIGAK2 = base.Columns["SEIGAK2"];
                this.columnSZEIGAK2 = base.Columns["SZEIGAK2"];
                this.columnSEQ = base.Columns["SEQ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnBAITAIKBN = new global::System.Data.DataColumn("BAITAIKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAIKBN);
                this.columnBRANDCD = new global::System.Data.DataColumn("BRANDCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANDCD);
                this.columnBRANDNM = new global::System.Data.DataColumn("BRANDNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANDNM);
                this.columnKKNAMEKJ = new global::System.Data.DataColumn("KKNAMEKJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKKNAMEKJ);
                this.columnGYOMKBN = new global::System.Data.DataColumn("GYOMKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYOMKBN);
                this.columnGYOMKBNKJ = new global::System.Data.DataColumn("GYOMKBNKJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYOMKBNKJ);
                this.columnSEIGAK2 = new global::System.Data.DataColumn("SEIGAK2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK2);
                this.columnSZEIGAK2 = new global::System.Data.DataColumn("SZEIGAK2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZEIGAK2);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNewListRow NewOrderNewListRow() {
                return ((OrderNewListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrderNewListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrderNewListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderNewListRowChanged != null)) {
                    this.OrderNewListRowChanged(this, new OrderNewListRowChangeEvent(((OrderNewListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderNewListRowChanging != null)) {
                    this.OrderNewListRowChanging(this, new OrderNewListRowChangeEvent(((OrderNewListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderNewListRowDeleted != null)) {
                    this.OrderNewListRowDeleted(this, new OrderNewListRowChangeEvent(((OrderNewListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderNewListRowDeleting != null)) {
                    this.OrderNewListRowDeleting(this, new OrderNewListRowChangeEvent(((OrderNewListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderNewListRow(OrderNewListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OrderDiffLion ds = new OrderDiffLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderNewListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderAmountDiffListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnBAITAIKBN;
            
            private global::System.Data.DataColumn columnBRANDCD;
            
            private global::System.Data.DataColumn columnBRANDNM;
            
            private global::System.Data.DataColumn columnKKNAMEKJ;
            
            private global::System.Data.DataColumn columnGYOMKBN;
            
            private global::System.Data.DataColumn columnGYOMKBNKJ;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnSZEIGAK;
            
            private global::System.Data.DataColumn columnSEIGAK2;
            
            private global::System.Data.DataColumn columnSZEIGAK2;
            
            private global::System.Data.DataColumn columnSEQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderAmountDiffListDataTable() {
                this.TableName = "OrderAmountDiffList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderAmountDiffListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderAmountDiffListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAIKBNColumn {
                get {
                    return this.columnBAITAIKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANDCDColumn {
                get {
                    return this.columnBRANDCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANDNMColumn {
                get {
                    return this.columnBRANDNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KKNAMEKJColumn {
                get {
                    return this.columnKKNAMEKJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYOMKBNColumn {
                get {
                    return this.columnGYOMKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYOMKBNKJColumn {
                get {
                    return this.columnGYOMKBNKJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZEIGAKColumn {
                get {
                    return this.columnSZEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAK2Column {
                get {
                    return this.columnSEIGAK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZEIGAK2Column {
                get {
                    return this.columnSZEIGAK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderAmountDiffListRow this[int index] {
                get {
                    return ((OrderAmountDiffListRow)(this.Rows[index]));
                }
            }
            
            public event OrderAmountDiffListRowChangeEventHandler OrderAmountDiffListRowChanging;
            
            public event OrderAmountDiffListRowChangeEventHandler OrderAmountDiffListRowChanged;
            
            public event OrderAmountDiffListRowChangeEventHandler OrderAmountDiffListRowDeleting;
            
            public event OrderAmountDiffListRowChangeEventHandler OrderAmountDiffListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderAmountDiffListRow(OrderAmountDiffListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderAmountDiffListRow AddOrderAmountDiffListRow(string JYUTNO, string JYMEINO, string URMEINO, string BAITAIKBN, string BRANDCD, string BRANDNM, string KKNAMEKJ, string GYOMKBN, string GYOMKBNKJ, int SEIGAK, int SZEIGAK, int SEIGAK2, int SZEIGAK2, string SEQ) {
                OrderAmountDiffListRow rowOrderAmountDiffListRow = ((OrderAmountDiffListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        BAITAIKBN,
                        BRANDCD,
                        BRANDNM,
                        KKNAMEKJ,
                        GYOMKBN,
                        GYOMKBNKJ,
                        SEIGAK,
                        SZEIGAK,
                        SEIGAK2,
                        SZEIGAK2,
                        SEQ};
                rowOrderAmountDiffListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrderAmountDiffListRow);
                return rowOrderAmountDiffListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrderAmountDiffListDataTable cln = ((OrderAmountDiffListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrderAmountDiffListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnBAITAIKBN = base.Columns["BAITAIKBN"];
                this.columnBRANDCD = base.Columns["BRANDCD"];
                this.columnBRANDNM = base.Columns["BRANDNM"];
                this.columnKKNAMEKJ = base.Columns["KKNAMEKJ"];
                this.columnGYOMKBN = base.Columns["GYOMKBN"];
                this.columnGYOMKBNKJ = base.Columns["GYOMKBNKJ"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnSZEIGAK = base.Columns["SZEIGAK"];
                this.columnSEIGAK2 = base.Columns["SEIGAK2"];
                this.columnSZEIGAK2 = base.Columns["SZEIGAK2"];
                this.columnSEQ = base.Columns["SEQ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnBAITAIKBN = new global::System.Data.DataColumn("BAITAIKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAIKBN);
                this.columnBRANDCD = new global::System.Data.DataColumn("BRANDCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANDCD);
                this.columnBRANDNM = new global::System.Data.DataColumn("BRANDNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANDNM);
                this.columnKKNAMEKJ = new global::System.Data.DataColumn("KKNAMEKJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKKNAMEKJ);
                this.columnGYOMKBN = new global::System.Data.DataColumn("GYOMKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYOMKBN);
                this.columnGYOMKBNKJ = new global::System.Data.DataColumn("GYOMKBNKJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYOMKBNKJ);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnSZEIGAK = new global::System.Data.DataColumn("SZEIGAK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZEIGAK);
                this.columnSEIGAK2 = new global::System.Data.DataColumn("SEIGAK2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK2);
                this.columnSZEIGAK2 = new global::System.Data.DataColumn("SZEIGAK2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZEIGAK2);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderAmountDiffListRow NewOrderAmountDiffListRow() {
                return ((OrderAmountDiffListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrderAmountDiffListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrderAmountDiffListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderAmountDiffListRowChanged != null)) {
                    this.OrderAmountDiffListRowChanged(this, new OrderAmountDiffListRowChangeEvent(((OrderAmountDiffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderAmountDiffListRowChanging != null)) {
                    this.OrderAmountDiffListRowChanging(this, new OrderAmountDiffListRowChangeEvent(((OrderAmountDiffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderAmountDiffListRowDeleted != null)) {
                    this.OrderAmountDiffListRowDeleted(this, new OrderAmountDiffListRowChangeEvent(((OrderAmountDiffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderAmountDiffListRowDeleting != null)) {
                    this.OrderAmountDiffListRowDeleting(this, new OrderAmountDiffListRowChangeEvent(((OrderAmountDiffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderAmountDiffListRow(OrderAmountDiffListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OrderDiffLion ds = new OrderDiffLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderAmountDiffListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderDiffListRow : global::System.Data.DataRow {
            
            private OrderDiffListDataTable tableOrderDiffList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderDiffListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderDiffList = ((OrderDiffListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableOrderDiffList.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableOrderDiffList.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableOrderDiffList.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KKNAMEKJ {
                get {
                    try {
                        return ((string)(this[this.tableOrderDiffList.KKNAMEKJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'KKNAMEKJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.KKNAMEKJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYOMKBN {
                get {
                    try {
                        return ((string)(this[this.tableOrderDiffList.GYOMKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'GYOMKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.GYOMKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYOMKBNKJ {
                get {
                    try {
                        return ((string)(this[this.tableOrderDiffList.GYOMKBNKJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'GYOMKBNKJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.GYOMKBNKJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIMKCD {
                get {
                    try {
                        return ((string)(this[this.tableOrderDiffList.HIMKCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'HIMKCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.HIMKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIMKNMKJ {
                get {
                    try {
                        return ((string)(this[this.tableOrderDiffList.HIMKNMKJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'HIMKNMKJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.HIMKNMKJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SEIGAK {
                get {
                    try {
                        return ((int)(this[this.tableOrderDiffList.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TORIGAK {
                get {
                    try {
                        return ((int)(this[this.tableOrderDiffList.TORIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'TORIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.TORIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SZEIGAK {
                get {
                    try {
                        return ((int)(this[this.tableOrderDiffList.SZEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'SZEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.SZEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEQ {
                get {
                    try {
                        return ((string)(this[this.tableOrderDiffList.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'SEQ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NEBIGAK {
                get {
                    try {
                        return ((int)(this[this.tableOrderDiffList.NEBIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderDiffList\' にある列 \'NEBIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderDiffList.NEBIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableOrderDiffList.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableOrderDiffList.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableOrderDiffList.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableOrderDiffList.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableOrderDiffList.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableOrderDiffList.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKKNAMEKJNull() {
                return this.IsNull(this.tableOrderDiffList.KKNAMEKJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKKNAMEKJNull() {
                this[this.tableOrderDiffList.KKNAMEKJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYOMKBNNull() {
                return this.IsNull(this.tableOrderDiffList.GYOMKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYOMKBNNull() {
                this[this.tableOrderDiffList.GYOMKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYOMKBNKJNull() {
                return this.IsNull(this.tableOrderDiffList.GYOMKBNKJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYOMKBNKJNull() {
                this[this.tableOrderDiffList.GYOMKBNKJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIMKCDNull() {
                return this.IsNull(this.tableOrderDiffList.HIMKCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIMKCDNull() {
                this[this.tableOrderDiffList.HIMKCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIMKNMKJNull() {
                return this.IsNull(this.tableOrderDiffList.HIMKNMKJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIMKNMKJNull() {
                this[this.tableOrderDiffList.HIMKNMKJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableOrderDiffList.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableOrderDiffList.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTORIGAKNull() {
                return this.IsNull(this.tableOrderDiffList.TORIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTORIGAKNull() {
                this[this.tableOrderDiffList.TORIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZEIGAKNull() {
                return this.IsNull(this.tableOrderDiffList.SZEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZEIGAKNull() {
                this[this.tableOrderDiffList.SZEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEQNull() {
                return this.IsNull(this.tableOrderDiffList.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEQNull() {
                this[this.tableOrderDiffList.SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNEBIGAKNull() {
                return this.IsNull(this.tableOrderDiffList.NEBIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNEBIGAKNull() {
                this[this.tableOrderDiffList.NEBIGAKColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderNewListRow : global::System.Data.DataRow {
            
            private OrderNewListDataTable tableOrderNewList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderNewListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderNewList = ((OrderNewListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAIKBN {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.BAITAIKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'BAITAIKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.BAITAIKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANDCD {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.BRANDCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'BRANDCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.BRANDCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANDNM {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.BRANDNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'BRANDNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.BRANDNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KKNAMEKJ {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.KKNAMEKJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'KKNAMEKJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.KKNAMEKJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYOMKBN {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.GYOMKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'GYOMKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.GYOMKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYOMKBNKJ {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.GYOMKBNKJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'GYOMKBNKJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.GYOMKBNKJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SEIGAK2 {
                get {
                    try {
                        return ((int)(this[this.tableOrderNewList.SEIGAK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'SEIGAK2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.SEIGAK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SZEIGAK2 {
                get {
                    try {
                        return ((int)(this[this.tableOrderNewList.SZEIGAK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'SZEIGAK2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.SZEIGAK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEQ {
                get {
                    try {
                        return ((string)(this[this.tableOrderNewList.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderNewList\' にある列 \'SEQ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderNewList.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableOrderNewList.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableOrderNewList.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableOrderNewList.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableOrderNewList.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableOrderNewList.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableOrderNewList.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAIKBNNull() {
                return this.IsNull(this.tableOrderNewList.BAITAIKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAIKBNNull() {
                this[this.tableOrderNewList.BAITAIKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANDCDNull() {
                return this.IsNull(this.tableOrderNewList.BRANDCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANDCDNull() {
                this[this.tableOrderNewList.BRANDCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANDNMNull() {
                return this.IsNull(this.tableOrderNewList.BRANDNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANDNMNull() {
                this[this.tableOrderNewList.BRANDNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKKNAMEKJNull() {
                return this.IsNull(this.tableOrderNewList.KKNAMEKJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKKNAMEKJNull() {
                this[this.tableOrderNewList.KKNAMEKJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYOMKBNNull() {
                return this.IsNull(this.tableOrderNewList.GYOMKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYOMKBNNull() {
                this[this.tableOrderNewList.GYOMKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYOMKBNKJNull() {
                return this.IsNull(this.tableOrderNewList.GYOMKBNKJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYOMKBNKJNull() {
                this[this.tableOrderNewList.GYOMKBNKJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAK2Null() {
                return this.IsNull(this.tableOrderNewList.SEIGAK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAK2Null() {
                this[this.tableOrderNewList.SEIGAK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZEIGAK2Null() {
                return this.IsNull(this.tableOrderNewList.SZEIGAK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZEIGAK2Null() {
                this[this.tableOrderNewList.SZEIGAK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEQNull() {
                return this.IsNull(this.tableOrderNewList.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEQNull() {
                this[this.tableOrderNewList.SEQColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderAmountDiffListRow : global::System.Data.DataRow {
            
            private OrderAmountDiffListDataTable tableOrderAmountDiffList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderAmountDiffListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderAmountDiffList = ((OrderAmountDiffListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAIKBN {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.BAITAIKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'BAITAIKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.BAITAIKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANDCD {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.BRANDCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'BRANDCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.BRANDCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANDNM {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.BRANDNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'BRANDNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.BRANDNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KKNAMEKJ {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.KKNAMEKJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'KKNAMEKJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.KKNAMEKJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYOMKBN {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.GYOMKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'GYOMKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.GYOMKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYOMKBNKJ {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.GYOMKBNKJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'GYOMKBNKJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.GYOMKBNKJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SEIGAK {
                get {
                    try {
                        return ((int)(this[this.tableOrderAmountDiffList.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SZEIGAK {
                get {
                    try {
                        return ((int)(this[this.tableOrderAmountDiffList.SZEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'SZEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.SZEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SEIGAK2 {
                get {
                    try {
                        return ((int)(this[this.tableOrderAmountDiffList.SEIGAK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'SEIGAK2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.SEIGAK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SZEIGAK2 {
                get {
                    try {
                        return ((int)(this[this.tableOrderAmountDiffList.SZEIGAK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'SZEIGAK2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.SZEIGAK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEQ {
                get {
                    try {
                        return ((string)(this[this.tableOrderAmountDiffList.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderAmountDiffList\' にある列 \'SEQ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderAmountDiffList.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableOrderAmountDiffList.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableOrderAmountDiffList.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableOrderAmountDiffList.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableOrderAmountDiffList.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableOrderAmountDiffList.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableOrderAmountDiffList.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAIKBNNull() {
                return this.IsNull(this.tableOrderAmountDiffList.BAITAIKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAIKBNNull() {
                this[this.tableOrderAmountDiffList.BAITAIKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANDCDNull() {
                return this.IsNull(this.tableOrderAmountDiffList.BRANDCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANDCDNull() {
                this[this.tableOrderAmountDiffList.BRANDCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANDNMNull() {
                return this.IsNull(this.tableOrderAmountDiffList.BRANDNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANDNMNull() {
                this[this.tableOrderAmountDiffList.BRANDNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKKNAMEKJNull() {
                return this.IsNull(this.tableOrderAmountDiffList.KKNAMEKJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKKNAMEKJNull() {
                this[this.tableOrderAmountDiffList.KKNAMEKJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYOMKBNNull() {
                return this.IsNull(this.tableOrderAmountDiffList.GYOMKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYOMKBNNull() {
                this[this.tableOrderAmountDiffList.GYOMKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYOMKBNKJNull() {
                return this.IsNull(this.tableOrderAmountDiffList.GYOMKBNKJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYOMKBNKJNull() {
                this[this.tableOrderAmountDiffList.GYOMKBNKJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableOrderAmountDiffList.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableOrderAmountDiffList.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZEIGAKNull() {
                return this.IsNull(this.tableOrderAmountDiffList.SZEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZEIGAKNull() {
                this[this.tableOrderAmountDiffList.SZEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAK2Null() {
                return this.IsNull(this.tableOrderAmountDiffList.SEIGAK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAK2Null() {
                this[this.tableOrderAmountDiffList.SEIGAK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZEIGAK2Null() {
                return this.IsNull(this.tableOrderAmountDiffList.SZEIGAK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZEIGAK2Null() {
                this[this.tableOrderAmountDiffList.SZEIGAK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEQNull() {
                return this.IsNull(this.tableOrderAmountDiffList.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEQNull() {
                this[this.tableOrderAmountDiffList.SEQColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderDiffListRowChangeEvent : global::System.EventArgs {
            
            private OrderDiffListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderDiffListRowChangeEvent(OrderDiffListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderDiffListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderNewListRowChangeEvent : global::System.EventArgs {
            
            private OrderNewListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNewListRowChangeEvent(OrderNewListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNewListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderAmountDiffListRowChangeEvent : global::System.EventArgs {
            
            private OrderAmountDiffListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderAmountDiffListRowChangeEvent(OrderAmountDiffListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderAmountDiffListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591