//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.5485
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Lion.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AddChgDsLion")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AddChgDsLion : global::System.Data.DataSet {
        
        private RrkTimStmpDataTable tableRrkTimStmp;
        
        private SeisakuAD1DataTable tableSeisakuAD1;
        
        private SeisakuAD2DataTable tableSeisakuAD2;
        
        private SeisakuDiffDataTable tableSeisakuDiff;
        
        private BaitaiAD1DataTable tableBaitaiAD1;
        
        private BaitaiAD2DataTable tableBaitaiAD2;
        
        private BaitaiDiffDataTable tableBaitaiDiff;
        
        private BaitaiDiffExternalDataTable tableBaitaiDiffExternal;
        
        private RrkTimStmpBaseDataTable tableRrkTimStmpBase;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AddChgDsLion() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected AddChgDsLion(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["RrkTimStmp"] != null)) {
                    base.Tables.Add(new RrkTimStmpDataTable(ds.Tables["RrkTimStmp"]));
                }
                if ((ds.Tables["SeisakuAD1"] != null)) {
                    base.Tables.Add(new SeisakuAD1DataTable(ds.Tables["SeisakuAD1"]));
                }
                if ((ds.Tables["SeisakuAD2"] != null)) {
                    base.Tables.Add(new SeisakuAD2DataTable(ds.Tables["SeisakuAD2"]));
                }
                if ((ds.Tables["SeisakuDiff"] != null)) {
                    base.Tables.Add(new SeisakuDiffDataTable(ds.Tables["SeisakuDiff"]));
                }
                if ((ds.Tables["BaitaiAD1"] != null)) {
                    base.Tables.Add(new BaitaiAD1DataTable(ds.Tables["BaitaiAD1"]));
                }
                if ((ds.Tables["BaitaiAD2"] != null)) {
                    base.Tables.Add(new BaitaiAD2DataTable(ds.Tables["BaitaiAD2"]));
                }
                if ((ds.Tables["BaitaiDiff"] != null)) {
                    base.Tables.Add(new BaitaiDiffDataTable(ds.Tables["BaitaiDiff"]));
                }
                if ((ds.Tables["BaitaiDiffExternal"] != null)) {
                    base.Tables.Add(new BaitaiDiffExternalDataTable(ds.Tables["BaitaiDiffExternal"]));
                }
                if ((ds.Tables["RrkTimStmpBase"] != null)) {
                    base.Tables.Add(new RrkTimStmpBaseDataTable(ds.Tables["RrkTimStmpBase"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RrkTimStmpDataTable RrkTimStmp {
            get {
                return this.tableRrkTimStmp;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SeisakuAD1DataTable SeisakuAD1 {
            get {
                return this.tableSeisakuAD1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SeisakuAD2DataTable SeisakuAD2 {
            get {
                return this.tableSeisakuAD2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SeisakuDiffDataTable SeisakuDiff {
            get {
                return this.tableSeisakuDiff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BaitaiAD1DataTable BaitaiAD1 {
            get {
                return this.tableBaitaiAD1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BaitaiAD2DataTable BaitaiAD2 {
            get {
                return this.tableBaitaiAD2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BaitaiDiffDataTable BaitaiDiff {
            get {
                return this.tableBaitaiDiff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BaitaiDiffExternalDataTable BaitaiDiffExternal {
            get {
                return this.tableBaitaiDiffExternal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RrkTimStmpBaseDataTable RrkTimStmpBase {
            get {
                return this.tableRrkTimStmpBase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            AddChgDsLion cln = ((AddChgDsLion)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RrkTimStmp"] != null)) {
                    base.Tables.Add(new RrkTimStmpDataTable(ds.Tables["RrkTimStmp"]));
                }
                if ((ds.Tables["SeisakuAD1"] != null)) {
                    base.Tables.Add(new SeisakuAD1DataTable(ds.Tables["SeisakuAD1"]));
                }
                if ((ds.Tables["SeisakuAD2"] != null)) {
                    base.Tables.Add(new SeisakuAD2DataTable(ds.Tables["SeisakuAD2"]));
                }
                if ((ds.Tables["SeisakuDiff"] != null)) {
                    base.Tables.Add(new SeisakuDiffDataTable(ds.Tables["SeisakuDiff"]));
                }
                if ((ds.Tables["BaitaiAD1"] != null)) {
                    base.Tables.Add(new BaitaiAD1DataTable(ds.Tables["BaitaiAD1"]));
                }
                if ((ds.Tables["BaitaiAD2"] != null)) {
                    base.Tables.Add(new BaitaiAD2DataTable(ds.Tables["BaitaiAD2"]));
                }
                if ((ds.Tables["BaitaiDiff"] != null)) {
                    base.Tables.Add(new BaitaiDiffDataTable(ds.Tables["BaitaiDiff"]));
                }
                if ((ds.Tables["BaitaiDiffExternal"] != null)) {
                    base.Tables.Add(new BaitaiDiffExternalDataTable(ds.Tables["BaitaiDiffExternal"]));
                }
                if ((ds.Tables["RrkTimStmpBase"] != null)) {
                    base.Tables.Add(new RrkTimStmpBaseDataTable(ds.Tables["RrkTimStmpBase"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRrkTimStmp = ((RrkTimStmpDataTable)(base.Tables["RrkTimStmp"]));
            if ((initTable == true)) {
                if ((this.tableRrkTimStmp != null)) {
                    this.tableRrkTimStmp.InitVars();
                }
            }
            this.tableSeisakuAD1 = ((SeisakuAD1DataTable)(base.Tables["SeisakuAD1"]));
            if ((initTable == true)) {
                if ((this.tableSeisakuAD1 != null)) {
                    this.tableSeisakuAD1.InitVars();
                }
            }
            this.tableSeisakuAD2 = ((SeisakuAD2DataTable)(base.Tables["SeisakuAD2"]));
            if ((initTable == true)) {
                if ((this.tableSeisakuAD2 != null)) {
                    this.tableSeisakuAD2.InitVars();
                }
            }
            this.tableSeisakuDiff = ((SeisakuDiffDataTable)(base.Tables["SeisakuDiff"]));
            if ((initTable == true)) {
                if ((this.tableSeisakuDiff != null)) {
                    this.tableSeisakuDiff.InitVars();
                }
            }
            this.tableBaitaiAD1 = ((BaitaiAD1DataTable)(base.Tables["BaitaiAD1"]));
            if ((initTable == true)) {
                if ((this.tableBaitaiAD1 != null)) {
                    this.tableBaitaiAD1.InitVars();
                }
            }
            this.tableBaitaiAD2 = ((BaitaiAD2DataTable)(base.Tables["BaitaiAD2"]));
            if ((initTable == true)) {
                if ((this.tableBaitaiAD2 != null)) {
                    this.tableBaitaiAD2.InitVars();
                }
            }
            this.tableBaitaiDiff = ((BaitaiDiffDataTable)(base.Tables["BaitaiDiff"]));
            if ((initTable == true)) {
                if ((this.tableBaitaiDiff != null)) {
                    this.tableBaitaiDiff.InitVars();
                }
            }
            this.tableBaitaiDiffExternal = ((BaitaiDiffExternalDataTable)(base.Tables["BaitaiDiffExternal"]));
            if ((initTable == true)) {
                if ((this.tableBaitaiDiffExternal != null)) {
                    this.tableBaitaiDiffExternal.InitVars();
                }
            }
            this.tableRrkTimStmpBase = ((RrkTimStmpBaseDataTable)(base.Tables["RrkTimStmpBase"]));
            if ((initTable == true)) {
                if ((this.tableRrkTimStmpBase != null)) {
                    this.tableRrkTimStmpBase.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "AddChgDsLion";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AddChgDsLion.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRrkTimStmp = new RrkTimStmpDataTable();
            base.Tables.Add(this.tableRrkTimStmp);
            this.tableSeisakuAD1 = new SeisakuAD1DataTable();
            base.Tables.Add(this.tableSeisakuAD1);
            this.tableSeisakuAD2 = new SeisakuAD2DataTable();
            base.Tables.Add(this.tableSeisakuAD2);
            this.tableSeisakuDiff = new SeisakuDiffDataTable();
            base.Tables.Add(this.tableSeisakuDiff);
            this.tableBaitaiAD1 = new BaitaiAD1DataTable();
            base.Tables.Add(this.tableBaitaiAD1);
            this.tableBaitaiAD2 = new BaitaiAD2DataTable();
            base.Tables.Add(this.tableBaitaiAD2);
            this.tableBaitaiDiff = new BaitaiDiffDataTable();
            base.Tables.Add(this.tableBaitaiDiff);
            this.tableBaitaiDiffExternal = new BaitaiDiffExternalDataTable();
            base.Tables.Add(this.tableBaitaiDiffExternal);
            this.tableRrkTimStmpBase = new RrkTimStmpBaseDataTable();
            base.Tables.Add(this.tableRrkTimStmpBase);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRrkTimStmp() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSeisakuAD1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSeisakuAD2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSeisakuDiff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBaitaiAD1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBaitaiAD2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBaitaiDiff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBaitaiDiffExternal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRrkTimStmpBase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AddChgDsLion ds = new AddChgDsLion();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void RrkTimStmpRowChangeEventHandler(object sender, RrkTimStmpRowChangeEvent e);
        
        public delegate void SeisakuAD1RowChangeEventHandler(object sender, SeisakuAD1RowChangeEvent e);
        
        public delegate void SeisakuAD2RowChangeEventHandler(object sender, SeisakuAD2RowChangeEvent e);
        
        public delegate void SeisakuDiffRowChangeEventHandler(object sender, SeisakuDiffRowChangeEvent e);
        
        public delegate void BaitaiAD1RowChangeEventHandler(object sender, BaitaiAD1RowChangeEvent e);
        
        public delegate void BaitaiAD2RowChangeEventHandler(object sender, BaitaiAD2RowChangeEvent e);
        
        public delegate void BaitaiDiffRowChangeEventHandler(object sender, BaitaiDiffRowChangeEvent e);
        
        public delegate void BaitaiDiffExternalRowChangeEventHandler(object sender, BaitaiDiffExternalRowChangeEvent e);
        
        public delegate void RrkTimStmpBaseRowChangeEventHandler(object sender, RrkTimStmpBaseRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RrkTimStmpDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRRKTIMSTMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpDataTable() {
                this.TableName = "RrkTimStmp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RrkTimStmpDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RrkTimStmpDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RRKTIMSTMPColumn {
                get {
                    return this.columnRRKTIMSTMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpRow this[int index] {
                get {
                    return ((RrkTimStmpRow)(this.Rows[index]));
                }
            }
            
            public event RrkTimStmpRowChangeEventHandler RrkTimStmpRowChanging;
            
            public event RrkTimStmpRowChangeEventHandler RrkTimStmpRowChanged;
            
            public event RrkTimStmpRowChangeEventHandler RrkTimStmpRowDeleting;
            
            public event RrkTimStmpRowChangeEventHandler RrkTimStmpRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRrkTimStmpRow(RrkTimStmpRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpRow AddRrkTimStmpRow(string RRKTIMSTMP) {
                RrkTimStmpRow rowRrkTimStmpRow = ((RrkTimStmpRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RRKTIMSTMP};
                rowRrkTimStmpRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRrkTimStmpRow);
                return rowRrkTimStmpRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RrkTimStmpDataTable cln = ((RrkTimStmpDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RrkTimStmpDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRRKTIMSTMP = base.Columns["RRKTIMSTMP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRRKTIMSTMP = new global::System.Data.DataColumn("RRKTIMSTMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRRKTIMSTMP);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpRow NewRrkTimStmpRow() {
                return ((RrkTimStmpRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RrkTimStmpRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RrkTimStmpRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RrkTimStmpRowChanged != null)) {
                    this.RrkTimStmpRowChanged(this, new RrkTimStmpRowChangeEvent(((RrkTimStmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RrkTimStmpRowChanging != null)) {
                    this.RrkTimStmpRowChanging(this, new RrkTimStmpRowChangeEvent(((RrkTimStmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RrkTimStmpRowDeleted != null)) {
                    this.RrkTimStmpRowDeleted(this, new RrkTimStmpRowChangeEvent(((RrkTimStmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RrkTimStmpRowDeleting != null)) {
                    this.RrkTimStmpRowDeleting(this, new RrkTimStmpRowChangeEvent(((RrkTimStmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRrkTimStmpRow(RrkTimStmpRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AddChgDsLion ds = new AddChgDsLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RrkTimStmpDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SeisakuAD1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnBAITAIKBN;
            
            private global::System.Data.DataColumn columnBAITAINM;
            
            private global::System.Data.DataColumn columnTAXAMT;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnKENNM;
            
            private global::System.Data.DataColumn columnBRDNM;
            
            private global::System.Data.DataColumn columnBRDCD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD1DataTable() {
                this.TableName = "SeisakuAD1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SeisakuAD1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SeisakuAD1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAIKBNColumn {
                get {
                    return this.columnBAITAIKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAINMColumn {
                get {
                    return this.columnBAITAINM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXAMTColumn {
                get {
                    return this.columnTAXAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KENNMColumn {
                get {
                    return this.columnKENNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRDNMColumn {
                get {
                    return this.columnBRDNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRDCDColumn {
                get {
                    return this.columnBRDCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD1Row this[int index] {
                get {
                    return ((SeisakuAD1Row)(this.Rows[index]));
                }
            }
            
            public event SeisakuAD1RowChangeEventHandler SeisakuAD1RowChanging;
            
            public event SeisakuAD1RowChangeEventHandler SeisakuAD1RowChanged;
            
            public event SeisakuAD1RowChangeEventHandler SeisakuAD1RowDeleting;
            
            public event SeisakuAD1RowChangeEventHandler SeisakuAD1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSeisakuAD1Row(SeisakuAD1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD1Row AddSeisakuAD1Row(string JYUTNO, string JYMEINO, string URMEINO, string BAITAIKBN, string BAITAINM, decimal TAXAMT, double SEIGAK, string KENNM, string BRDNM, string BRDCD) {
                SeisakuAD1Row rowSeisakuAD1Row = ((SeisakuAD1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        BAITAIKBN,
                        BAITAINM,
                        TAXAMT,
                        SEIGAK,
                        KENNM,
                        BRDNM,
                        BRDCD};
                rowSeisakuAD1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSeisakuAD1Row);
                return rowSeisakuAD1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SeisakuAD1DataTable cln = ((SeisakuAD1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SeisakuAD1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnBAITAIKBN = base.Columns["BAITAIKBN"];
                this.columnBAITAINM = base.Columns["BAITAINM"];
                this.columnTAXAMT = base.Columns["TAXAMT"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnKENNM = base.Columns["KENNM"];
                this.columnBRDNM = base.Columns["BRDNM"];
                this.columnBRDCD = base.Columns["BRDCD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnBAITAIKBN = new global::System.Data.DataColumn("BAITAIKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAIKBN);
                this.columnBAITAINM = new global::System.Data.DataColumn("BAITAINM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAINM);
                this.columnTAXAMT = new global::System.Data.DataColumn("TAXAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXAMT);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnKENNM = new global::System.Data.DataColumn("KENNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKENNM);
                this.columnBRDNM = new global::System.Data.DataColumn("BRDNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRDNM);
                this.columnBRDCD = new global::System.Data.DataColumn("BRDCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRDCD);
                this.columnTAXAMT.DefaultValue = ((decimal)(-1m));
                this.columnSEIGAK.DefaultValue = ((double)(-1));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD1Row NewSeisakuAD1Row() {
                return ((SeisakuAD1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SeisakuAD1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SeisakuAD1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SeisakuAD1RowChanged != null)) {
                    this.SeisakuAD1RowChanged(this, new SeisakuAD1RowChangeEvent(((SeisakuAD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SeisakuAD1RowChanging != null)) {
                    this.SeisakuAD1RowChanging(this, new SeisakuAD1RowChangeEvent(((SeisakuAD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SeisakuAD1RowDeleted != null)) {
                    this.SeisakuAD1RowDeleted(this, new SeisakuAD1RowChangeEvent(((SeisakuAD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SeisakuAD1RowDeleting != null)) {
                    this.SeisakuAD1RowDeleting(this, new SeisakuAD1RowChangeEvent(((SeisakuAD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSeisakuAD1Row(SeisakuAD1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AddChgDsLion ds = new AddChgDsLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SeisakuAD1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SeisakuAD2DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnBAITAIKBN;
            
            private global::System.Data.DataColumn columnBAITAINM;
            
            private global::System.Data.DataColumn columnBRDCD;
            
            private global::System.Data.DataColumn columnBRDNM;
            
            private global::System.Data.DataColumn columnKENNM;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnTAXAMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD2DataTable() {
                this.TableName = "SeisakuAD2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SeisakuAD2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SeisakuAD2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAIKBNColumn {
                get {
                    return this.columnBAITAIKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAINMColumn {
                get {
                    return this.columnBAITAINM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRDCDColumn {
                get {
                    return this.columnBRDCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRDNMColumn {
                get {
                    return this.columnBRDNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KENNMColumn {
                get {
                    return this.columnKENNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXAMTColumn {
                get {
                    return this.columnTAXAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD2Row this[int index] {
                get {
                    return ((SeisakuAD2Row)(this.Rows[index]));
                }
            }
            
            public event SeisakuAD2RowChangeEventHandler SeisakuAD2RowChanging;
            
            public event SeisakuAD2RowChangeEventHandler SeisakuAD2RowChanged;
            
            public event SeisakuAD2RowChangeEventHandler SeisakuAD2RowDeleting;
            
            public event SeisakuAD2RowChangeEventHandler SeisakuAD2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSeisakuAD2Row(SeisakuAD2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD2Row AddSeisakuAD2Row(string JYUTNO, string JYMEINO, string URMEINO, string BAITAIKBN, string BAITAINM, string BRDCD, string BRDNM, string KENNM, double SEIGAK, double TAXAMT) {
                SeisakuAD2Row rowSeisakuAD2Row = ((SeisakuAD2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        BAITAIKBN,
                        BAITAINM,
                        BRDCD,
                        BRDNM,
                        KENNM,
                        SEIGAK,
                        TAXAMT};
                rowSeisakuAD2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSeisakuAD2Row);
                return rowSeisakuAD2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SeisakuAD2DataTable cln = ((SeisakuAD2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SeisakuAD2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnBAITAIKBN = base.Columns["BAITAIKBN"];
                this.columnBAITAINM = base.Columns["BAITAINM"];
                this.columnBRDCD = base.Columns["BRDCD"];
                this.columnBRDNM = base.Columns["BRDNM"];
                this.columnKENNM = base.Columns["KENNM"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnTAXAMT = base.Columns["TAXAMT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnBAITAIKBN = new global::System.Data.DataColumn("BAITAIKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAIKBN);
                this.columnBAITAINM = new global::System.Data.DataColumn("BAITAINM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAINM);
                this.columnBRDCD = new global::System.Data.DataColumn("BRDCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRDCD);
                this.columnBRDNM = new global::System.Data.DataColumn("BRDNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRDNM);
                this.columnKENNM = new global::System.Data.DataColumn("KENNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKENNM);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnTAXAMT = new global::System.Data.DataColumn("TAXAMT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXAMT);
                this.columnSEIGAK.DefaultValue = ((double)(-1));
                this.columnTAXAMT.DefaultValue = ((double)(-1));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD2Row NewSeisakuAD2Row() {
                return ((SeisakuAD2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SeisakuAD2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SeisakuAD2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SeisakuAD2RowChanged != null)) {
                    this.SeisakuAD2RowChanged(this, new SeisakuAD2RowChangeEvent(((SeisakuAD2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SeisakuAD2RowChanging != null)) {
                    this.SeisakuAD2RowChanging(this, new SeisakuAD2RowChangeEvent(((SeisakuAD2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SeisakuAD2RowDeleted != null)) {
                    this.SeisakuAD2RowDeleted(this, new SeisakuAD2RowChangeEvent(((SeisakuAD2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SeisakuAD2RowDeleting != null)) {
                    this.SeisakuAD2RowDeleting(this, new SeisakuAD2RowChangeEvent(((SeisakuAD2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSeisakuAD2Row(SeisakuAD2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AddChgDsLion ds = new AddChgDsLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SeisakuAD2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SeisakuDiffDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnBAITAIKBN;
            
            private global::System.Data.DataColumn columnBAITAINM;
            
            private global::System.Data.DataColumn columnBRDCD;
            
            private global::System.Data.DataColumn columnBRDNM;
            
            private global::System.Data.DataColumn columnKENNM;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnTAXAMT;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnCHGPNT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuDiffDataTable() {
                this.TableName = "SeisakuDiff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SeisakuDiffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SeisakuDiffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAIKBNColumn {
                get {
                    return this.columnBAITAIKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAINMColumn {
                get {
                    return this.columnBAITAINM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRDCDColumn {
                get {
                    return this.columnBRDCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRDNMColumn {
                get {
                    return this.columnBRDNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KENNMColumn {
                get {
                    return this.columnKENNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXAMTColumn {
                get {
                    return this.columnTAXAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHGPNTColumn {
                get {
                    return this.columnCHGPNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuDiffRow this[int index] {
                get {
                    return ((SeisakuDiffRow)(this.Rows[index]));
                }
            }
            
            public event SeisakuDiffRowChangeEventHandler SeisakuDiffRowChanging;
            
            public event SeisakuDiffRowChangeEventHandler SeisakuDiffRowChanged;
            
            public event SeisakuDiffRowChangeEventHandler SeisakuDiffRowDeleting;
            
            public event SeisakuDiffRowChangeEventHandler SeisakuDiffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSeisakuDiffRow(SeisakuDiffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuDiffRow AddSeisakuDiffRow(string JYUTNO, string JYMEINO, string URMEINO, string BAITAIKBN, string BAITAINM, string BRDCD, string BRDNM, string KENNM, double SEIGAK, double TAXAMT, string SEQ, string CHGPNT) {
                SeisakuDiffRow rowSeisakuDiffRow = ((SeisakuDiffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        BAITAIKBN,
                        BAITAINM,
                        BRDCD,
                        BRDNM,
                        KENNM,
                        SEIGAK,
                        TAXAMT,
                        SEQ,
                        CHGPNT};
                rowSeisakuDiffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSeisakuDiffRow);
                return rowSeisakuDiffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SeisakuDiffDataTable cln = ((SeisakuDiffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SeisakuDiffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnBAITAIKBN = base.Columns["BAITAIKBN"];
                this.columnBAITAINM = base.Columns["BAITAINM"];
                this.columnBRDCD = base.Columns["BRDCD"];
                this.columnBRDNM = base.Columns["BRDNM"];
                this.columnKENNM = base.Columns["KENNM"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnTAXAMT = base.Columns["TAXAMT"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnCHGPNT = base.Columns["CHGPNT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnBAITAIKBN = new global::System.Data.DataColumn("BAITAIKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAIKBN);
                this.columnBAITAINM = new global::System.Data.DataColumn("BAITAINM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAINM);
                this.columnBRDCD = new global::System.Data.DataColumn("BRDCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRDCD);
                this.columnBRDNM = new global::System.Data.DataColumn("BRDNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRDNM);
                this.columnKENNM = new global::System.Data.DataColumn("KENNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKENNM);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnTAXAMT = new global::System.Data.DataColumn("TAXAMT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXAMT);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnCHGPNT = new global::System.Data.DataColumn("CHGPNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHGPNT);
                this.columnSEIGAK.DefaultValue = ((double)(-1));
                this.columnTAXAMT.DefaultValue = ((double)(-1));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuDiffRow NewSeisakuDiffRow() {
                return ((SeisakuDiffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SeisakuDiffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SeisakuDiffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SeisakuDiffRowChanged != null)) {
                    this.SeisakuDiffRowChanged(this, new SeisakuDiffRowChangeEvent(((SeisakuDiffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SeisakuDiffRowChanging != null)) {
                    this.SeisakuDiffRowChanging(this, new SeisakuDiffRowChangeEvent(((SeisakuDiffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SeisakuDiffRowDeleted != null)) {
                    this.SeisakuDiffRowDeleted(this, new SeisakuDiffRowChangeEvent(((SeisakuDiffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SeisakuDiffRowDeleting != null)) {
                    this.SeisakuDiffRowDeleting(this, new SeisakuDiffRowChangeEvent(((SeisakuDiffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSeisakuDiffRow(SeisakuDiffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AddChgDsLion ds = new AddChgDsLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SeisakuDiffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BaitaiAD1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnRENBN;
            
            private global::System.Data.DataColumn columnBAITAIKBN;
            
            private global::System.Data.DataColumn columnBAITAINM;
            
            private global::System.Data.DataColumn columnKENNM;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnBYOSU;
            
            private global::System.Data.DataColumn columnHONSU;
            
            private global::System.Data.DataColumn columnSPACE;
            
            private global::System.Data.DataColumn columnTERM;
            
            private global::System.Data.DataColumn columnADDCHGKBN;
            
            private global::System.Data.DataColumn columnKYKSHCD;
            
            private global::System.Data.DataColumn columnKYKCD;
            
            private global::System.Data.DataColumn columnKYKNM;
            
            private global::System.Data.DataColumn columnKEISAIBI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD1DataTable() {
                this.TableName = "BaitaiAD1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaitaiAD1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BaitaiAD1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENBNColumn {
                get {
                    return this.columnRENBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAIKBNColumn {
                get {
                    return this.columnBAITAIKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAINMColumn {
                get {
                    return this.columnBAITAINM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KENNMColumn {
                get {
                    return this.columnKENNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BYOSUColumn {
                get {
                    return this.columnBYOSU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HONSUColumn {
                get {
                    return this.columnHONSU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPACEColumn {
                get {
                    return this.columnSPACE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TERMColumn {
                get {
                    return this.columnTERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDCHGKBNColumn {
                get {
                    return this.columnADDCHGKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYKSHCDColumn {
                get {
                    return this.columnKYKSHCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYKCDColumn {
                get {
                    return this.columnKYKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYKNMColumn {
                get {
                    return this.columnKYKNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEISAIBIColumn {
                get {
                    return this.columnKEISAIBI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD1Row this[int index] {
                get {
                    return ((BaitaiAD1Row)(this.Rows[index]));
                }
            }
            
            public event BaitaiAD1RowChangeEventHandler BaitaiAD1RowChanging;
            
            public event BaitaiAD1RowChangeEventHandler BaitaiAD1RowChanged;
            
            public event BaitaiAD1RowChangeEventHandler BaitaiAD1RowDeleting;
            
            public event BaitaiAD1RowChangeEventHandler BaitaiAD1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBaitaiAD1Row(BaitaiAD1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD1Row AddBaitaiAD1Row(
                        string JYUTNO, 
                        string JYMEINO, 
                        string URMEINO, 
                        string RENBN, 
                        string BAITAIKBN, 
                        string BAITAINM, 
                        string KENNM, 
                        double SEIGAK, 
                        int BYOSU, 
                        int HONSU, 
                        string SPACE, 
                        string TERM, 
                        string ADDCHGKBN, 
                        string KYKSHCD, 
                        string KYKCD, 
                        string KYKNM, 
                        string KEISAIBI) {
                BaitaiAD1Row rowBaitaiAD1Row = ((BaitaiAD1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        RENBN,
                        BAITAIKBN,
                        BAITAINM,
                        KENNM,
                        SEIGAK,
                        BYOSU,
                        HONSU,
                        SPACE,
                        TERM,
                        ADDCHGKBN,
                        KYKSHCD,
                        KYKCD,
                        KYKNM,
                        KEISAIBI};
                rowBaitaiAD1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowBaitaiAD1Row);
                return rowBaitaiAD1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BaitaiAD1DataTable cln = ((BaitaiAD1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BaitaiAD1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnRENBN = base.Columns["RENBN"];
                this.columnBAITAIKBN = base.Columns["BAITAIKBN"];
                this.columnBAITAINM = base.Columns["BAITAINM"];
                this.columnKENNM = base.Columns["KENNM"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnBYOSU = base.Columns["BYOSU"];
                this.columnHONSU = base.Columns["HONSU"];
                this.columnSPACE = base.Columns["SPACE"];
                this.columnTERM = base.Columns["TERM"];
                this.columnADDCHGKBN = base.Columns["ADDCHGKBN"];
                this.columnKYKSHCD = base.Columns["KYKSHCD"];
                this.columnKYKCD = base.Columns["KYKCD"];
                this.columnKYKNM = base.Columns["KYKNM"];
                this.columnKEISAIBI = base.Columns["KEISAIBI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnRENBN = new global::System.Data.DataColumn("RENBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENBN);
                this.columnBAITAIKBN = new global::System.Data.DataColumn("BAITAIKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAIKBN);
                this.columnBAITAINM = new global::System.Data.DataColumn("BAITAINM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAINM);
                this.columnKENNM = new global::System.Data.DataColumn("KENNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKENNM);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnBYOSU = new global::System.Data.DataColumn("BYOSU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBYOSU);
                this.columnHONSU = new global::System.Data.DataColumn("HONSU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHONSU);
                this.columnSPACE = new global::System.Data.DataColumn("SPACE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPACE);
                this.columnTERM = new global::System.Data.DataColumn("TERM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERM);
                this.columnADDCHGKBN = new global::System.Data.DataColumn("ADDCHGKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDCHGKBN);
                this.columnKYKSHCD = new global::System.Data.DataColumn("KYKSHCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYKSHCD);
                this.columnKYKCD = new global::System.Data.DataColumn("KYKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYKCD);
                this.columnKYKNM = new global::System.Data.DataColumn("KYKNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYKNM);
                this.columnKEISAIBI = new global::System.Data.DataColumn("KEISAIBI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEISAIBI);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD1Row NewBaitaiAD1Row() {
                return ((BaitaiAD1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BaitaiAD1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BaitaiAD1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BaitaiAD1RowChanged != null)) {
                    this.BaitaiAD1RowChanged(this, new BaitaiAD1RowChangeEvent(((BaitaiAD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BaitaiAD1RowChanging != null)) {
                    this.BaitaiAD1RowChanging(this, new BaitaiAD1RowChangeEvent(((BaitaiAD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BaitaiAD1RowDeleted != null)) {
                    this.BaitaiAD1RowDeleted(this, new BaitaiAD1RowChangeEvent(((BaitaiAD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BaitaiAD1RowDeleting != null)) {
                    this.BaitaiAD1RowDeleting(this, new BaitaiAD1RowChangeEvent(((BaitaiAD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBaitaiAD1Row(BaitaiAD1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AddChgDsLion ds = new AddChgDsLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BaitaiAD1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BaitaiAD2DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnRENBN;
            
            private global::System.Data.DataColumn columnBAITAIKBN;
            
            private global::System.Data.DataColumn columnBAITAINM;
            
            private global::System.Data.DataColumn columnKENNM;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnBYOSU;
            
            private global::System.Data.DataColumn columnHONSU;
            
            private global::System.Data.DataColumn columnSPACE;
            
            private global::System.Data.DataColumn columnTERM;
            
            private global::System.Data.DataColumn columnADDCHGKBN;
            
            private global::System.Data.DataColumn columnKYKSHCD;
            
            private global::System.Data.DataColumn columnKYKCD;
            
            private global::System.Data.DataColumn columnKYKNM;
            
            private global::System.Data.DataColumn columnKEISAIBI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD2DataTable() {
                this.TableName = "BaitaiAD2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaitaiAD2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BaitaiAD2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENBNColumn {
                get {
                    return this.columnRENBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAIKBNColumn {
                get {
                    return this.columnBAITAIKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAINMColumn {
                get {
                    return this.columnBAITAINM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KENNMColumn {
                get {
                    return this.columnKENNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BYOSUColumn {
                get {
                    return this.columnBYOSU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HONSUColumn {
                get {
                    return this.columnHONSU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPACEColumn {
                get {
                    return this.columnSPACE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TERMColumn {
                get {
                    return this.columnTERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDCHGKBNColumn {
                get {
                    return this.columnADDCHGKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYKSHCDColumn {
                get {
                    return this.columnKYKSHCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYKCDColumn {
                get {
                    return this.columnKYKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYKNMColumn {
                get {
                    return this.columnKYKNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEISAIBIColumn {
                get {
                    return this.columnKEISAIBI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD2Row this[int index] {
                get {
                    return ((BaitaiAD2Row)(this.Rows[index]));
                }
            }
            
            public event BaitaiAD2RowChangeEventHandler BaitaiAD2RowChanging;
            
            public event BaitaiAD2RowChangeEventHandler BaitaiAD2RowChanged;
            
            public event BaitaiAD2RowChangeEventHandler BaitaiAD2RowDeleting;
            
            public event BaitaiAD2RowChangeEventHandler BaitaiAD2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBaitaiAD2Row(BaitaiAD2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD2Row AddBaitaiAD2Row(
                        string JYUTNO, 
                        string JYMEINO, 
                        string URMEINO, 
                        string RENBN, 
                        string BAITAIKBN, 
                        string BAITAINM, 
                        string KENNM, 
                        double SEIGAK, 
                        int BYOSU, 
                        int HONSU, 
                        string SPACE, 
                        string TERM, 
                        string ADDCHGKBN, 
                        string KYKSHCD, 
                        string KYKCD, 
                        string KYKNM, 
                        string KEISAIBI) {
                BaitaiAD2Row rowBaitaiAD2Row = ((BaitaiAD2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        RENBN,
                        BAITAIKBN,
                        BAITAINM,
                        KENNM,
                        SEIGAK,
                        BYOSU,
                        HONSU,
                        SPACE,
                        TERM,
                        ADDCHGKBN,
                        KYKSHCD,
                        KYKCD,
                        KYKNM,
                        KEISAIBI};
                rowBaitaiAD2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowBaitaiAD2Row);
                return rowBaitaiAD2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BaitaiAD2DataTable cln = ((BaitaiAD2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BaitaiAD2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnRENBN = base.Columns["RENBN"];
                this.columnBAITAIKBN = base.Columns["BAITAIKBN"];
                this.columnBAITAINM = base.Columns["BAITAINM"];
                this.columnKENNM = base.Columns["KENNM"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnBYOSU = base.Columns["BYOSU"];
                this.columnHONSU = base.Columns["HONSU"];
                this.columnSPACE = base.Columns["SPACE"];
                this.columnTERM = base.Columns["TERM"];
                this.columnADDCHGKBN = base.Columns["ADDCHGKBN"];
                this.columnKYKSHCD = base.Columns["KYKSHCD"];
                this.columnKYKCD = base.Columns["KYKCD"];
                this.columnKYKNM = base.Columns["KYKNM"];
                this.columnKEISAIBI = base.Columns["KEISAIBI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnRENBN = new global::System.Data.DataColumn("RENBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENBN);
                this.columnBAITAIKBN = new global::System.Data.DataColumn("BAITAIKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAIKBN);
                this.columnBAITAINM = new global::System.Data.DataColumn("BAITAINM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAINM);
                this.columnKENNM = new global::System.Data.DataColumn("KENNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKENNM);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnBYOSU = new global::System.Data.DataColumn("BYOSU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBYOSU);
                this.columnHONSU = new global::System.Data.DataColumn("HONSU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHONSU);
                this.columnSPACE = new global::System.Data.DataColumn("SPACE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPACE);
                this.columnTERM = new global::System.Data.DataColumn("TERM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERM);
                this.columnADDCHGKBN = new global::System.Data.DataColumn("ADDCHGKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDCHGKBN);
                this.columnKYKSHCD = new global::System.Data.DataColumn("KYKSHCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYKSHCD);
                this.columnKYKCD = new global::System.Data.DataColumn("KYKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYKCD);
                this.columnKYKNM = new global::System.Data.DataColumn("KYKNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYKNM);
                this.columnKEISAIBI = new global::System.Data.DataColumn("KEISAIBI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEISAIBI);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD2Row NewBaitaiAD2Row() {
                return ((BaitaiAD2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BaitaiAD2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BaitaiAD2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BaitaiAD2RowChanged != null)) {
                    this.BaitaiAD2RowChanged(this, new BaitaiAD2RowChangeEvent(((BaitaiAD2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BaitaiAD2RowChanging != null)) {
                    this.BaitaiAD2RowChanging(this, new BaitaiAD2RowChangeEvent(((BaitaiAD2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BaitaiAD2RowDeleted != null)) {
                    this.BaitaiAD2RowDeleted(this, new BaitaiAD2RowChangeEvent(((BaitaiAD2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BaitaiAD2RowDeleting != null)) {
                    this.BaitaiAD2RowDeleting(this, new BaitaiAD2RowChangeEvent(((BaitaiAD2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBaitaiAD2Row(BaitaiAD2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AddChgDsLion ds = new AddChgDsLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BaitaiAD2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BaitaiDiffDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnADDCHGKBN;
            
            private global::System.Data.DataColumn columnADX;
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnRENBN;
            
            private global::System.Data.DataColumn columnBAITAIKBN;
            
            private global::System.Data.DataColumn columnBAITAINM;
            
            private global::System.Data.DataColumn columnKENNM;
            
            private global::System.Data.DataColumn columnSEIGAK;
            
            private global::System.Data.DataColumn columnBYOSU;
            
            private global::System.Data.DataColumn columnHONSU;
            
            private global::System.Data.DataColumn columnSPACE;
            
            private global::System.Data.DataColumn columnTERM;
            
            private global::System.Data.DataColumn columnKYKSHCD;
            
            private global::System.Data.DataColumn columnKYKCD;
            
            private global::System.Data.DataColumn columnKYKNM;
            
            private global::System.Data.DataColumn columnKEISAIBI;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnORDERSEQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffDataTable() {
                this.TableName = "BaitaiDiff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaitaiDiffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BaitaiDiffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDCHGKBNColumn {
                get {
                    return this.columnADDCHGKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADXColumn {
                get {
                    return this.columnADX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENBNColumn {
                get {
                    return this.columnRENBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAIKBNColumn {
                get {
                    return this.columnBAITAIKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAINMColumn {
                get {
                    return this.columnBAITAINM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KENNMColumn {
                get {
                    return this.columnKENNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEIGAKColumn {
                get {
                    return this.columnSEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BYOSUColumn {
                get {
                    return this.columnBYOSU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HONSUColumn {
                get {
                    return this.columnHONSU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPACEColumn {
                get {
                    return this.columnSPACE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TERMColumn {
                get {
                    return this.columnTERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYKSHCDColumn {
                get {
                    return this.columnKYKSHCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYKCDColumn {
                get {
                    return this.columnKYKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYKNMColumn {
                get {
                    return this.columnKYKNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEISAIBIColumn {
                get {
                    return this.columnKEISAIBI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDERSEQColumn {
                get {
                    return this.columnORDERSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffRow this[int index] {
                get {
                    return ((BaitaiDiffRow)(this.Rows[index]));
                }
            }
            
            public event BaitaiDiffRowChangeEventHandler BaitaiDiffRowChanging;
            
            public event BaitaiDiffRowChangeEventHandler BaitaiDiffRowChanged;
            
            public event BaitaiDiffRowChangeEventHandler BaitaiDiffRowDeleting;
            
            public event BaitaiDiffRowChangeEventHandler BaitaiDiffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBaitaiDiffRow(BaitaiDiffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffRow AddBaitaiDiffRow(
                        string ADDCHGKBN, 
                        string ADX, 
                        string JYUTNO, 
                        string JYMEINO, 
                        string URMEINO, 
                        string RENBN, 
                        string BAITAIKBN, 
                        string BAITAINM, 
                        string KENNM, 
                        double SEIGAK, 
                        int BYOSU, 
                        int HONSU, 
                        string SPACE, 
                        string TERM, 
                        string KYKSHCD, 
                        string KYKCD, 
                        string KYKNM, 
                        string KEISAIBI, 
                        string SEQ, 
                        string ORDERSEQ) {
                BaitaiDiffRow rowBaitaiDiffRow = ((BaitaiDiffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ADDCHGKBN,
                        ADX,
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        RENBN,
                        BAITAIKBN,
                        BAITAINM,
                        KENNM,
                        SEIGAK,
                        BYOSU,
                        HONSU,
                        SPACE,
                        TERM,
                        KYKSHCD,
                        KYKCD,
                        KYKNM,
                        KEISAIBI,
                        SEQ,
                        ORDERSEQ};
                rowBaitaiDiffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBaitaiDiffRow);
                return rowBaitaiDiffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BaitaiDiffDataTable cln = ((BaitaiDiffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BaitaiDiffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnADDCHGKBN = base.Columns["ADDCHGKBN"];
                this.columnADX = base.Columns["ADX"];
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnRENBN = base.Columns["RENBN"];
                this.columnBAITAIKBN = base.Columns["BAITAIKBN"];
                this.columnBAITAINM = base.Columns["BAITAINM"];
                this.columnKENNM = base.Columns["KENNM"];
                this.columnSEIGAK = base.Columns["SEIGAK"];
                this.columnBYOSU = base.Columns["BYOSU"];
                this.columnHONSU = base.Columns["HONSU"];
                this.columnSPACE = base.Columns["SPACE"];
                this.columnTERM = base.Columns["TERM"];
                this.columnKYKSHCD = base.Columns["KYKSHCD"];
                this.columnKYKCD = base.Columns["KYKCD"];
                this.columnKYKNM = base.Columns["KYKNM"];
                this.columnKEISAIBI = base.Columns["KEISAIBI"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnORDERSEQ = base.Columns["ORDERSEQ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnADDCHGKBN = new global::System.Data.DataColumn("ADDCHGKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDCHGKBN);
                this.columnADX = new global::System.Data.DataColumn("ADX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADX);
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnRENBN = new global::System.Data.DataColumn("RENBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENBN);
                this.columnBAITAIKBN = new global::System.Data.DataColumn("BAITAIKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAIKBN);
                this.columnBAITAINM = new global::System.Data.DataColumn("BAITAINM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAINM);
                this.columnKENNM = new global::System.Data.DataColumn("KENNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKENNM);
                this.columnSEIGAK = new global::System.Data.DataColumn("SEIGAK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEIGAK);
                this.columnBYOSU = new global::System.Data.DataColumn("BYOSU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBYOSU);
                this.columnHONSU = new global::System.Data.DataColumn("HONSU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHONSU);
                this.columnSPACE = new global::System.Data.DataColumn("SPACE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPACE);
                this.columnTERM = new global::System.Data.DataColumn("TERM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERM);
                this.columnKYKSHCD = new global::System.Data.DataColumn("KYKSHCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYKSHCD);
                this.columnKYKCD = new global::System.Data.DataColumn("KYKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYKCD);
                this.columnKYKNM = new global::System.Data.DataColumn("KYKNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYKNM);
                this.columnKEISAIBI = new global::System.Data.DataColumn("KEISAIBI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEISAIBI);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnORDERSEQ = new global::System.Data.DataColumn("ORDERSEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDERSEQ);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffRow NewBaitaiDiffRow() {
                return ((BaitaiDiffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BaitaiDiffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BaitaiDiffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BaitaiDiffRowChanged != null)) {
                    this.BaitaiDiffRowChanged(this, new BaitaiDiffRowChangeEvent(((BaitaiDiffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BaitaiDiffRowChanging != null)) {
                    this.BaitaiDiffRowChanging(this, new BaitaiDiffRowChangeEvent(((BaitaiDiffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BaitaiDiffRowDeleted != null)) {
                    this.BaitaiDiffRowDeleted(this, new BaitaiDiffRowChangeEvent(((BaitaiDiffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BaitaiDiffRowDeleting != null)) {
                    this.BaitaiDiffRowDeleting(this, new BaitaiDiffRowChangeEvent(((BaitaiDiffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBaitaiDiffRow(BaitaiDiffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AddChgDsLion ds = new AddChgDsLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BaitaiDiffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BaitaiDiffExternalDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJYUTNO;
            
            private global::System.Data.DataColumn columnJYMEINO;
            
            private global::System.Data.DataColumn columnURMEINO;
            
            private global::System.Data.DataColumn columnRENBN;
            
            private global::System.Data.DataColumn columnBAITAIKBN;
            
            private global::System.Data.DataColumn columnBAITAINM;
            
            private global::System.Data.DataColumn columnKENNM;
            
            private global::System.Data.DataColumn columnAD1SEIGAK;
            
            private global::System.Data.DataColumn columnAD2SEIGAK;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnORDERSEQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffExternalDataTable() {
                this.TableName = "BaitaiDiffExternal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaitaiDiffExternalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BaitaiDiffExternalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUTNOColumn {
                get {
                    return this.columnJYUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYMEINOColumn {
                get {
                    return this.columnJYMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URMEINOColumn {
                get {
                    return this.columnURMEINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENBNColumn {
                get {
                    return this.columnRENBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAIKBNColumn {
                get {
                    return this.columnBAITAIKBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAITAINMColumn {
                get {
                    return this.columnBAITAINM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KENNMColumn {
                get {
                    return this.columnKENNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AD1SEIGAKColumn {
                get {
                    return this.columnAD1SEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AD2SEIGAKColumn {
                get {
                    return this.columnAD2SEIGAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDERSEQColumn {
                get {
                    return this.columnORDERSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffExternalRow this[int index] {
                get {
                    return ((BaitaiDiffExternalRow)(this.Rows[index]));
                }
            }
            
            public event BaitaiDiffExternalRowChangeEventHandler BaitaiDiffExternalRowChanging;
            
            public event BaitaiDiffExternalRowChangeEventHandler BaitaiDiffExternalRowChanged;
            
            public event BaitaiDiffExternalRowChangeEventHandler BaitaiDiffExternalRowDeleting;
            
            public event BaitaiDiffExternalRowChangeEventHandler BaitaiDiffExternalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBaitaiDiffExternalRow(BaitaiDiffExternalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffExternalRow AddBaitaiDiffExternalRow(string JYUTNO, string JYMEINO, string URMEINO, string RENBN, string BAITAIKBN, string BAITAINM, string KENNM, double AD1SEIGAK, double AD2SEIGAK, string SEQ, string ORDERSEQ) {
                BaitaiDiffExternalRow rowBaitaiDiffExternalRow = ((BaitaiDiffExternalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JYUTNO,
                        JYMEINO,
                        URMEINO,
                        RENBN,
                        BAITAIKBN,
                        BAITAINM,
                        KENNM,
                        AD1SEIGAK,
                        AD2SEIGAK,
                        SEQ,
                        ORDERSEQ};
                rowBaitaiDiffExternalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBaitaiDiffExternalRow);
                return rowBaitaiDiffExternalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BaitaiDiffExternalDataTable cln = ((BaitaiDiffExternalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BaitaiDiffExternalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJYUTNO = base.Columns["JYUTNO"];
                this.columnJYMEINO = base.Columns["JYMEINO"];
                this.columnURMEINO = base.Columns["URMEINO"];
                this.columnRENBN = base.Columns["RENBN"];
                this.columnBAITAIKBN = base.Columns["BAITAIKBN"];
                this.columnBAITAINM = base.Columns["BAITAINM"];
                this.columnKENNM = base.Columns["KENNM"];
                this.columnAD1SEIGAK = base.Columns["AD1SEIGAK"];
                this.columnAD2SEIGAK = base.Columns["AD2SEIGAK"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnORDERSEQ = base.Columns["ORDERSEQ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJYUTNO = new global::System.Data.DataColumn("JYUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUTNO);
                this.columnJYMEINO = new global::System.Data.DataColumn("JYMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYMEINO);
                this.columnURMEINO = new global::System.Data.DataColumn("URMEINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURMEINO);
                this.columnRENBN = new global::System.Data.DataColumn("RENBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENBN);
                this.columnBAITAIKBN = new global::System.Data.DataColumn("BAITAIKBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAIKBN);
                this.columnBAITAINM = new global::System.Data.DataColumn("BAITAINM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAITAINM);
                this.columnKENNM = new global::System.Data.DataColumn("KENNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKENNM);
                this.columnAD1SEIGAK = new global::System.Data.DataColumn("AD1SEIGAK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD1SEIGAK);
                this.columnAD2SEIGAK = new global::System.Data.DataColumn("AD2SEIGAK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD2SEIGAK);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnORDERSEQ = new global::System.Data.DataColumn("ORDERSEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDERSEQ);
                this.columnAD1SEIGAK.DefaultValue = ((double)(-1));
                this.columnAD2SEIGAK.DefaultValue = ((double)(-1));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffExternalRow NewBaitaiDiffExternalRow() {
                return ((BaitaiDiffExternalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BaitaiDiffExternalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BaitaiDiffExternalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BaitaiDiffExternalRowChanged != null)) {
                    this.BaitaiDiffExternalRowChanged(this, new BaitaiDiffExternalRowChangeEvent(((BaitaiDiffExternalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BaitaiDiffExternalRowChanging != null)) {
                    this.BaitaiDiffExternalRowChanging(this, new BaitaiDiffExternalRowChangeEvent(((BaitaiDiffExternalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BaitaiDiffExternalRowDeleted != null)) {
                    this.BaitaiDiffExternalRowDeleted(this, new BaitaiDiffExternalRowChangeEvent(((BaitaiDiffExternalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BaitaiDiffExternalRowDeleting != null)) {
                    this.BaitaiDiffExternalRowDeleting(this, new BaitaiDiffExternalRowChangeEvent(((BaitaiDiffExternalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBaitaiDiffExternalRow(BaitaiDiffExternalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AddChgDsLion ds = new AddChgDsLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BaitaiDiffExternalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RrkTimStmpBaseDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRRKTIMSTMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpBaseDataTable() {
                this.TableName = "RrkTimStmpBase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RrkTimStmpBaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RrkTimStmpBaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RRKTIMSTMPColumn {
                get {
                    return this.columnRRKTIMSTMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpBaseRow this[int index] {
                get {
                    return ((RrkTimStmpBaseRow)(this.Rows[index]));
                }
            }
            
            public event RrkTimStmpBaseRowChangeEventHandler RrkTimStmpBaseRowChanging;
            
            public event RrkTimStmpBaseRowChangeEventHandler RrkTimStmpBaseRowChanged;
            
            public event RrkTimStmpBaseRowChangeEventHandler RrkTimStmpBaseRowDeleting;
            
            public event RrkTimStmpBaseRowChangeEventHandler RrkTimStmpBaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRrkTimStmpBaseRow(RrkTimStmpBaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpBaseRow AddRrkTimStmpBaseRow(string RRKTIMSTMP) {
                RrkTimStmpBaseRow rowRrkTimStmpBaseRow = ((RrkTimStmpBaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RRKTIMSTMP};
                rowRrkTimStmpBaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRrkTimStmpBaseRow);
                return rowRrkTimStmpBaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RrkTimStmpBaseDataTable cln = ((RrkTimStmpBaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RrkTimStmpBaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRRKTIMSTMP = base.Columns["RRKTIMSTMP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRRKTIMSTMP = new global::System.Data.DataColumn("RRKTIMSTMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRRKTIMSTMP);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpBaseRow NewRrkTimStmpBaseRow() {
                return ((RrkTimStmpBaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RrkTimStmpBaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RrkTimStmpBaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RrkTimStmpBaseRowChanged != null)) {
                    this.RrkTimStmpBaseRowChanged(this, new RrkTimStmpBaseRowChangeEvent(((RrkTimStmpBaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RrkTimStmpBaseRowChanging != null)) {
                    this.RrkTimStmpBaseRowChanging(this, new RrkTimStmpBaseRowChangeEvent(((RrkTimStmpBaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RrkTimStmpBaseRowDeleted != null)) {
                    this.RrkTimStmpBaseRowDeleted(this, new RrkTimStmpBaseRowChangeEvent(((RrkTimStmpBaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RrkTimStmpBaseRowDeleting != null)) {
                    this.RrkTimStmpBaseRowDeleting(this, new RrkTimStmpBaseRowChangeEvent(((RrkTimStmpBaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRrkTimStmpBaseRow(RrkTimStmpBaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AddChgDsLion ds = new AddChgDsLion();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RrkTimStmpBaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RrkTimStmpRow : global::System.Data.DataRow {
            
            private RrkTimStmpDataTable tableRrkTimStmp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RrkTimStmpRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRrkTimStmp = ((RrkTimStmpDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RRKTIMSTMP {
                get {
                    if (this.IsRRKTIMSTMPNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableRrkTimStmp.RRKTIMSTMPColumn]));
                    }
                }
                set {
                    this[this.tableRrkTimStmp.RRKTIMSTMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRRKTIMSTMPNull() {
                return this.IsNull(this.tableRrkTimStmp.RRKTIMSTMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRRKTIMSTMPNull() {
                this[this.tableRrkTimStmp.RRKTIMSTMPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SeisakuAD1Row : global::System.Data.DataRow {
            
            private SeisakuAD1DataTable tableSeisakuAD1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SeisakuAD1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSeisakuAD1 = ((SeisakuAD1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD1.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD1.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD1.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAIKBN {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD1.BAITAIKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'BAITAIKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.BAITAIKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAINM {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD1.BAITAINMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'BAITAINM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.BAITAINMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TAXAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSeisakuAD1.TAXAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'TAXAMT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.TAXAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SEIGAK {
                get {
                    try {
                        return ((double)(this[this.tableSeisakuAD1.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KENNM {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD1.KENNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'KENNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.KENNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRDNM {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD1.BRDNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'BRDNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.BRDNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRDCD {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD1.BRDCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD1\' にある列 \'BRDCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD1.BRDCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableSeisakuAD1.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableSeisakuAD1.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableSeisakuAD1.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableSeisakuAD1.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableSeisakuAD1.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableSeisakuAD1.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAIKBNNull() {
                return this.IsNull(this.tableSeisakuAD1.BAITAIKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAIKBNNull() {
                this[this.tableSeisakuAD1.BAITAIKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAINMNull() {
                return this.IsNull(this.tableSeisakuAD1.BAITAINMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAINMNull() {
                this[this.tableSeisakuAD1.BAITAINMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXAMTNull() {
                return this.IsNull(this.tableSeisakuAD1.TAXAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXAMTNull() {
                this[this.tableSeisakuAD1.TAXAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableSeisakuAD1.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableSeisakuAD1.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKENNMNull() {
                return this.IsNull(this.tableSeisakuAD1.KENNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKENNMNull() {
                this[this.tableSeisakuAD1.KENNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRDNMNull() {
                return this.IsNull(this.tableSeisakuAD1.BRDNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRDNMNull() {
                this[this.tableSeisakuAD1.BRDNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRDCDNull() {
                return this.IsNull(this.tableSeisakuAD1.BRDCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRDCDNull() {
                this[this.tableSeisakuAD1.BRDCDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SeisakuAD2Row : global::System.Data.DataRow {
            
            private SeisakuAD2DataTable tableSeisakuAD2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SeisakuAD2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSeisakuAD2 = ((SeisakuAD2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD2.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD2.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD2.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAIKBN {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD2.BAITAIKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'BAITAIKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.BAITAIKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAINM {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD2.BAITAINMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'BAITAINM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.BAITAINMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRDCD {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD2.BRDCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'BRDCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.BRDCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRDNM {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD2.BRDNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'BRDNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.BRDNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KENNM {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuAD2.KENNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'KENNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.KENNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SEIGAK {
                get {
                    try {
                        return ((double)(this[this.tableSeisakuAD2.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TAXAMT {
                get {
                    try {
                        return ((double)(this[this.tableSeisakuAD2.TAXAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuAD2\' にある列 \'TAXAMT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuAD2.TAXAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableSeisakuAD2.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableSeisakuAD2.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableSeisakuAD2.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableSeisakuAD2.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableSeisakuAD2.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableSeisakuAD2.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAIKBNNull() {
                return this.IsNull(this.tableSeisakuAD2.BAITAIKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAIKBNNull() {
                this[this.tableSeisakuAD2.BAITAIKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAINMNull() {
                return this.IsNull(this.tableSeisakuAD2.BAITAINMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAINMNull() {
                this[this.tableSeisakuAD2.BAITAINMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRDCDNull() {
                return this.IsNull(this.tableSeisakuAD2.BRDCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRDCDNull() {
                this[this.tableSeisakuAD2.BRDCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRDNMNull() {
                return this.IsNull(this.tableSeisakuAD2.BRDNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRDNMNull() {
                this[this.tableSeisakuAD2.BRDNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKENNMNull() {
                return this.IsNull(this.tableSeisakuAD2.KENNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKENNMNull() {
                this[this.tableSeisakuAD2.KENNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableSeisakuAD2.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableSeisakuAD2.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXAMTNull() {
                return this.IsNull(this.tableSeisakuAD2.TAXAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXAMTNull() {
                this[this.tableSeisakuAD2.TAXAMTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SeisakuDiffRow : global::System.Data.DataRow {
            
            private SeisakuDiffDataTable tableSeisakuDiff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SeisakuDiffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSeisakuDiff = ((SeisakuDiffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuDiff.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuDiff.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuDiff.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAIKBN {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuDiff.BAITAIKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'BAITAIKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.BAITAIKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAINM {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuDiff.BAITAINMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'BAITAINM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.BAITAINMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRDCD {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuDiff.BRDCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'BRDCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.BRDCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRDNM {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuDiff.BRDNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'BRDNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.BRDNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KENNM {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuDiff.KENNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'KENNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.KENNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SEIGAK {
                get {
                    try {
                        return ((double)(this[this.tableSeisakuDiff.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TAXAMT {
                get {
                    try {
                        return ((double)(this[this.tableSeisakuDiff.TAXAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'TAXAMT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.TAXAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEQ {
                get {
                    try {
                        return ((string)(this[this.tableSeisakuDiff.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SeisakuDiff\' にある列 \'SEQ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSeisakuDiff.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHGPNT {
                get {
                    if (this.IsCHGPNTNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSeisakuDiff.CHGPNTColumn]));
                    }
                }
                set {
                    this[this.tableSeisakuDiff.CHGPNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableSeisakuDiff.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableSeisakuDiff.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableSeisakuDiff.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableSeisakuDiff.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableSeisakuDiff.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableSeisakuDiff.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAIKBNNull() {
                return this.IsNull(this.tableSeisakuDiff.BAITAIKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAIKBNNull() {
                this[this.tableSeisakuDiff.BAITAIKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAINMNull() {
                return this.IsNull(this.tableSeisakuDiff.BAITAINMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAINMNull() {
                this[this.tableSeisakuDiff.BAITAINMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRDCDNull() {
                return this.IsNull(this.tableSeisakuDiff.BRDCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRDCDNull() {
                this[this.tableSeisakuDiff.BRDCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRDNMNull() {
                return this.IsNull(this.tableSeisakuDiff.BRDNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRDNMNull() {
                this[this.tableSeisakuDiff.BRDNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKENNMNull() {
                return this.IsNull(this.tableSeisakuDiff.KENNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKENNMNull() {
                this[this.tableSeisakuDiff.KENNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableSeisakuDiff.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableSeisakuDiff.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXAMTNull() {
                return this.IsNull(this.tableSeisakuDiff.TAXAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXAMTNull() {
                this[this.tableSeisakuDiff.TAXAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEQNull() {
                return this.IsNull(this.tableSeisakuDiff.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEQNull() {
                this[this.tableSeisakuDiff.SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHGPNTNull() {
                return this.IsNull(this.tableSeisakuDiff.CHGPNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHGPNTNull() {
                this[this.tableSeisakuDiff.CHGPNTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BaitaiAD1Row : global::System.Data.DataRow {
            
            private BaitaiAD1DataTable tableBaitaiAD1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaitaiAD1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBaitaiAD1 = ((BaitaiAD1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENBN {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.RENBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'RENBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.RENBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAIKBN {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.BAITAIKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'BAITAIKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.BAITAIKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAINM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.BAITAINMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'BAITAINM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.BAITAINMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KENNM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.KENNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'KENNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.KENNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SEIGAK {
                get {
                    try {
                        return ((double)(this[this.tableBaitaiAD1.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BYOSU {
                get {
                    try {
                        return ((int)(this[this.tableBaitaiAD1.BYOSUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'BYOSU\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.BYOSUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HONSU {
                get {
                    try {
                        return ((int)(this[this.tableBaitaiAD1.HONSUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'HONSU\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.HONSUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPACE {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.SPACEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'SPACE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.SPACEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.TERMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'TERM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.TERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDCHGKBN {
                get {
                    if (this.IsADDCHGKBNNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableBaitaiAD1.ADDCHGKBNColumn]));
                    }
                }
                set {
                    this[this.tableBaitaiAD1.ADDCHGKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYKSHCD {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.KYKSHCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'KYKSHCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.KYKSHCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYKCD {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.KYKCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'KYKCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.KYKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYKNM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.KYKNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'KYKNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.KYKNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEISAIBI {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD1.KEISAIBIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD1\' にある列 \'KEISAIBI\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD1.KEISAIBIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableBaitaiAD1.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableBaitaiAD1.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableBaitaiAD1.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableBaitaiAD1.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableBaitaiAD1.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableBaitaiAD1.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENBNNull() {
                return this.IsNull(this.tableBaitaiAD1.RENBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENBNNull() {
                this[this.tableBaitaiAD1.RENBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAIKBNNull() {
                return this.IsNull(this.tableBaitaiAD1.BAITAIKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAIKBNNull() {
                this[this.tableBaitaiAD1.BAITAIKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAINMNull() {
                return this.IsNull(this.tableBaitaiAD1.BAITAINMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAINMNull() {
                this[this.tableBaitaiAD1.BAITAINMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKENNMNull() {
                return this.IsNull(this.tableBaitaiAD1.KENNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKENNMNull() {
                this[this.tableBaitaiAD1.KENNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableBaitaiAD1.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableBaitaiAD1.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBYOSUNull() {
                return this.IsNull(this.tableBaitaiAD1.BYOSUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBYOSUNull() {
                this[this.tableBaitaiAD1.BYOSUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHONSUNull() {
                return this.IsNull(this.tableBaitaiAD1.HONSUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHONSUNull() {
                this[this.tableBaitaiAD1.HONSUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPACENull() {
                return this.IsNull(this.tableBaitaiAD1.SPACEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPACENull() {
                this[this.tableBaitaiAD1.SPACEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERMNull() {
                return this.IsNull(this.tableBaitaiAD1.TERMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERMNull() {
                this[this.tableBaitaiAD1.TERMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDCHGKBNNull() {
                return this.IsNull(this.tableBaitaiAD1.ADDCHGKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDCHGKBNNull() {
                this[this.tableBaitaiAD1.ADDCHGKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYKSHCDNull() {
                return this.IsNull(this.tableBaitaiAD1.KYKSHCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYKSHCDNull() {
                this[this.tableBaitaiAD1.KYKSHCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYKCDNull() {
                return this.IsNull(this.tableBaitaiAD1.KYKCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYKCDNull() {
                this[this.tableBaitaiAD1.KYKCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYKNMNull() {
                return this.IsNull(this.tableBaitaiAD1.KYKNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYKNMNull() {
                this[this.tableBaitaiAD1.KYKNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEISAIBINull() {
                return this.IsNull(this.tableBaitaiAD1.KEISAIBIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEISAIBINull() {
                this[this.tableBaitaiAD1.KEISAIBIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BaitaiAD2Row : global::System.Data.DataRow {
            
            private BaitaiAD2DataTable tableBaitaiAD2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaitaiAD2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBaitaiAD2 = ((BaitaiAD2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENBN {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.RENBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'RENBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.RENBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAIKBN {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.BAITAIKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'BAITAIKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.BAITAIKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAINM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.BAITAINMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'BAITAINM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.BAITAINMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KENNM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.KENNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'KENNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.KENNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SEIGAK {
                get {
                    try {
                        return ((double)(this[this.tableBaitaiAD2.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BYOSU {
                get {
                    try {
                        return ((int)(this[this.tableBaitaiAD2.BYOSUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'BYOSU\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.BYOSUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HONSU {
                get {
                    try {
                        return ((int)(this[this.tableBaitaiAD2.HONSUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'HONSU\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.HONSUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPACE {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.SPACEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'SPACE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.SPACEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.TERMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'TERM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.TERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDCHGKBN {
                get {
                    if (this.IsADDCHGKBNNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableBaitaiAD2.ADDCHGKBNColumn]));
                    }
                }
                set {
                    this[this.tableBaitaiAD2.ADDCHGKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYKSHCD {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.KYKSHCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'KYKSHCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.KYKSHCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYKCD {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.KYKCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'KYKCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.KYKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYKNM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.KYKNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'KYKNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.KYKNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEISAIBI {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiAD2.KEISAIBIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiAD2\' にある列 \'KEISAIBI\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiAD2.KEISAIBIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableBaitaiAD2.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableBaitaiAD2.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableBaitaiAD2.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableBaitaiAD2.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableBaitaiAD2.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableBaitaiAD2.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENBNNull() {
                return this.IsNull(this.tableBaitaiAD2.RENBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENBNNull() {
                this[this.tableBaitaiAD2.RENBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAIKBNNull() {
                return this.IsNull(this.tableBaitaiAD2.BAITAIKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAIKBNNull() {
                this[this.tableBaitaiAD2.BAITAIKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAINMNull() {
                return this.IsNull(this.tableBaitaiAD2.BAITAINMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAINMNull() {
                this[this.tableBaitaiAD2.BAITAINMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKENNMNull() {
                return this.IsNull(this.tableBaitaiAD2.KENNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKENNMNull() {
                this[this.tableBaitaiAD2.KENNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableBaitaiAD2.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableBaitaiAD2.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBYOSUNull() {
                return this.IsNull(this.tableBaitaiAD2.BYOSUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBYOSUNull() {
                this[this.tableBaitaiAD2.BYOSUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHONSUNull() {
                return this.IsNull(this.tableBaitaiAD2.HONSUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHONSUNull() {
                this[this.tableBaitaiAD2.HONSUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPACENull() {
                return this.IsNull(this.tableBaitaiAD2.SPACEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPACENull() {
                this[this.tableBaitaiAD2.SPACEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERMNull() {
                return this.IsNull(this.tableBaitaiAD2.TERMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERMNull() {
                this[this.tableBaitaiAD2.TERMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDCHGKBNNull() {
                return this.IsNull(this.tableBaitaiAD2.ADDCHGKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDCHGKBNNull() {
                this[this.tableBaitaiAD2.ADDCHGKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYKSHCDNull() {
                return this.IsNull(this.tableBaitaiAD2.KYKSHCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYKSHCDNull() {
                this[this.tableBaitaiAD2.KYKSHCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYKCDNull() {
                return this.IsNull(this.tableBaitaiAD2.KYKCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYKCDNull() {
                this[this.tableBaitaiAD2.KYKCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYKNMNull() {
                return this.IsNull(this.tableBaitaiAD2.KYKNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYKNMNull() {
                this[this.tableBaitaiAD2.KYKNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEISAIBINull() {
                return this.IsNull(this.tableBaitaiAD2.KEISAIBIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEISAIBINull() {
                this[this.tableBaitaiAD2.KEISAIBIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BaitaiDiffRow : global::System.Data.DataRow {
            
            private BaitaiDiffDataTable tableBaitaiDiff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaitaiDiffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBaitaiDiff = ((BaitaiDiffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDCHGKBN {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.ADDCHGKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'ADDCHGKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.ADDCHGKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADX {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.ADXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'ADX\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.ADXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENBN {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.RENBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'RENBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.RENBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAIKBN {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.BAITAIKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'BAITAIKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.BAITAIKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAINM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.BAITAINMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'BAITAINM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.BAITAINMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KENNM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.KENNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'KENNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.KENNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SEIGAK {
                get {
                    try {
                        return ((double)(this[this.tableBaitaiDiff.SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BYOSU {
                get {
                    try {
                        return ((int)(this[this.tableBaitaiDiff.BYOSUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'BYOSU\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.BYOSUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HONSU {
                get {
                    try {
                        return ((int)(this[this.tableBaitaiDiff.HONSUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'HONSU\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.HONSUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPACE {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.SPACEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'SPACE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.SPACEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.TERMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'TERM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.TERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYKSHCD {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.KYKSHCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'KYKSHCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.KYKSHCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYKCD {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.KYKCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'KYKCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.KYKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYKNM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.KYKNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'KYKNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.KYKNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEISAIBI {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.KEISAIBIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'KEISAIBI\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.KEISAIBIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEQ {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'SEQ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORDERSEQ {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiff.ORDERSEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiff\' にある列 \'ORDERSEQ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiff.ORDERSEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDCHGKBNNull() {
                return this.IsNull(this.tableBaitaiDiff.ADDCHGKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDCHGKBNNull() {
                this[this.tableBaitaiDiff.ADDCHGKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADXNull() {
                return this.IsNull(this.tableBaitaiDiff.ADXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADXNull() {
                this[this.tableBaitaiDiff.ADXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableBaitaiDiff.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableBaitaiDiff.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableBaitaiDiff.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableBaitaiDiff.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableBaitaiDiff.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableBaitaiDiff.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENBNNull() {
                return this.IsNull(this.tableBaitaiDiff.RENBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENBNNull() {
                this[this.tableBaitaiDiff.RENBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAIKBNNull() {
                return this.IsNull(this.tableBaitaiDiff.BAITAIKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAIKBNNull() {
                this[this.tableBaitaiDiff.BAITAIKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAINMNull() {
                return this.IsNull(this.tableBaitaiDiff.BAITAINMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAINMNull() {
                this[this.tableBaitaiDiff.BAITAINMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKENNMNull() {
                return this.IsNull(this.tableBaitaiDiff.KENNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKENNMNull() {
                this[this.tableBaitaiDiff.KENNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEIGAKNull() {
                return this.IsNull(this.tableBaitaiDiff.SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEIGAKNull() {
                this[this.tableBaitaiDiff.SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBYOSUNull() {
                return this.IsNull(this.tableBaitaiDiff.BYOSUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBYOSUNull() {
                this[this.tableBaitaiDiff.BYOSUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHONSUNull() {
                return this.IsNull(this.tableBaitaiDiff.HONSUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHONSUNull() {
                this[this.tableBaitaiDiff.HONSUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPACENull() {
                return this.IsNull(this.tableBaitaiDiff.SPACEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPACENull() {
                this[this.tableBaitaiDiff.SPACEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERMNull() {
                return this.IsNull(this.tableBaitaiDiff.TERMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERMNull() {
                this[this.tableBaitaiDiff.TERMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYKSHCDNull() {
                return this.IsNull(this.tableBaitaiDiff.KYKSHCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYKSHCDNull() {
                this[this.tableBaitaiDiff.KYKSHCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYKCDNull() {
                return this.IsNull(this.tableBaitaiDiff.KYKCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYKCDNull() {
                this[this.tableBaitaiDiff.KYKCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYKNMNull() {
                return this.IsNull(this.tableBaitaiDiff.KYKNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYKNMNull() {
                this[this.tableBaitaiDiff.KYKNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEISAIBINull() {
                return this.IsNull(this.tableBaitaiDiff.KEISAIBIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEISAIBINull() {
                this[this.tableBaitaiDiff.KEISAIBIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEQNull() {
                return this.IsNull(this.tableBaitaiDiff.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEQNull() {
                this[this.tableBaitaiDiff.SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORDERSEQNull() {
                return this.IsNull(this.tableBaitaiDiff.ORDERSEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORDERSEQNull() {
                this[this.tableBaitaiDiff.ORDERSEQColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BaitaiDiffExternalRow : global::System.Data.DataRow {
            
            private BaitaiDiffExternalDataTable tableBaitaiDiffExternal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaitaiDiffExternalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBaitaiDiffExternal = ((BaitaiDiffExternalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUTNO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiffExternal.JYUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'JYUTNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.JYUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYMEINO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiffExternal.JYMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'JYMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.JYMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URMEINO {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiffExternal.URMEINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'URMEINO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.URMEINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENBN {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiffExternal.RENBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'RENBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.RENBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAIKBN {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiffExternal.BAITAIKBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'BAITAIKBN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.BAITAIKBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAITAINM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiffExternal.BAITAINMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'BAITAINM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.BAITAINMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KENNM {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiffExternal.KENNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'KENNM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.KENNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AD1SEIGAK {
                get {
                    try {
                        return ((double)(this[this.tableBaitaiDiffExternal.AD1SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'AD1SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.AD1SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AD2SEIGAK {
                get {
                    try {
                        return ((double)(this[this.tableBaitaiDiffExternal.AD2SEIGAKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'AD2SEIGAK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.AD2SEIGAKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEQ {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiffExternal.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'SEQ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORDERSEQ {
                get {
                    try {
                        return ((string)(this[this.tableBaitaiDiffExternal.ORDERSEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BaitaiDiffExternal\' にある列 \'ORDERSEQ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBaitaiDiffExternal.ORDERSEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUTNONull() {
                return this.IsNull(this.tableBaitaiDiffExternal.JYUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUTNONull() {
                this[this.tableBaitaiDiffExternal.JYUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYMEINONull() {
                return this.IsNull(this.tableBaitaiDiffExternal.JYMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYMEINONull() {
                this[this.tableBaitaiDiffExternal.JYMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURMEINONull() {
                return this.IsNull(this.tableBaitaiDiffExternal.URMEINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURMEINONull() {
                this[this.tableBaitaiDiffExternal.URMEINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENBNNull() {
                return this.IsNull(this.tableBaitaiDiffExternal.RENBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENBNNull() {
                this[this.tableBaitaiDiffExternal.RENBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAIKBNNull() {
                return this.IsNull(this.tableBaitaiDiffExternal.BAITAIKBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAIKBNNull() {
                this[this.tableBaitaiDiffExternal.BAITAIKBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAITAINMNull() {
                return this.IsNull(this.tableBaitaiDiffExternal.BAITAINMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAITAINMNull() {
                this[this.tableBaitaiDiffExternal.BAITAINMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKENNMNull() {
                return this.IsNull(this.tableBaitaiDiffExternal.KENNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKENNMNull() {
                this[this.tableBaitaiDiffExternal.KENNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAD1SEIGAKNull() {
                return this.IsNull(this.tableBaitaiDiffExternal.AD1SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAD1SEIGAKNull() {
                this[this.tableBaitaiDiffExternal.AD1SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAD2SEIGAKNull() {
                return this.IsNull(this.tableBaitaiDiffExternal.AD2SEIGAKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAD2SEIGAKNull() {
                this[this.tableBaitaiDiffExternal.AD2SEIGAKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEQNull() {
                return this.IsNull(this.tableBaitaiDiffExternal.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEQNull() {
                this[this.tableBaitaiDiffExternal.SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORDERSEQNull() {
                return this.IsNull(this.tableBaitaiDiffExternal.ORDERSEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORDERSEQNull() {
                this[this.tableBaitaiDiffExternal.ORDERSEQColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RrkTimStmpBaseRow : global::System.Data.DataRow {
            
            private RrkTimStmpBaseDataTable tableRrkTimStmpBase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RrkTimStmpBaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRrkTimStmpBase = ((RrkTimStmpBaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RRKTIMSTMP {
                get {
                    if (this.IsRRKTIMSTMPNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableRrkTimStmpBase.RRKTIMSTMPColumn]));
                    }
                }
                set {
                    this[this.tableRrkTimStmpBase.RRKTIMSTMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRRKTIMSTMPNull() {
                return this.IsNull(this.tableRrkTimStmpBase.RRKTIMSTMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRRKTIMSTMPNull() {
                this[this.tableRrkTimStmpBase.RRKTIMSTMPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RrkTimStmpRowChangeEvent : global::System.EventArgs {
            
            private RrkTimStmpRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpRowChangeEvent(RrkTimStmpRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SeisakuAD1RowChangeEvent : global::System.EventArgs {
            
            private SeisakuAD1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD1RowChangeEvent(SeisakuAD1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SeisakuAD2RowChangeEvent : global::System.EventArgs {
            
            private SeisakuAD2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD2RowChangeEvent(SeisakuAD2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuAD2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SeisakuDiffRowChangeEvent : global::System.EventArgs {
            
            private SeisakuDiffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuDiffRowChangeEvent(SeisakuDiffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SeisakuDiffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BaitaiAD1RowChangeEvent : global::System.EventArgs {
            
            private BaitaiAD1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD1RowChangeEvent(BaitaiAD1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BaitaiAD2RowChangeEvent : global::System.EventArgs {
            
            private BaitaiAD2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD2RowChangeEvent(BaitaiAD2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiAD2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BaitaiDiffRowChangeEvent : global::System.EventArgs {
            
            private BaitaiDiffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffRowChangeEvent(BaitaiDiffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BaitaiDiffExternalRowChangeEvent : global::System.EventArgs {
            
            private BaitaiDiffExternalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffExternalRowChangeEvent(BaitaiDiffExternalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaitaiDiffExternalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RrkTimStmpBaseRowChangeEvent : global::System.EventArgs {
            
            private RrkTimStmpBaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpBaseRowChangeEvent(RrkTimStmpBaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RrkTimStmpBaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591