//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3643
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Uni.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepDsUni")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepDsUni : global::System.Data.DataSet {
        
        private ReportDataDataTable tableReportData;
        
        private ProofDataDataTable tableProofData;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepDsUni() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepDsUni(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ReportData"] != null)) {
                    base.Tables.Add(new ReportDataDataTable(ds.Tables["ReportData"]));
                }
                if ((ds.Tables["ProofData"] != null)) {
                    base.Tables.Add(new ProofDataDataTable(ds.Tables["ProofData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportDataDataTable ReportData {
            get {
                return this.tableReportData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProofDataDataTable ProofData {
            get {
                return this.tableProofData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepDsUni cln = ((RepDsUni)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ReportData"] != null)) {
                    base.Tables.Add(new ReportDataDataTable(ds.Tables["ReportData"]));
                }
                if ((ds.Tables["ProofData"] != null)) {
                    base.Tables.Add(new ProofDataDataTable(ds.Tables["ProofData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableReportData = ((ReportDataDataTable)(base.Tables["ReportData"]));
            if ((initTable == true)) {
                if ((this.tableReportData != null)) {
                    this.tableReportData.InitVars();
                }
            }
            this.tableProofData = ((ProofDataDataTable)(base.Tables["ProofData"]));
            if ((initTable == true)) {
                if ((this.tableProofData != null)) {
                    this.tableProofData.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepDsUni";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RepDsUni.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableReportData = new ReportDataDataTable();
            base.Tables.Add(this.tableReportData);
            this.tableProofData = new ProofDataDataTable();
            base.Tables.Add(this.tableProofData);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProofData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepDsUni ds = new RepDsUni();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ReportDataRowChangeEventHandler(object sender, ReportDataRowChangeEvent e);
        
        public delegate void ProofDataRowChangeEventHandler(object sender, ProofDataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportDataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columngpyNo;
            
            private global::System.Data.DataColumn columnmGpyNo;
            
            private global::System.Data.DataColumn columnjutyuNo;
            
            private global::System.Data.DataColumn columngyomkbn;
            
            private global::System.Data.DataColumn columngyomkbnNm;
            
            private global::System.Data.DataColumn columnseikbn;
            
            private global::System.Data.DataColumn columnshubetsuCd;
            
            private global::System.Data.DataColumn columnshubetsuNm;
            
            private global::System.Data.DataColumn columnkenmei;
            
            private global::System.Data.DataColumn columnhimoku;
            
            private global::System.Data.DataColumn columncontents;
            
            private global::System.Data.DataColumn columncontents1;
            
            private global::System.Data.DataColumn columncontents2;
            
            private global::System.Data.DataColumn columncontents3;
            
            private global::System.Data.DataColumn columncontents4;
            
            private global::System.Data.DataColumn columnkngk;
            
            private global::System.Data.DataColumn columntax;
            
            private global::System.Data.DataColumn columnkngkJ;
            
            private global::System.Data.DataColumn columntaxJ;
            
            private global::System.Data.DataColumn columnbusho;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportDataDataTable() {
                this.TableName = "ReportData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gpyNoColumn {
                get {
                    return this.columngpyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mGpyNoColumn {
                get {
                    return this.columnmGpyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jutyuNoColumn {
                get {
                    return this.columnjutyuNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gyomkbnColumn {
                get {
                    return this.columngyomkbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gyomkbnNmColumn {
                get {
                    return this.columngyomkbnNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seikbnColumn {
                get {
                    return this.columnseikbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shubetsuCdColumn {
                get {
                    return this.columnshubetsuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shubetsuNmColumn {
                get {
                    return this.columnshubetsuNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kenmeiColumn {
                get {
                    return this.columnkenmei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn himokuColumn {
                get {
                    return this.columnhimoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contentsColumn {
                get {
                    return this.columncontents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contents1Column {
                get {
                    return this.columncontents1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contents2Column {
                get {
                    return this.columncontents2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contents3Column {
                get {
                    return this.columncontents3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contents4Column {
                get {
                    return this.columncontents4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngkColumn {
                get {
                    return this.columnkngk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn taxColumn {
                get {
                    return this.columntax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngkJColumn {
                get {
                    return this.columnkngkJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn taxJColumn {
                get {
                    return this.columntaxJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bushoColumn {
                get {
                    return this.columnbusho;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportDataRow this[int index] {
                get {
                    return ((ReportDataRow)(this.Rows[index]));
                }
            }
            
            public event ReportDataRowChangeEventHandler ReportDataRowChanging;
            
            public event ReportDataRowChangeEventHandler ReportDataRowChanged;
            
            public event ReportDataRowChangeEventHandler ReportDataRowDeleting;
            
            public event ReportDataRowChangeEventHandler ReportDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportDataRow(ReportDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportDataRow AddReportDataRow(
                        string gpyNo, 
                        string mGpyNo, 
                        string jutyuNo, 
                        string gyomkbn, 
                        string gyomkbnNm, 
                        string seikbn, 
                        string shubetsuCd, 
                        string shubetsuNm, 
                        string kenmei, 
                        string himoku, 
                        string contents, 
                        string contents1, 
                        string contents2, 
                        string contents3, 
                        string contents4, 
                        decimal kngk, 
                        decimal tax, 
                        decimal kngkJ, 
                        decimal taxJ, 
                        string busho) {
                ReportDataRow rowReportDataRow = ((ReportDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        gpyNo,
                        mGpyNo,
                        jutyuNo,
                        gyomkbn,
                        gyomkbnNm,
                        seikbn,
                        shubetsuCd,
                        shubetsuNm,
                        kenmei,
                        himoku,
                        contents,
                        contents1,
                        contents2,
                        contents3,
                        contents4,
                        kngk,
                        tax,
                        kngkJ,
                        taxJ,
                        busho};
                rowReportDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportDataRow);
                return rowReportDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportDataDataTable cln = ((ReportDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columngpyNo = base.Columns["gpyNo"];
                this.columnmGpyNo = base.Columns["mGpyNo"];
                this.columnjutyuNo = base.Columns["jutyuNo"];
                this.columngyomkbn = base.Columns["gyomkbn"];
                this.columngyomkbnNm = base.Columns["gyomkbnNm"];
                this.columnseikbn = base.Columns["seikbn"];
                this.columnshubetsuCd = base.Columns["shubetsuCd"];
                this.columnshubetsuNm = base.Columns["shubetsuNm"];
                this.columnkenmei = base.Columns["kenmei"];
                this.columnhimoku = base.Columns["himoku"];
                this.columncontents = base.Columns["contents"];
                this.columncontents1 = base.Columns["contents1"];
                this.columncontents2 = base.Columns["contents2"];
                this.columncontents3 = base.Columns["contents3"];
                this.columncontents4 = base.Columns["contents4"];
                this.columnkngk = base.Columns["kngk"];
                this.columntax = base.Columns["tax"];
                this.columnkngkJ = base.Columns["kngkJ"];
                this.columntaxJ = base.Columns["taxJ"];
                this.columnbusho = base.Columns["busho"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columngpyNo = new global::System.Data.DataColumn("gpyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngpyNo);
                this.columnmGpyNo = new global::System.Data.DataColumn("mGpyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmGpyNo);
                this.columnjutyuNo = new global::System.Data.DataColumn("jutyuNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjutyuNo);
                this.columngyomkbn = new global::System.Data.DataColumn("gyomkbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngyomkbn);
                this.columngyomkbnNm = new global::System.Data.DataColumn("gyomkbnNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngyomkbnNm);
                this.columnseikbn = new global::System.Data.DataColumn("seikbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseikbn);
                this.columnshubetsuCd = new global::System.Data.DataColumn("shubetsuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshubetsuCd);
                this.columnshubetsuNm = new global::System.Data.DataColumn("shubetsuNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshubetsuNm);
                this.columnkenmei = new global::System.Data.DataColumn("kenmei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkenmei);
                this.columnhimoku = new global::System.Data.DataColumn("himoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhimoku);
                this.columncontents = new global::System.Data.DataColumn("contents", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents);
                this.columncontents1 = new global::System.Data.DataColumn("contents1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents1);
                this.columncontents2 = new global::System.Data.DataColumn("contents2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents2);
                this.columncontents3 = new global::System.Data.DataColumn("contents3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents3);
                this.columncontents4 = new global::System.Data.DataColumn("contents4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents4);
                this.columnkngk = new global::System.Data.DataColumn("kngk", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk);
                this.columntax = new global::System.Data.DataColumn("tax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntax);
                this.columnkngkJ = new global::System.Data.DataColumn("kngkJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngkJ);
                this.columntaxJ = new global::System.Data.DataColumn("taxJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxJ);
                this.columnbusho = new global::System.Data.DataColumn("busho", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbusho);
                this.columngpyNo.Caption = "請求原票No";
                this.columnmGpyNo.Caption = "請求原票行No";
                this.columnjutyuNo.Caption = "受注No";
                this.columngyomkbn.Caption = "業務区分";
                this.columngyomkbnNm.Caption = "業務区分名";
                this.columnseikbn.Caption = "請求区分";
                this.columnshubetsuCd.Caption = "種別コード";
                this.columnshubetsuNm.Caption = "種別";
                this.columnkenmei.Caption = "件名";
                this.columnhimoku.Caption = "費目";
                this.columncontents.Caption = "内容";
                this.columncontents1.Caption = "内容１";
                this.columncontents2.Caption = "内容２";
                this.columncontents3.Caption = "内容３";
                this.columncontents4.Caption = "内容４";
                this.columnkngk.Caption = "金額";
                this.columntax.Caption = "消費税";
                this.columnkngkJ.Caption = "金額_受注ダウンロードデータ";
                this.columntaxJ.Caption = "消費税_受注ダウンロードデータ";
                this.columnbusho.Caption = "部署";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportDataRow NewReportDataRow() {
                return ((ReportDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportDataRowChanged != null)) {
                    this.ReportDataRowChanged(this, new ReportDataRowChangeEvent(((ReportDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportDataRowChanging != null)) {
                    this.ReportDataRowChanging(this, new ReportDataRowChangeEvent(((ReportDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportDataRowDeleted != null)) {
                    this.ReportDataRowDeleted(this, new ReportDataRowChangeEvent(((ReportDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportDataRowDeleting != null)) {
                    this.ReportDataRowDeleting(this, new ReportDataRowChangeEvent(((ReportDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportDataRow(ReportDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsUni ds = new RepDsUni();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProofDataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columngpyNo;
            
            private global::System.Data.DataColumn columnmGpyNo;
            
            private global::System.Data.DataColumn columnjutyuNo;
            
            private global::System.Data.DataColumn columngyomkbn;
            
            private global::System.Data.DataColumn columngyomkbnNm;
            
            private global::System.Data.DataColumn columnseikbn;
            
            private global::System.Data.DataColumn columnshubetsuCd;
            
            private global::System.Data.DataColumn columnshubetsuNm;
            
            private global::System.Data.DataColumn columnkenmei;
            
            private global::System.Data.DataColumn columnhimoku;
            
            private global::System.Data.DataColumn columncontents;
            
            private global::System.Data.DataColumn columncontents1;
            
            private global::System.Data.DataColumn columncontents2;
            
            private global::System.Data.DataColumn columncontents3;
            
            private global::System.Data.DataColumn columncontents4;
            
            private global::System.Data.DataColumn columnkngk;
            
            private global::System.Data.DataColumn columntax;
            
            private global::System.Data.DataColumn columnkngkJ;
            
            private global::System.Data.DataColumn columntaxJ;
            
            private global::System.Data.DataColumn columnbusho;
            
            private global::System.Data.DataColumn columntjyutNo;
            
            private global::System.Data.DataColumn columntouflg;
            
            private global::System.Data.DataColumn columntjymeiNo;
            
            private global::System.Data.DataColumn columnturmeiNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProofDataDataTable() {
                this.TableName = "ProofData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProofDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProofDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gpyNoColumn {
                get {
                    return this.columngpyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mGpyNoColumn {
                get {
                    return this.columnmGpyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jutyuNoColumn {
                get {
                    return this.columnjutyuNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gyomkbnColumn {
                get {
                    return this.columngyomkbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gyomkbnNmColumn {
                get {
                    return this.columngyomkbnNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seikbnColumn {
                get {
                    return this.columnseikbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shubetsuCdColumn {
                get {
                    return this.columnshubetsuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shubetsuNmColumn {
                get {
                    return this.columnshubetsuNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kenmeiColumn {
                get {
                    return this.columnkenmei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn himokuColumn {
                get {
                    return this.columnhimoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contentsColumn {
                get {
                    return this.columncontents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contents1Column {
                get {
                    return this.columncontents1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contents2Column {
                get {
                    return this.columncontents2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contents3Column {
                get {
                    return this.columncontents3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contents4Column {
                get {
                    return this.columncontents4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngkColumn {
                get {
                    return this.columnkngk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn taxColumn {
                get {
                    return this.columntax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngkJColumn {
                get {
                    return this.columnkngkJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn taxJColumn {
                get {
                    return this.columntaxJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bushoColumn {
                get {
                    return this.columnbusho;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tjyutNoColumn {
                get {
                    return this.columntjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn touflgColumn {
                get {
                    return this.columntouflg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tjymeiNoColumn {
                get {
                    return this.columntjymeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn turmeiNoColumn {
                get {
                    return this.columnturmeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProofDataRow this[int index] {
                get {
                    return ((ProofDataRow)(this.Rows[index]));
                }
            }
            
            public event ProofDataRowChangeEventHandler ProofDataRowChanging;
            
            public event ProofDataRowChangeEventHandler ProofDataRowChanged;
            
            public event ProofDataRowChangeEventHandler ProofDataRowDeleting;
            
            public event ProofDataRowChangeEventHandler ProofDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProofDataRow(ProofDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProofDataRow AddProofDataRow(
                        string gpyNo, 
                        string mGpyNo, 
                        string jutyuNo, 
                        string gyomkbn, 
                        string gyomkbnNm, 
                        string seikbn, 
                        string shubetsuCd, 
                        string shubetsuNm, 
                        string kenmei, 
                        string himoku, 
                        string contents, 
                        string contents1, 
                        string contents2, 
                        string contents3, 
                        string contents4, 
                        decimal kngk, 
                        decimal tax, 
                        decimal kngkJ, 
                        decimal taxJ, 
                        string busho, 
                        string tjyutNo, 
                        string touflg, 
                        string tjymeiNo, 
                        string turmeiNo) {
                ProofDataRow rowProofDataRow = ((ProofDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        gpyNo,
                        mGpyNo,
                        jutyuNo,
                        gyomkbn,
                        gyomkbnNm,
                        seikbn,
                        shubetsuCd,
                        shubetsuNm,
                        kenmei,
                        himoku,
                        contents,
                        contents1,
                        contents2,
                        contents3,
                        contents4,
                        kngk,
                        tax,
                        kngkJ,
                        taxJ,
                        busho,
                        tjyutNo,
                        touflg,
                        tjymeiNo,
                        turmeiNo};
                rowProofDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProofDataRow);
                return rowProofDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProofDataDataTable cln = ((ProofDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProofDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columngpyNo = base.Columns["gpyNo"];
                this.columnmGpyNo = base.Columns["mGpyNo"];
                this.columnjutyuNo = base.Columns["jutyuNo"];
                this.columngyomkbn = base.Columns["gyomkbn"];
                this.columngyomkbnNm = base.Columns["gyomkbnNm"];
                this.columnseikbn = base.Columns["seikbn"];
                this.columnshubetsuCd = base.Columns["shubetsuCd"];
                this.columnshubetsuNm = base.Columns["shubetsuNm"];
                this.columnkenmei = base.Columns["kenmei"];
                this.columnhimoku = base.Columns["himoku"];
                this.columncontents = base.Columns["contents"];
                this.columncontents1 = base.Columns["contents1"];
                this.columncontents2 = base.Columns["contents2"];
                this.columncontents3 = base.Columns["contents3"];
                this.columncontents4 = base.Columns["contents4"];
                this.columnkngk = base.Columns["kngk"];
                this.columntax = base.Columns["tax"];
                this.columnkngkJ = base.Columns["kngkJ"];
                this.columntaxJ = base.Columns["taxJ"];
                this.columnbusho = base.Columns["busho"];
                this.columntjyutNo = base.Columns["tjyutNo"];
                this.columntouflg = base.Columns["touflg"];
                this.columntjymeiNo = base.Columns["tjymeiNo"];
                this.columnturmeiNo = base.Columns["turmeiNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columngpyNo = new global::System.Data.DataColumn("gpyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngpyNo);
                this.columnmGpyNo = new global::System.Data.DataColumn("mGpyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmGpyNo);
                this.columnjutyuNo = new global::System.Data.DataColumn("jutyuNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjutyuNo);
                this.columngyomkbn = new global::System.Data.DataColumn("gyomkbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngyomkbn);
                this.columngyomkbnNm = new global::System.Data.DataColumn("gyomkbnNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngyomkbnNm);
                this.columnseikbn = new global::System.Data.DataColumn("seikbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseikbn);
                this.columnshubetsuCd = new global::System.Data.DataColumn("shubetsuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshubetsuCd);
                this.columnshubetsuNm = new global::System.Data.DataColumn("shubetsuNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshubetsuNm);
                this.columnkenmei = new global::System.Data.DataColumn("kenmei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkenmei);
                this.columnhimoku = new global::System.Data.DataColumn("himoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhimoku);
                this.columncontents = new global::System.Data.DataColumn("contents", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents);
                this.columncontents1 = new global::System.Data.DataColumn("contents1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents1);
                this.columncontents2 = new global::System.Data.DataColumn("contents2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents2);
                this.columncontents3 = new global::System.Data.DataColumn("contents3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents3);
                this.columncontents4 = new global::System.Data.DataColumn("contents4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontents4);
                this.columnkngk = new global::System.Data.DataColumn("kngk", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk);
                this.columntax = new global::System.Data.DataColumn("tax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntax);
                this.columnkngkJ = new global::System.Data.DataColumn("kngkJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngkJ);
                this.columntaxJ = new global::System.Data.DataColumn("taxJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxJ);
                this.columnbusho = new global::System.Data.DataColumn("busho", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbusho);
                this.columntjyutNo = new global::System.Data.DataColumn("tjyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntjyutNo);
                this.columntouflg = new global::System.Data.DataColumn("touflg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntouflg);
                this.columntjymeiNo = new global::System.Data.DataColumn("tjymeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntjymeiNo);
                this.columnturmeiNo = new global::System.Data.DataColumn("turmeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnturmeiNo);
                this.columnshubetsuCd.Caption = "shubetuCd";
                this.columnshubetsuNm.Caption = "shubetuNm";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProofDataRow NewProofDataRow() {
                return ((ProofDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProofDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProofDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProofDataRowChanged != null)) {
                    this.ProofDataRowChanged(this, new ProofDataRowChangeEvent(((ProofDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProofDataRowChanging != null)) {
                    this.ProofDataRowChanging(this, new ProofDataRowChangeEvent(((ProofDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProofDataRowDeleted != null)) {
                    this.ProofDataRowDeleted(this, new ProofDataRowChangeEvent(((ProofDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProofDataRowDeleting != null)) {
                    this.ProofDataRowDeleting(this, new ProofDataRowChangeEvent(((ProofDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProofDataRow(ProofDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsUni ds = new RepDsUni();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProofDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportDataRow : global::System.Data.DataRow {
            
            private ReportDataDataTable tableReportData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportData = ((ReportDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gpyNo {
                get {
                    try {
                        return ((string)(this[this.tableReportData.gpyNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'gpyNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.gpyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mGpyNo {
                get {
                    try {
                        return ((string)(this[this.tableReportData.mGpyNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'mGpyNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.mGpyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jutyuNo {
                get {
                    try {
                        return ((string)(this[this.tableReportData.jutyuNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'jutyuNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.jutyuNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gyomkbn {
                get {
                    try {
                        return ((string)(this[this.tableReportData.gyomkbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'gyomkbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.gyomkbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gyomkbnNm {
                get {
                    try {
                        return ((string)(this[this.tableReportData.gyomkbnNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'gyomkbnNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.gyomkbnNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seikbn {
                get {
                    try {
                        return ((string)(this[this.tableReportData.seikbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'seikbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.seikbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shubetsuCd {
                get {
                    try {
                        return ((string)(this[this.tableReportData.shubetsuCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'shubetsuCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.shubetsuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shubetsuNm {
                get {
                    try {
                        return ((string)(this[this.tableReportData.shubetsuNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'shubetsuNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.shubetsuNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kenmei {
                get {
                    try {
                        return ((string)(this[this.tableReportData.kenmeiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'kenmei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.kenmeiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string himoku {
                get {
                    try {
                        return ((string)(this[this.tableReportData.himokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'himoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.himokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents {
                get {
                    try {
                        return ((string)(this[this.tableReportData.contentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'contents\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.contentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents1 {
                get {
                    try {
                        return ((string)(this[this.tableReportData.contents1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'contents1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.contents1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents2 {
                get {
                    try {
                        return ((string)(this[this.tableReportData.contents2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'contents2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.contents2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents3 {
                get {
                    try {
                        return ((string)(this[this.tableReportData.contents3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'contents3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.contents3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents4 {
                get {
                    try {
                        return ((string)(this[this.tableReportData.contents4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'contents4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.contents4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk {
                get {
                    try {
                        return ((decimal)(this[this.tableReportData.kngkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'kngk\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.kngkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tax {
                get {
                    try {
                        return ((decimal)(this[this.tableReportData.taxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'tax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.taxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngkJ {
                get {
                    try {
                        return ((decimal)(this[this.tableReportData.kngkJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'kngkJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.kngkJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal taxJ {
                get {
                    try {
                        return ((decimal)(this[this.tableReportData.taxJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'taxJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.taxJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string busho {
                get {
                    try {
                        return ((string)(this[this.tableReportData.bushoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportData\' にある列 \'busho\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportData.bushoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgpyNoNull() {
                return this.IsNull(this.tableReportData.gpyNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgpyNoNull() {
                this[this.tableReportData.gpyNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmGpyNoNull() {
                return this.IsNull(this.tableReportData.mGpyNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmGpyNoNull() {
                this[this.tableReportData.mGpyNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjutyuNoNull() {
                return this.IsNull(this.tableReportData.jutyuNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjutyuNoNull() {
                this[this.tableReportData.jutyuNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgyomkbnNull() {
                return this.IsNull(this.tableReportData.gyomkbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgyomkbnNull() {
                this[this.tableReportData.gyomkbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgyomkbnNmNull() {
                return this.IsNull(this.tableReportData.gyomkbnNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgyomkbnNmNull() {
                this[this.tableReportData.gyomkbnNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseikbnNull() {
                return this.IsNull(this.tableReportData.seikbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseikbnNull() {
                this[this.tableReportData.seikbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshubetsuCdNull() {
                return this.IsNull(this.tableReportData.shubetsuCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshubetsuCdNull() {
                this[this.tableReportData.shubetsuCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshubetsuNmNull() {
                return this.IsNull(this.tableReportData.shubetsuNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshubetsuNmNull() {
                this[this.tableReportData.shubetsuNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskenmeiNull() {
                return this.IsNull(this.tableReportData.kenmeiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkenmeiNull() {
                this[this.tableReportData.kenmeiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshimokuNull() {
                return this.IsNull(this.tableReportData.himokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethimokuNull() {
                this[this.tableReportData.himokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontentsNull() {
                return this.IsNull(this.tableReportData.contentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontentsNull() {
                this[this.tableReportData.contentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontents1Null() {
                return this.IsNull(this.tableReportData.contents1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontents1Null() {
                this[this.tableReportData.contents1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontents2Null() {
                return this.IsNull(this.tableReportData.contents2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontents2Null() {
                this[this.tableReportData.contents2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontents3Null() {
                return this.IsNull(this.tableReportData.contents3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontents3Null() {
                this[this.tableReportData.contents3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontents4Null() {
                return this.IsNull(this.tableReportData.contents4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontents4Null() {
                this[this.tableReportData.contents4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskngkNull() {
                return this.IsNull(this.tableReportData.kngkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkngkNull() {
                this[this.tableReportData.kngkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaxNull() {
                return this.IsNull(this.tableReportData.taxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaxNull() {
                this[this.tableReportData.taxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskngkJNull() {
                return this.IsNull(this.tableReportData.kngkJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkngkJNull() {
                this[this.tableReportData.kngkJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaxJNull() {
                return this.IsNull(this.tableReportData.taxJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaxJNull() {
                this[this.tableReportData.taxJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbushoNull() {
                return this.IsNull(this.tableReportData.bushoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbushoNull() {
                this[this.tableReportData.bushoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProofDataRow : global::System.Data.DataRow {
            
            private ProofDataDataTable tableProofData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProofDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProofData = ((ProofDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gpyNo {
                get {
                    try {
                        return ((string)(this[this.tableProofData.gpyNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'gpyNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.gpyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mGpyNo {
                get {
                    try {
                        return ((string)(this[this.tableProofData.mGpyNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'mGpyNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.mGpyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jutyuNo {
                get {
                    try {
                        return ((string)(this[this.tableProofData.jutyuNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'jutyuNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.jutyuNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gyomkbn {
                get {
                    try {
                        return ((string)(this[this.tableProofData.gyomkbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'gyomkbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.gyomkbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gyomkbnNm {
                get {
                    try {
                        return ((string)(this[this.tableProofData.gyomkbnNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'gyomkbnNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.gyomkbnNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seikbn {
                get {
                    try {
                        return ((string)(this[this.tableProofData.seikbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'seikbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.seikbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shubetsuCd {
                get {
                    try {
                        return ((string)(this[this.tableProofData.shubetsuCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'shubetsuCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.shubetsuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shubetsuNm {
                get {
                    try {
                        return ((string)(this[this.tableProofData.shubetsuNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'shubetsuNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.shubetsuNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kenmei {
                get {
                    try {
                        return ((string)(this[this.tableProofData.kenmeiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'kenmei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.kenmeiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string himoku {
                get {
                    try {
                        return ((string)(this[this.tableProofData.himokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'himoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.himokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents {
                get {
                    try {
                        return ((string)(this[this.tableProofData.contentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'contents\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.contentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents1 {
                get {
                    try {
                        return ((string)(this[this.tableProofData.contents1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'contents1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.contents1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents2 {
                get {
                    try {
                        return ((string)(this[this.tableProofData.contents2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'contents2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.contents2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents3 {
                get {
                    try {
                        return ((string)(this[this.tableProofData.contents3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'contents3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.contents3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contents4 {
                get {
                    try {
                        return ((string)(this[this.tableProofData.contents4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'contents4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.contents4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngk {
                get {
                    try {
                        return ((decimal)(this[this.tableProofData.kngkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'kngk\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.kngkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tax {
                get {
                    try {
                        return ((decimal)(this[this.tableProofData.taxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'tax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.taxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kngkJ {
                get {
                    try {
                        return ((decimal)(this[this.tableProofData.kngkJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'kngkJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.kngkJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal taxJ {
                get {
                    try {
                        return ((decimal)(this[this.tableProofData.taxJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'taxJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.taxJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string busho {
                get {
                    try {
                        return ((string)(this[this.tableProofData.bushoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'busho\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.bushoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tjyutNo {
                get {
                    try {
                        return ((string)(this[this.tableProofData.tjyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'tjyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.tjyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string touflg {
                get {
                    try {
                        return ((string)(this[this.tableProofData.touflgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'touflg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.touflgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tjymeiNo {
                get {
                    try {
                        return ((string)(this[this.tableProofData.tjymeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'tjymeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.tjymeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string turmeiNo {
                get {
                    try {
                        return ((string)(this[this.tableProofData.turmeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ProofData\' にある列 \'turmeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableProofData.turmeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgpyNoNull() {
                return this.IsNull(this.tableProofData.gpyNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgpyNoNull() {
                this[this.tableProofData.gpyNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmGpyNoNull() {
                return this.IsNull(this.tableProofData.mGpyNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmGpyNoNull() {
                this[this.tableProofData.mGpyNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjutyuNoNull() {
                return this.IsNull(this.tableProofData.jutyuNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjutyuNoNull() {
                this[this.tableProofData.jutyuNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgyomkbnNull() {
                return this.IsNull(this.tableProofData.gyomkbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgyomkbnNull() {
                this[this.tableProofData.gyomkbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgyomkbnNmNull() {
                return this.IsNull(this.tableProofData.gyomkbnNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgyomkbnNmNull() {
                this[this.tableProofData.gyomkbnNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseikbnNull() {
                return this.IsNull(this.tableProofData.seikbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseikbnNull() {
                this[this.tableProofData.seikbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshubetsuCdNull() {
                return this.IsNull(this.tableProofData.shubetsuCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshubetsuCdNull() {
                this[this.tableProofData.shubetsuCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshubetsuNmNull() {
                return this.IsNull(this.tableProofData.shubetsuNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshubetsuNmNull() {
                this[this.tableProofData.shubetsuNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskenmeiNull() {
                return this.IsNull(this.tableProofData.kenmeiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkenmeiNull() {
                this[this.tableProofData.kenmeiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshimokuNull() {
                return this.IsNull(this.tableProofData.himokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethimokuNull() {
                this[this.tableProofData.himokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontentsNull() {
                return this.IsNull(this.tableProofData.contentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontentsNull() {
                this[this.tableProofData.contentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontents1Null() {
                return this.IsNull(this.tableProofData.contents1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontents1Null() {
                this[this.tableProofData.contents1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontents2Null() {
                return this.IsNull(this.tableProofData.contents2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontents2Null() {
                this[this.tableProofData.contents2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontents3Null() {
                return this.IsNull(this.tableProofData.contents3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontents3Null() {
                this[this.tableProofData.contents3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontents4Null() {
                return this.IsNull(this.tableProofData.contents4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontents4Null() {
                this[this.tableProofData.contents4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskngkNull() {
                return this.IsNull(this.tableProofData.kngkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkngkNull() {
                this[this.tableProofData.kngkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaxNull() {
                return this.IsNull(this.tableProofData.taxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaxNull() {
                this[this.tableProofData.taxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskngkJNull() {
                return this.IsNull(this.tableProofData.kngkJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkngkJNull() {
                this[this.tableProofData.kngkJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaxJNull() {
                return this.IsNull(this.tableProofData.taxJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaxJNull() {
                this[this.tableProofData.taxJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbushoNull() {
                return this.IsNull(this.tableProofData.bushoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbushoNull() {
                this[this.tableProofData.bushoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstjyutNoNull() {
                return this.IsNull(this.tableProofData.tjyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettjyutNoNull() {
                this[this.tableProofData.tjyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstouflgNull() {
                return this.IsNull(this.tableProofData.touflgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettouflgNull() {
                this[this.tableProofData.touflgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstjymeiNoNull() {
                return this.IsNull(this.tableProofData.tjymeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettjymeiNoNull() {
                this[this.tableProofData.tjymeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsturmeiNoNull() {
                return this.IsNull(this.tableProofData.turmeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetturmeiNoNull() {
                this[this.tableProofData.turmeiNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportDataRowChangeEvent : global::System.EventArgs {
            
            private ReportDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportDataRowChangeEvent(ReportDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProofDataRowChangeEvent : global::System.EventArgs {
            
            private ProofDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProofDataRowChangeEvent(ProofDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProofDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591