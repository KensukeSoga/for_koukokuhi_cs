//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3625
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Common.KKHSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Common")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Common : global::System.Data.DataSet {
        
        private CodeMasterDataTable tableCodeMaster;
        
        private SystemCommonDataTable tableSystemCommon;
        
        private RcmnMeu29CCDataTable tableRcmnMeu29CC;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Common() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Common(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CodeMaster"] != null)) {
                    base.Tables.Add(new CodeMasterDataTable(ds.Tables["CodeMaster"]));
                }
                if ((ds.Tables["SystemCommon"] != null)) {
                    base.Tables.Add(new SystemCommonDataTable(ds.Tables["SystemCommon"]));
                }
                if ((ds.Tables["RcmnMeu29CC"] != null)) {
                    base.Tables.Add(new RcmnMeu29CCDataTable(ds.Tables["RcmnMeu29CC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CodeMasterDataTable CodeMaster {
            get {
                return this.tableCodeMaster;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SystemCommonDataTable SystemCommon {
            get {
                return this.tableSystemCommon;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RcmnMeu29CCDataTable RcmnMeu29CC {
            get {
                return this.tableRcmnMeu29CC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Common cln = ((Common)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CodeMaster"] != null)) {
                    base.Tables.Add(new CodeMasterDataTable(ds.Tables["CodeMaster"]));
                }
                if ((ds.Tables["SystemCommon"] != null)) {
                    base.Tables.Add(new SystemCommonDataTable(ds.Tables["SystemCommon"]));
                }
                if ((ds.Tables["RcmnMeu29CC"] != null)) {
                    base.Tables.Add(new RcmnMeu29CCDataTable(ds.Tables["RcmnMeu29CC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCodeMaster = ((CodeMasterDataTable)(base.Tables["CodeMaster"]));
            if ((initTable == true)) {
                if ((this.tableCodeMaster != null)) {
                    this.tableCodeMaster.InitVars();
                }
            }
            this.tableSystemCommon = ((SystemCommonDataTable)(base.Tables["SystemCommon"]));
            if ((initTable == true)) {
                if ((this.tableSystemCommon != null)) {
                    this.tableSystemCommon.InitVars();
                }
            }
            this.tableRcmnMeu29CC = ((RcmnMeu29CCDataTable)(base.Tables["RcmnMeu29CC"]));
            if ((initTable == true)) {
                if ((this.tableRcmnMeu29CC != null)) {
                    this.tableRcmnMeu29CC.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Common";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Common.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCodeMaster = new CodeMasterDataTable();
            base.Tables.Add(this.tableCodeMaster);
            this.tableSystemCommon = new SystemCommonDataTable();
            base.Tables.Add(this.tableSystemCommon);
            this.tableRcmnMeu29CC = new RcmnMeu29CCDataTable();
            base.Tables.Add(this.tableRcmnMeu29CC);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCodeMaster() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSystemCommon() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRcmnMeu29CC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Common ds = new Common();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CodeMasterRowChangeEventHandler(object sender, CodeMasterRowChangeEvent e);
        
        public delegate void SystemCommonRowChangeEventHandler(object sender, SystemCommonRowChangeEvent e);
        
        public delegate void RcmnMeu29CCRowChangeEventHandler(object sender, RcmnMeu29CCRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CodeMasterDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSyubetsu;
            
            private global::System.Data.DataColumn columnKeyCode;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnField1;
            
            private global::System.Data.DataColumn columnField2;
            
            private global::System.Data.DataColumn columnField3;
            
            private global::System.Data.DataColumn columnField4;
            
            private global::System.Data.DataColumn columnField5;
            
            private global::System.Data.DataColumn columnField6;
            
            private global::System.Data.DataColumn columnField7;
            
            private global::System.Data.DataColumn columnField8;
            
            private global::System.Data.DataColumn columnIntegerValue1;
            
            private global::System.Data.DataColumn columnIntegerValue2;
            
            private global::System.Data.DataColumn columnIntegerValue3;
            
            private global::System.Data.DataColumn columnIntegerValue4;
            
            private global::System.Data.DataColumn columnIntegerValue5;
            
            private global::System.Data.DataColumn columnIntegerValue6;
            
            private global::System.Data.DataColumn columnIntegerValue7;
            
            private global::System.Data.DataColumn columnIntegerValue8;
            
            private global::System.Data.DataColumn columnFloatValue;
            
            private global::System.Data.DataColumn columnOrderNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodeMasterDataTable() {
                this.TableName = "CodeMaster";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CodeMasterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CodeMasterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SyubetsuColumn {
                get {
                    return this.columnSyubetsu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeyCodeColumn {
                get {
                    return this.columnKeyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field1Column {
                get {
                    return this.columnField1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field2Column {
                get {
                    return this.columnField2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field3Column {
                get {
                    return this.columnField3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field4Column {
                get {
                    return this.columnField4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field5Column {
                get {
                    return this.columnField5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field6Column {
                get {
                    return this.columnField6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field7Column {
                get {
                    return this.columnField7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field8Column {
                get {
                    return this.columnField8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntegerValue1Column {
                get {
                    return this.columnIntegerValue1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntegerValue2Column {
                get {
                    return this.columnIntegerValue2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntegerValue3Column {
                get {
                    return this.columnIntegerValue3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntegerValue4Column {
                get {
                    return this.columnIntegerValue4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntegerValue5Column {
                get {
                    return this.columnIntegerValue5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntegerValue6Column {
                get {
                    return this.columnIntegerValue6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntegerValue7Column {
                get {
                    return this.columnIntegerValue7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntegerValue8Column {
                get {
                    return this.columnIntegerValue8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FloatValueColumn {
                get {
                    return this.columnFloatValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNoColumn {
                get {
                    return this.columnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodeMasterRow this[int index] {
                get {
                    return ((CodeMasterRow)(this.Rows[index]));
                }
            }
            
            public event CodeMasterRowChangeEventHandler CodeMasterRowChanging;
            
            public event CodeMasterRowChangeEventHandler CodeMasterRowChanged;
            
            public event CodeMasterRowChangeEventHandler CodeMasterRowDeleting;
            
            public event CodeMasterRowChangeEventHandler CodeMasterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCodeMasterRow(CodeMasterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodeMasterRow AddCodeMasterRow(
                        string Syubetsu, 
                        string KeyCode, 
                        string Name, 
                        string Field1, 
                        string Field2, 
                        string Field3, 
                        string Field4, 
                        string Field5, 
                        string Field6, 
                        string Field7, 
                        string Field8, 
                        long IntegerValue1, 
                        long IntegerValue2, 
                        long IntegerValue3, 
                        long IntegerValue4, 
                        long IntegerValue5, 
                        long IntegerValue6, 
                        long IntegerValue7, 
                        long IntegerValue8, 
                        decimal FloatValue, 
                        int OrderNo) {
                CodeMasterRow rowCodeMasterRow = ((CodeMasterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Syubetsu,
                        KeyCode,
                        Name,
                        Field1,
                        Field2,
                        Field3,
                        Field4,
                        Field5,
                        Field6,
                        Field7,
                        Field8,
                        IntegerValue1,
                        IntegerValue2,
                        IntegerValue3,
                        IntegerValue4,
                        IntegerValue5,
                        IntegerValue6,
                        IntegerValue7,
                        IntegerValue8,
                        FloatValue,
                        OrderNo};
                rowCodeMasterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCodeMasterRow);
                return rowCodeMasterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodeMasterRow FindBySyubetsuKeyCode(string Syubetsu, string KeyCode) {
                return ((CodeMasterRow)(this.Rows.Find(new object[] {
                            Syubetsu,
                            KeyCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CodeMasterDataTable cln = ((CodeMasterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CodeMasterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSyubetsu = base.Columns["Syubetsu"];
                this.columnKeyCode = base.Columns["KeyCode"];
                this.columnName = base.Columns["Name"];
                this.columnField1 = base.Columns["Field1"];
                this.columnField2 = base.Columns["Field2"];
                this.columnField3 = base.Columns["Field3"];
                this.columnField4 = base.Columns["Field4"];
                this.columnField5 = base.Columns["Field5"];
                this.columnField6 = base.Columns["Field6"];
                this.columnField7 = base.Columns["Field7"];
                this.columnField8 = base.Columns["Field8"];
                this.columnIntegerValue1 = base.Columns["IntegerValue1"];
                this.columnIntegerValue2 = base.Columns["IntegerValue2"];
                this.columnIntegerValue3 = base.Columns["IntegerValue3"];
                this.columnIntegerValue4 = base.Columns["IntegerValue4"];
                this.columnIntegerValue5 = base.Columns["IntegerValue5"];
                this.columnIntegerValue6 = base.Columns["IntegerValue6"];
                this.columnIntegerValue7 = base.Columns["IntegerValue7"];
                this.columnIntegerValue8 = base.Columns["IntegerValue8"];
                this.columnFloatValue = base.Columns["FloatValue"];
                this.columnOrderNo = base.Columns["OrderNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSyubetsu = new global::System.Data.DataColumn("Syubetsu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSyubetsu);
                this.columnKeyCode = new global::System.Data.DataColumn("KeyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnField1 = new global::System.Data.DataColumn("Field1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField1);
                this.columnField2 = new global::System.Data.DataColumn("Field2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField2);
                this.columnField3 = new global::System.Data.DataColumn("Field3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField3);
                this.columnField4 = new global::System.Data.DataColumn("Field4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField4);
                this.columnField5 = new global::System.Data.DataColumn("Field5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField5);
                this.columnField6 = new global::System.Data.DataColumn("Field6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField6);
                this.columnField7 = new global::System.Data.DataColumn("Field7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField7);
                this.columnField8 = new global::System.Data.DataColumn("Field8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField8);
                this.columnIntegerValue1 = new global::System.Data.DataColumn("IntegerValue1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntegerValue1);
                this.columnIntegerValue2 = new global::System.Data.DataColumn("IntegerValue2", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntegerValue2);
                this.columnIntegerValue3 = new global::System.Data.DataColumn("IntegerValue3", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntegerValue3);
                this.columnIntegerValue4 = new global::System.Data.DataColumn("IntegerValue4", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntegerValue4);
                this.columnIntegerValue5 = new global::System.Data.DataColumn("IntegerValue5", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntegerValue5);
                this.columnIntegerValue6 = new global::System.Data.DataColumn("IntegerValue6", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntegerValue6);
                this.columnIntegerValue7 = new global::System.Data.DataColumn("IntegerValue7", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntegerValue7);
                this.columnIntegerValue8 = new global::System.Data.DataColumn("IntegerValue8", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntegerValue8);
                this.columnFloatValue = new global::System.Data.DataColumn("FloatValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloatValue);
                this.columnOrderNo = new global::System.Data.DataColumn("OrderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint11", new global::System.Data.DataColumn[] {
                                this.columnSyubetsu,
                                this.columnKeyCode}, true));
                this.columnSyubetsu.AllowDBNull = false;
                this.columnKeyCode.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodeMasterRow NewCodeMasterRow() {
                return ((CodeMasterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CodeMasterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CodeMasterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CodeMasterRowChanged != null)) {
                    this.CodeMasterRowChanged(this, new CodeMasterRowChangeEvent(((CodeMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CodeMasterRowChanging != null)) {
                    this.CodeMasterRowChanging(this, new CodeMasterRowChangeEvent(((CodeMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CodeMasterRowDeleted != null)) {
                    this.CodeMasterRowDeleted(this, new CodeMasterRowChangeEvent(((CodeMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CodeMasterRowDeleting != null)) {
                    this.CodeMasterRowDeleting(this, new CodeMasterRowChangeEvent(((CodeMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCodeMasterRow(CodeMasterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Common ds = new Common();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CodeMasterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SystemCommonDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntrkTimStmp;
            
            private global::System.Data.DataColumn columntrkPl;
            
            private global::System.Data.DataColumn columntrkTnt;
            
            private global::System.Data.DataColumn columnupdTimStmp;
            
            private global::System.Data.DataColumn columnupdaPl;
            
            private global::System.Data.DataColumn columnupdTnt;
            
            private global::System.Data.DataColumn columnegCd;
            
            private global::System.Data.DataColumn columntksKgyCd;
            
            private global::System.Data.DataColumn columntksBmnSeqNo;
            
            private global::System.Data.DataColumn columntksTntSeqNo;
            
            private global::System.Data.DataColumn columnsybt;
            
            private global::System.Data.DataColumn columnfield1;
            
            private global::System.Data.DataColumn columnfield2;
            
            private global::System.Data.DataColumn columnfield3;
            
            private global::System.Data.DataColumn columnfield4;
            
            private global::System.Data.DataColumn columnfield5;
            
            private global::System.Data.DataColumn columnfield6;
            
            private global::System.Data.DataColumn columnfield7;
            
            private global::System.Data.DataColumn columnfield8;
            
            private global::System.Data.DataColumn columnfield9;
            
            private global::System.Data.DataColumn columnfield10;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemCommonDataTable() {
                this.TableName = "SystemCommon";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SystemCommonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SystemCommonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trkTimStmpColumn {
                get {
                    return this.columntrkTimStmp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trkPlColumn {
                get {
                    return this.columntrkPl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trkTntColumn {
                get {
                    return this.columntrkTnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updTimStmpColumn {
                get {
                    return this.columnupdTimStmp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updaPlColumn {
                get {
                    return this.columnupdaPl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updTntColumn {
                get {
                    return this.columnupdTnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn egCdColumn {
                get {
                    return this.columnegCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tksKgyCdColumn {
                get {
                    return this.columntksKgyCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tksBmnSeqNoColumn {
                get {
                    return this.columntksBmnSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tksTntSeqNoColumn {
                get {
                    return this.columntksTntSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sybtColumn {
                get {
                    return this.columnsybt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field1Column {
                get {
                    return this.columnfield1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field2Column {
                get {
                    return this.columnfield2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field3Column {
                get {
                    return this.columnfield3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field4Column {
                get {
                    return this.columnfield4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field5Column {
                get {
                    return this.columnfield5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field6Column {
                get {
                    return this.columnfield6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field7Column {
                get {
                    return this.columnfield7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field8Column {
                get {
                    return this.columnfield8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field9Column {
                get {
                    return this.columnfield9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn field10Column {
                get {
                    return this.columnfield10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemCommonRow this[int index] {
                get {
                    return ((SystemCommonRow)(this.Rows[index]));
                }
            }
            
            public event SystemCommonRowChangeEventHandler SystemCommonRowChanging;
            
            public event SystemCommonRowChangeEventHandler SystemCommonRowChanged;
            
            public event SystemCommonRowChangeEventHandler SystemCommonRowDeleting;
            
            public event SystemCommonRowChangeEventHandler SystemCommonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSystemCommonRow(SystemCommonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemCommonRow AddSystemCommonRow(
                        string trkTimStmp, 
                        string trkPl, 
                        string trkTnt, 
                        string updTimStmp, 
                        string updaPl, 
                        string updTnt, 
                        string egCd, 
                        string tksKgyCd, 
                        string tksBmnSeqNo, 
                        string tksTntSeqNo, 
                        string sybt, 
                        string field1, 
                        string field2, 
                        string field3, 
                        string field4, 
                        string field5, 
                        string field6, 
                        string field7, 
                        string field8, 
                        string field9, 
                        string field10) {
                SystemCommonRow rowSystemCommonRow = ((SystemCommonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        trkTimStmp,
                        trkPl,
                        trkTnt,
                        updTimStmp,
                        updaPl,
                        updTnt,
                        egCd,
                        tksKgyCd,
                        tksBmnSeqNo,
                        tksTntSeqNo,
                        sybt,
                        field1,
                        field2,
                        field3,
                        field4,
                        field5,
                        field6,
                        field7,
                        field8,
                        field9,
                        field10};
                rowSystemCommonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSystemCommonRow);
                return rowSystemCommonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SystemCommonDataTable cln = ((SystemCommonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SystemCommonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntrkTimStmp = base.Columns["trkTimStmp"];
                this.columntrkPl = base.Columns["trkPl"];
                this.columntrkTnt = base.Columns["trkTnt"];
                this.columnupdTimStmp = base.Columns["updTimStmp"];
                this.columnupdaPl = base.Columns["updaPl"];
                this.columnupdTnt = base.Columns["updTnt"];
                this.columnegCd = base.Columns["egCd"];
                this.columntksKgyCd = base.Columns["tksKgyCd"];
                this.columntksBmnSeqNo = base.Columns["tksBmnSeqNo"];
                this.columntksTntSeqNo = base.Columns["tksTntSeqNo"];
                this.columnsybt = base.Columns["sybt"];
                this.columnfield1 = base.Columns["field1"];
                this.columnfield2 = base.Columns["field2"];
                this.columnfield3 = base.Columns["field3"];
                this.columnfield4 = base.Columns["field4"];
                this.columnfield5 = base.Columns["field5"];
                this.columnfield6 = base.Columns["field6"];
                this.columnfield7 = base.Columns["field7"];
                this.columnfield8 = base.Columns["field8"];
                this.columnfield9 = base.Columns["field9"];
                this.columnfield10 = base.Columns["field10"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntrkTimStmp = new global::System.Data.DataColumn("trkTimStmp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrkTimStmp);
                this.columntrkPl = new global::System.Data.DataColumn("trkPl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrkPl);
                this.columntrkTnt = new global::System.Data.DataColumn("trkTnt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrkTnt);
                this.columnupdTimStmp = new global::System.Data.DataColumn("updTimStmp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdTimStmp);
                this.columnupdaPl = new global::System.Data.DataColumn("updaPl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdaPl);
                this.columnupdTnt = new global::System.Data.DataColumn("updTnt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdTnt);
                this.columnegCd = new global::System.Data.DataColumn("egCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnegCd);
                this.columntksKgyCd = new global::System.Data.DataColumn("tksKgyCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntksKgyCd);
                this.columntksBmnSeqNo = new global::System.Data.DataColumn("tksBmnSeqNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntksBmnSeqNo);
                this.columntksTntSeqNo = new global::System.Data.DataColumn("tksTntSeqNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntksTntSeqNo);
                this.columnsybt = new global::System.Data.DataColumn("sybt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsybt);
                this.columnfield1 = new global::System.Data.DataColumn("field1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield1);
                this.columnfield2 = new global::System.Data.DataColumn("field2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield2);
                this.columnfield3 = new global::System.Data.DataColumn("field3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield3);
                this.columnfield4 = new global::System.Data.DataColumn("field4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield4);
                this.columnfield5 = new global::System.Data.DataColumn("field5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield5);
                this.columnfield6 = new global::System.Data.DataColumn("field6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield6);
                this.columnfield7 = new global::System.Data.DataColumn("field7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield7);
                this.columnfield8 = new global::System.Data.DataColumn("field8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield8);
                this.columnfield9 = new global::System.Data.DataColumn("field9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield9);
                this.columnfield10 = new global::System.Data.DataColumn("field10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfield10);
                this.columnsybt.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemCommonRow NewSystemCommonRow() {
                return ((SystemCommonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SystemCommonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SystemCommonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SystemCommonRowChanged != null)) {
                    this.SystemCommonRowChanged(this, new SystemCommonRowChangeEvent(((SystemCommonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SystemCommonRowChanging != null)) {
                    this.SystemCommonRowChanging(this, new SystemCommonRowChangeEvent(((SystemCommonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SystemCommonRowDeleted != null)) {
                    this.SystemCommonRowDeleted(this, new SystemCommonRowChangeEvent(((SystemCommonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SystemCommonRowDeleting != null)) {
                    this.SystemCommonRowDeleting(this, new SystemCommonRowChangeEvent(((SystemCommonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSystemCommonRow(SystemCommonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Common ds = new Common();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SystemCommonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RcmnMeu29CCDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnkyCdKnd;
            
            private global::System.Data.DataColumn columnkyCd;
            
            private global::System.Data.DataColumn columnhkYmd;
            
            private global::System.Data.DataColumn columnhaisYmd;
            
            private global::System.Data.DataColumn columnnaiyKn;
            
            private global::System.Data.DataColumn columnnaiyJ;
            
            private global::System.Data.DataColumn columnyobi1;
            
            private global::System.Data.DataColumn columnhosok;
            
            private global::System.Data.DataColumn columnyobi2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcmnMeu29CCDataTable() {
                this.TableName = "RcmnMeu29CC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RcmnMeu29CCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RcmnMeu29CCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kyCdKndColumn {
                get {
                    return this.columnkyCdKnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kyCdColumn {
                get {
                    return this.columnkyCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hkYmdColumn {
                get {
                    return this.columnhkYmd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn haisYmdColumn {
                get {
                    return this.columnhaisYmd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn naiyKnColumn {
                get {
                    return this.columnnaiyKn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn naiyJColumn {
                get {
                    return this.columnnaiyJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yobi1Column {
                get {
                    return this.columnyobi1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hosokColumn {
                get {
                    return this.columnhosok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yobi2Column {
                get {
                    return this.columnyobi2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcmnMeu29CCRow this[int index] {
                get {
                    return ((RcmnMeu29CCRow)(this.Rows[index]));
                }
            }
            
            public event RcmnMeu29CCRowChangeEventHandler RcmnMeu29CCRowChanging;
            
            public event RcmnMeu29CCRowChangeEventHandler RcmnMeu29CCRowChanged;
            
            public event RcmnMeu29CCRowChangeEventHandler RcmnMeu29CCRowDeleting;
            
            public event RcmnMeu29CCRowChangeEventHandler RcmnMeu29CCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRcmnMeu29CCRow(RcmnMeu29CCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcmnMeu29CCRow AddRcmnMeu29CCRow(string kyCdKnd, string kyCd, string hkYmd, string haisYmd, string naiyKn, string naiyJ, string yobi1, string hosok, string yobi2) {
                RcmnMeu29CCRow rowRcmnMeu29CCRow = ((RcmnMeu29CCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        kyCdKnd,
                        kyCd,
                        hkYmd,
                        haisYmd,
                        naiyKn,
                        naiyJ,
                        yobi1,
                        hosok,
                        yobi2};
                rowRcmnMeu29CCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRcmnMeu29CCRow);
                return rowRcmnMeu29CCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RcmnMeu29CCDataTable cln = ((RcmnMeu29CCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RcmnMeu29CCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkyCdKnd = base.Columns["kyCdKnd"];
                this.columnkyCd = base.Columns["kyCd"];
                this.columnhkYmd = base.Columns["hkYmd"];
                this.columnhaisYmd = base.Columns["haisYmd"];
                this.columnnaiyKn = base.Columns["naiyKn"];
                this.columnnaiyJ = base.Columns["naiyJ"];
                this.columnyobi1 = base.Columns["yobi1"];
                this.columnhosok = base.Columns["hosok"];
                this.columnyobi2 = base.Columns["yobi2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkyCdKnd = new global::System.Data.DataColumn("kyCdKnd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkyCdKnd);
                this.columnkyCd = new global::System.Data.DataColumn("kyCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkyCd);
                this.columnhkYmd = new global::System.Data.DataColumn("hkYmd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhkYmd);
                this.columnhaisYmd = new global::System.Data.DataColumn("haisYmd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhaisYmd);
                this.columnnaiyKn = new global::System.Data.DataColumn("naiyKn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnaiyKn);
                this.columnnaiyJ = new global::System.Data.DataColumn("naiyJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnaiyJ);
                this.columnyobi1 = new global::System.Data.DataColumn("yobi1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyobi1);
                this.columnhosok = new global::System.Data.DataColumn("hosok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhosok);
                this.columnyobi2 = new global::System.Data.DataColumn("yobi2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyobi2);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcmnMeu29CCRow NewRcmnMeu29CCRow() {
                return ((RcmnMeu29CCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RcmnMeu29CCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RcmnMeu29CCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RcmnMeu29CCRowChanged != null)) {
                    this.RcmnMeu29CCRowChanged(this, new RcmnMeu29CCRowChangeEvent(((RcmnMeu29CCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RcmnMeu29CCRowChanging != null)) {
                    this.RcmnMeu29CCRowChanging(this, new RcmnMeu29CCRowChangeEvent(((RcmnMeu29CCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RcmnMeu29CCRowDeleted != null)) {
                    this.RcmnMeu29CCRowDeleted(this, new RcmnMeu29CCRowChangeEvent(((RcmnMeu29CCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RcmnMeu29CCRowDeleting != null)) {
                    this.RcmnMeu29CCRowDeleting(this, new RcmnMeu29CCRowChangeEvent(((RcmnMeu29CCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRcmnMeu29CCRow(RcmnMeu29CCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Common ds = new Common();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RcmnMeu29CCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CodeMasterRow : global::System.Data.DataRow {
            
            private CodeMasterDataTable tableCodeMaster;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CodeMasterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCodeMaster = ((CodeMasterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Syubetsu {
                get {
                    return ((string)(this[this.tableCodeMaster.SyubetsuColumn]));
                }
                set {
                    this[this.tableCodeMaster.SyubetsuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KeyCode {
                get {
                    return ((string)(this[this.tableCodeMaster.KeyCodeColumn]));
                }
                set {
                    this[this.tableCodeMaster.KeyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableCodeMaster.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'Name\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Field1 {
                get {
                    try {
                        return ((string)(this[this.tableCodeMaster.Field1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'Field1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.Field1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Field2 {
                get {
                    try {
                        return ((string)(this[this.tableCodeMaster.Field2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'Field2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.Field2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Field3 {
                get {
                    try {
                        return ((string)(this[this.tableCodeMaster.Field3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'Field3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.Field3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Field4 {
                get {
                    try {
                        return ((string)(this[this.tableCodeMaster.Field4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'Field4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.Field4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Field5 {
                get {
                    try {
                        return ((string)(this[this.tableCodeMaster.Field5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'Field5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.Field5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Field6 {
                get {
                    try {
                        return ((string)(this[this.tableCodeMaster.Field6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'Field6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.Field6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Field7 {
                get {
                    try {
                        return ((string)(this[this.tableCodeMaster.Field7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'Field7\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.Field7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Field8 {
                get {
                    try {
                        return ((string)(this[this.tableCodeMaster.Field8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'Field8\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.Field8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IntegerValue1 {
                get {
                    try {
                        return ((long)(this[this.tableCodeMaster.IntegerValue1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'IntegerValue1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.IntegerValue1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IntegerValue2 {
                get {
                    try {
                        return ((long)(this[this.tableCodeMaster.IntegerValue2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'IntegerValue2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.IntegerValue2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IntegerValue3 {
                get {
                    try {
                        return ((long)(this[this.tableCodeMaster.IntegerValue3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'IntegerValue3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.IntegerValue3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IntegerValue4 {
                get {
                    try {
                        return ((long)(this[this.tableCodeMaster.IntegerValue4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'IntegerValue4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.IntegerValue4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IntegerValue5 {
                get {
                    try {
                        return ((long)(this[this.tableCodeMaster.IntegerValue5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'IntegerValue5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.IntegerValue5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IntegerValue6 {
                get {
                    try {
                        return ((long)(this[this.tableCodeMaster.IntegerValue6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'IntegerValue6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.IntegerValue6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IntegerValue7 {
                get {
                    try {
                        return ((long)(this[this.tableCodeMaster.IntegerValue7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'IntegerValue7\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.IntegerValue7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IntegerValue8 {
                get {
                    try {
                        return ((long)(this[this.tableCodeMaster.IntegerValue8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'IntegerValue8\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.IntegerValue8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FloatValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCodeMaster.FloatValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'FloatValue\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.FloatValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrderNo {
                get {
                    try {
                        return ((int)(this[this.tableCodeMaster.OrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CodeMaster\' にある列 \'OrderNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCodeMaster.OrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableCodeMaster.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableCodeMaster.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField1Null() {
                return this.IsNull(this.tableCodeMaster.Field1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField1Null() {
                this[this.tableCodeMaster.Field1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField2Null() {
                return this.IsNull(this.tableCodeMaster.Field2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField2Null() {
                this[this.tableCodeMaster.Field2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField3Null() {
                return this.IsNull(this.tableCodeMaster.Field3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField3Null() {
                this[this.tableCodeMaster.Field3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField4Null() {
                return this.IsNull(this.tableCodeMaster.Field4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField4Null() {
                this[this.tableCodeMaster.Field4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField5Null() {
                return this.IsNull(this.tableCodeMaster.Field5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField5Null() {
                this[this.tableCodeMaster.Field5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField6Null() {
                return this.IsNull(this.tableCodeMaster.Field6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField6Null() {
                this[this.tableCodeMaster.Field6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField7Null() {
                return this.IsNull(this.tableCodeMaster.Field7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField7Null() {
                this[this.tableCodeMaster.Field7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField8Null() {
                return this.IsNull(this.tableCodeMaster.Field8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField8Null() {
                this[this.tableCodeMaster.Field8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntegerValue1Null() {
                return this.IsNull(this.tableCodeMaster.IntegerValue1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntegerValue1Null() {
                this[this.tableCodeMaster.IntegerValue1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntegerValue2Null() {
                return this.IsNull(this.tableCodeMaster.IntegerValue2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntegerValue2Null() {
                this[this.tableCodeMaster.IntegerValue2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntegerValue3Null() {
                return this.IsNull(this.tableCodeMaster.IntegerValue3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntegerValue3Null() {
                this[this.tableCodeMaster.IntegerValue3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntegerValue4Null() {
                return this.IsNull(this.tableCodeMaster.IntegerValue4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntegerValue4Null() {
                this[this.tableCodeMaster.IntegerValue4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntegerValue5Null() {
                return this.IsNull(this.tableCodeMaster.IntegerValue5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntegerValue5Null() {
                this[this.tableCodeMaster.IntegerValue5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntegerValue6Null() {
                return this.IsNull(this.tableCodeMaster.IntegerValue6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntegerValue6Null() {
                this[this.tableCodeMaster.IntegerValue6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntegerValue7Null() {
                return this.IsNull(this.tableCodeMaster.IntegerValue7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntegerValue7Null() {
                this[this.tableCodeMaster.IntegerValue7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntegerValue8Null() {
                return this.IsNull(this.tableCodeMaster.IntegerValue8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntegerValue8Null() {
                this[this.tableCodeMaster.IntegerValue8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFloatValueNull() {
                return this.IsNull(this.tableCodeMaster.FloatValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFloatValueNull() {
                this[this.tableCodeMaster.FloatValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderNoNull() {
                return this.IsNull(this.tableCodeMaster.OrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderNoNull() {
                this[this.tableCodeMaster.OrderNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SystemCommonRow : global::System.Data.DataRow {
            
            private SystemCommonDataTable tableSystemCommon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SystemCommonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSystemCommon = ((SystemCommonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string trkTimStmp {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.trkTimStmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'trkTimStmp\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.trkTimStmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string trkPl {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.trkPlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'trkPl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.trkPlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string trkTnt {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.trkTntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'trkTnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.trkTntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string updTimStmp {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.updTimStmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'updTimStmp\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.updTimStmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string updaPl {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.updaPlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'updaPl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.updaPlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string updTnt {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.updTntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'updTnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.updTntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string egCd {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.egCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'egCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.egCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tksKgyCd {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.tksKgyCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'tksKgyCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.tksKgyCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tksBmnSeqNo {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.tksBmnSeqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'tksBmnSeqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.tksBmnSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tksTntSeqNo {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.tksTntSeqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'tksTntSeqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.tksTntSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sybt {
                get {
                    return ((string)(this[this.tableSystemCommon.sybtColumn]));
                }
                set {
                    this[this.tableSystemCommon.sybtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field1 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field2 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field3 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field4 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field5 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field6 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field7 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field7\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field8 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field8\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field9 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field9\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string field10 {
                get {
                    try {
                        return ((string)(this[this.tableSystemCommon.field10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SystemCommon\' にある列 \'field10\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSystemCommon.field10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrkTimStmpNull() {
                return this.IsNull(this.tableSystemCommon.trkTimStmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrkTimStmpNull() {
                this[this.tableSystemCommon.trkTimStmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrkPlNull() {
                return this.IsNull(this.tableSystemCommon.trkPlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrkPlNull() {
                this[this.tableSystemCommon.trkPlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrkTntNull() {
                return this.IsNull(this.tableSystemCommon.trkTntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrkTntNull() {
                this[this.tableSystemCommon.trkTntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdTimStmpNull() {
                return this.IsNull(this.tableSystemCommon.updTimStmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdTimStmpNull() {
                this[this.tableSystemCommon.updTimStmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdaPlNull() {
                return this.IsNull(this.tableSystemCommon.updaPlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdaPlNull() {
                this[this.tableSystemCommon.updaPlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdTntNull() {
                return this.IsNull(this.tableSystemCommon.updTntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdTntNull() {
                this[this.tableSystemCommon.updTntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsegCdNull() {
                return this.IsNull(this.tableSystemCommon.egCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetegCdNull() {
                this[this.tableSystemCommon.egCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstksKgyCdNull() {
                return this.IsNull(this.tableSystemCommon.tksKgyCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettksKgyCdNull() {
                this[this.tableSystemCommon.tksKgyCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstksBmnSeqNoNull() {
                return this.IsNull(this.tableSystemCommon.tksBmnSeqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettksBmnSeqNoNull() {
                this[this.tableSystemCommon.tksBmnSeqNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstksTntSeqNoNull() {
                return this.IsNull(this.tableSystemCommon.tksTntSeqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettksTntSeqNoNull() {
                this[this.tableSystemCommon.tksTntSeqNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield1Null() {
                return this.IsNull(this.tableSystemCommon.field1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield1Null() {
                this[this.tableSystemCommon.field1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield2Null() {
                return this.IsNull(this.tableSystemCommon.field2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield2Null() {
                this[this.tableSystemCommon.field2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield3Null() {
                return this.IsNull(this.tableSystemCommon.field3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield3Null() {
                this[this.tableSystemCommon.field3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield4Null() {
                return this.IsNull(this.tableSystemCommon.field4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield4Null() {
                this[this.tableSystemCommon.field4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield5Null() {
                return this.IsNull(this.tableSystemCommon.field5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield5Null() {
                this[this.tableSystemCommon.field5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield6Null() {
                return this.IsNull(this.tableSystemCommon.field6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield6Null() {
                this[this.tableSystemCommon.field6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield7Null() {
                return this.IsNull(this.tableSystemCommon.field7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield7Null() {
                this[this.tableSystemCommon.field7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield8Null() {
                return this.IsNull(this.tableSystemCommon.field8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield8Null() {
                this[this.tableSystemCommon.field8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield9Null() {
                return this.IsNull(this.tableSystemCommon.field9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield9Null() {
                this[this.tableSystemCommon.field9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfield10Null() {
                return this.IsNull(this.tableSystemCommon.field10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfield10Null() {
                this[this.tableSystemCommon.field10Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RcmnMeu29CCRow : global::System.Data.DataRow {
            
            private RcmnMeu29CCDataTable tableRcmnMeu29CC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RcmnMeu29CCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRcmnMeu29CC = ((RcmnMeu29CCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kyCdKnd {
                get {
                    try {
                        return ((string)(this[this.tableRcmnMeu29CC.kyCdKndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcmnMeu29CC\' にある列 \'kyCdKnd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcmnMeu29CC.kyCdKndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kyCd {
                get {
                    try {
                        return ((string)(this[this.tableRcmnMeu29CC.kyCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcmnMeu29CC\' にある列 \'kyCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcmnMeu29CC.kyCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hkYmd {
                get {
                    try {
                        return ((string)(this[this.tableRcmnMeu29CC.hkYmdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcmnMeu29CC\' にある列 \'hkYmd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcmnMeu29CC.hkYmdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string haisYmd {
                get {
                    try {
                        return ((string)(this[this.tableRcmnMeu29CC.haisYmdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcmnMeu29CC\' にある列 \'haisYmd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcmnMeu29CC.haisYmdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string naiyKn {
                get {
                    try {
                        return ((string)(this[this.tableRcmnMeu29CC.naiyKnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcmnMeu29CC\' にある列 \'naiyKn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcmnMeu29CC.naiyKnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string naiyJ {
                get {
                    try {
                        return ((string)(this[this.tableRcmnMeu29CC.naiyJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcmnMeu29CC\' にある列 \'naiyJ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcmnMeu29CC.naiyJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yobi1 {
                get {
                    try {
                        return ((string)(this[this.tableRcmnMeu29CC.yobi1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcmnMeu29CC\' にある列 \'yobi1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcmnMeu29CC.yobi1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hosok {
                get {
                    try {
                        return ((string)(this[this.tableRcmnMeu29CC.hosokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcmnMeu29CC\' にある列 \'hosok\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcmnMeu29CC.hosokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yobi2 {
                get {
                    try {
                        return ((string)(this[this.tableRcmnMeu29CC.yobi2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcmnMeu29CC\' にある列 \'yobi2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcmnMeu29CC.yobi2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskyCdKndNull() {
                return this.IsNull(this.tableRcmnMeu29CC.kyCdKndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkyCdKndNull() {
                this[this.tableRcmnMeu29CC.kyCdKndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskyCdNull() {
                return this.IsNull(this.tableRcmnMeu29CC.kyCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkyCdNull() {
                this[this.tableRcmnMeu29CC.kyCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshkYmdNull() {
                return this.IsNull(this.tableRcmnMeu29CC.hkYmdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethkYmdNull() {
                this[this.tableRcmnMeu29CC.hkYmdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshaisYmdNull() {
                return this.IsNull(this.tableRcmnMeu29CC.haisYmdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethaisYmdNull() {
                this[this.tableRcmnMeu29CC.haisYmdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnaiyKnNull() {
                return this.IsNull(this.tableRcmnMeu29CC.naiyKnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnaiyKnNull() {
                this[this.tableRcmnMeu29CC.naiyKnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnaiyJNull() {
                return this.IsNull(this.tableRcmnMeu29CC.naiyJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnaiyJNull() {
                this[this.tableRcmnMeu29CC.naiyJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isyobi1Null() {
                return this.IsNull(this.tableRcmnMeu29CC.yobi1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setyobi1Null() {
                this[this.tableRcmnMeu29CC.yobi1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshosokNull() {
                return this.IsNull(this.tableRcmnMeu29CC.hosokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethosokNull() {
                this[this.tableRcmnMeu29CC.hosokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isyobi2Null() {
                return this.IsNull(this.tableRcmnMeu29CC.yobi2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setyobi2Null() {
                this[this.tableRcmnMeu29CC.yobi2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CodeMasterRowChangeEvent : global::System.EventArgs {
            
            private CodeMasterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodeMasterRowChangeEvent(CodeMasterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodeMasterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SystemCommonRowChangeEvent : global::System.EventArgs {
            
            private SystemCommonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemCommonRowChangeEvent(SystemCommonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemCommonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RcmnMeu29CCRowChangeEvent : global::System.EventArgs {
            
            private RcmnMeu29CCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcmnMeu29CCRowChangeEvent(RcmnMeu29CCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcmnMeu29CCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591