using System;
using System.Collections.Generic;
using System.Text;

namespace Isid.KKH.Common.KKHUtility
{
    /// <summary>
    /// 文字列変換クラス 
    /// </summary>
    public class KKHStrConv
    {
        // ****** マッピング表定義 ****** 
        // ※indexは必ず合わせる事。 
        // 全角文字列定義 
        // ****************************** 
        static readonly String[] zen = new String[]{"ア","イ","ウ","エ","オ",
                                                    "カ","キ","ク","ケ","コ",
                                                    "サ","シ","ス","セ","ソ",
                                                    "タ","チ","ツ","テ","ト",
                                                    "ナ","ニ","ヌ","ネ","ノ",
                                                    "ハ","ヒ","フ","ヘ","ホ",
                                                    "マ","ミ","ム","メ","モ",
                                                    "ラ","リ","ル","レ","ロ",
                                                    "ヤ","ユ","ヨ",
                                                    "ワ","ヲ","ン",
                                                    "ガ","ギ","グ","ゲ","ゴ",
                                                    "ザ","ジ","ズ","ゼ","ゾ",
                                                    "ダ","ヂ","ヅ","デ","ド",
                                                    "バ","ビ","ブ","ベ","ボ",
                                                    "パ","ピ","プ","ペ","ポ",
                                                    "ッ",
                                                    "ァ","ィ","ゥ","ェ","ォ",
                                                    "ャ","ュ","ョ",
                                                    "Ａ","Ｂ","Ｃ","Ｄ","Ｅ",
                                                    "Ｆ","Ｇ","Ｈ","Ｉ","Ｊ",
                                                    "Ｋ","Ｌ","Ｍ","Ｎ","Ｏ",
                                                    "Ｐ","Ｑ","Ｒ","Ｓ","Ｔ",
                                                    "Ｕ","Ｖ","Ｗ","Ｘ","Ｙ",
                                                    "Ｚ",
                                                    "ａ","ｂ","ｃ","ｄ","ｅ",
                                                    "ｆ","ｇ","ｈ","ｉ","ｊ",
                                                    "ｋ","ｌ","ｍ","ｎ","ｏ",
                                                    "ｐ","ｑ","ｒ","ｓ","ｔ",
                                                    "ｕ","ｖ","ｗ","ｘ","ｙ",
                                                    "ｚ",
                                                    "ー","＃","＄","％","＆",
                                                    "’","！","？","；","，",
                                                    "：","＜","＞","／","＊",
                                                    "（","）","＝","～","＠",
                                                    "－","＋","｛","｝","　",
                                                    "｜","「","」","￥","＾",
                                                    "。","・","［","］",
                                                    "１","２","３","４","５",
                                                    "６","７","８","９","０"};

        // 半角文字列定義
        static readonly String[] han = new String[]{"ｱ","ｲ","ｳ","ｴ","ｵ",
                                                    "ｶ","ｷ","ｸ","ｹ","ｺ",
                                                    "ｻ","ｼ","ｽ","ｾ","ｿ",
                                                    "ﾀ","ﾁ","ﾂ","ﾃ","ﾄ",
                                                    "ﾅ","ﾆ","ﾇ","ﾈ","ﾉ",
                                                    "ﾊ","ﾋ","ﾌ","ﾍ","ﾎ",
                                                    "ﾏ","ﾐ","ﾑ","ﾒ","ﾓ",
                                                    "ﾗ","ﾘ","ﾙ","ﾚ","ﾛ",
                                                    "ﾔ","ﾕ","ﾖ","ﾜ","ｦ",
                                                    "ﾝ",
                                                    "ｶﾞ","ｷﾞ","ｸﾞ","ｹﾞ","ｺﾞ",
                                                    "ｻﾞ","ｼﾞ","ｽﾞ","ｾﾞ","ｿﾞ",
                                                    "ﾀﾞ","ﾁﾞ","ﾂﾞ","ﾃﾞ","ﾄﾞ",
                                                    "ﾊﾞ","ﾋﾞ","ﾌﾞ","ﾍﾞ","ﾎﾞ",
                                                    "ﾊﾟ","ﾋﾟ","ﾌﾟ","ﾍﾟ","ﾎﾟ",
                                                    "ｯ",
                                                    "ｧ","ｨ","ｩ","ｪ","ｫ",
                                                    "ｬ","ｭ","ｮ",
                                                    "A","B","C","D","E",
                                                    "F","G","H","I","J",
                                                    "K","L","M","N","O",
                                                    "P","Q","R","S","T",
                                                    "U","V","W","X","Y",
                                                    "Z",
                                                    "a","b","c","d","e",
                                                    "f","g","h","i","j",
                                                    "k","l","m","n","o",
                                                    "p","q","r","s","t",
                                                    "u","v","w","x","y",
                                                    "z",
                                                    "ｰ","#","$","%","&",
                                                    "'","!","?",";",",",
                                                    ":","<",">","/","*",
                                                    "(",")","=","~","@",
                                                    "-","+","{","}"," ",
                                                    "|","｢","｣","\\","^",
                                                    "｡","･","[","]",
                                                    "1","2","3","4","5",
                                                    "6","7","8","9","0"};

        /// <summary>
        /// 全角⇒半角変換  
        /// </summary>
        /// <param name="value"></param>
        /// <returns>value</returns>
        public static String toNarrow(String value)
        {
            // **************************** 
            // 置換

            // **************************** 
            for (int i = 0; i < zen.Length; i++)
            {
                value = value.Replace(zen[i], han[i]);
            }
            // 返却 
            return value;
        }

        /// <summary>
        /// 半角⇒全角変換  
        /// </summary>
        /// <param name="value"></param>
        /// <returns>value</returns>
        public static String toWide(String value)
        {
            // **************************** 
            // 置換

            // **************************** 
            for (int i = 0; i < zen.Length; i++)
            {
                value = value.Replace(han[i], zen[i]);
            }
            // 返却 
            return value;
        }

        /// <summary>
        /// 大文字⇒小文字変換 
        /// </summary>
        /// <param name="val"></param>
        /// <returns>val</returns>
        public static String toLower(String val)
        {
            // ****** マッピング表定義 ****** 
            // ※indexは必ず合わせる事。 
            // 大文字列定義 
            // ****************************** 
            String[] upper = new String[]{
                                        "A","B","C","D","E",
                                        "F","G","H","I","J",
                                        "K","L","M","N","O",
                                        "P","Q","R","S","T",
                                        "U","V","W","X","Y",
                                        "Z"
                                        };

            // 半角文字列定義
            String[] lower = new String[]{
                                        "a","b","c","d","e",
                                        "f","g","h","i","j",
                                        "k","l","m","n","o",
                                        "p","q","r","s","t",
                                        "u","v","w","x","y",
                                        "z"
                                        };
            // **************************** 
            // 置換
            // **************************** 
            for (int i = 0; i < upper.Length; i++)
            {
                val = val.Replace(upper[i], lower[i]);
            }
            // 返却 
            return val;
        }
    }
}
