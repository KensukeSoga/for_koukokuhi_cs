//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.5485
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Epson.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepDsEpson")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepDsEpson : global::System.Data.DataSet {
        
        private ReportSubMissionDataTable tableReportSubMission;
        
        private ReportSeikyuPlanDataTable tableReportSeikyuPlan;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepDsEpson() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepDsEpson(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ReportSubMission"] != null)) {
                    base.Tables.Add(new ReportSubMissionDataTable(ds.Tables["ReportSubMission"]));
                }
                if ((ds.Tables["ReportSeikyuPlan"] != null)) {
                    base.Tables.Add(new ReportSeikyuPlanDataTable(ds.Tables["ReportSeikyuPlan"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportSubMissionDataTable ReportSubMission {
            get {
                return this.tableReportSubMission;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReportSeikyuPlanDataTable ReportSeikyuPlan {
            get {
                return this.tableReportSeikyuPlan;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepDsEpson cln = ((RepDsEpson)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ReportSubMission"] != null)) {
                    base.Tables.Add(new ReportSubMissionDataTable(ds.Tables["ReportSubMission"]));
                }
                if ((ds.Tables["ReportSeikyuPlan"] != null)) {
                    base.Tables.Add(new ReportSeikyuPlanDataTable(ds.Tables["ReportSeikyuPlan"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableReportSubMission = ((ReportSubMissionDataTable)(base.Tables["ReportSubMission"]));
            if ((initTable == true)) {
                if ((this.tableReportSubMission != null)) {
                    this.tableReportSubMission.InitVars();
                }
            }
            this.tableReportSeikyuPlan = ((ReportSeikyuPlanDataTable)(base.Tables["ReportSeikyuPlan"]));
            if ((initTable == true)) {
                if ((this.tableReportSeikyuPlan != null)) {
                    this.tableReportSeikyuPlan.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepDsEpson";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RepDsEpson.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableReportSubMission = new ReportSubMissionDataTable();
            base.Tables.Add(this.tableReportSubMission);
            this.tableReportSeikyuPlan = new ReportSeikyuPlanDataTable();
            base.Tables.Add(this.tableReportSeikyuPlan);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportSubMission() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReportSeikyuPlan() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepDsEpson ds = new RepDsEpson();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ReportSubMissionRowChangeEventHandler(object sender, ReportSubMissionRowChangeEvent e);
        
        public delegate void ReportSeikyuPlanRowChangeEventHandler(object sender, ReportSeikyuPlanRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportSubMissionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columndenpyoNo;
            
            private global::System.Data.DataColumn columnmeisaiNo;
            
            private global::System.Data.DataColumn columnkaishCd;
            
            private global::System.Data.DataColumn columnkihyoBmnCd;
            
            private global::System.Data.DataColumn columnshireskCd;
            
            private global::System.Data.DataColumn columntukaCd;
            
            private global::System.Data.DataColumn columnhatskCd;
            
            private global::System.Data.DataColumn columnkeijyobi;
            
            private global::System.Data.DataColumn columnrate;
            
            private global::System.Data.DataColumn columnseiNo;
            
            private global::System.Data.DataColumn columnzeiKbn;
            
            private global::System.Data.DataColumn columntoriSikiCd;
            
            private global::System.Data.DataColumn columngenkaCent;
            
            private global::System.Data.DataColumn columnriekiCent;
            
            private global::System.Data.DataColumn columnsashizuNo;
            
            private global::System.Data.DataColumn columnseguSashiNo;
            
            private global::System.Data.DataColumn columntoriSaki;
            
            private global::System.Data.DataColumn columntoriNaiyo;
            
            private global::System.Data.DataColumn columntoriGak;
            
            private global::System.Data.DataColumn columnsyohiGak;
            
            private global::System.Data.DataColumn columnkansanGak;
            
            private global::System.Data.DataColumn columnkansanSGak;
            
            private global::System.Data.DataColumn columnkeshikomiKey;
            
            private global::System.Data.DataColumn columnhinmokuCd;
            
            private global::System.Data.DataColumn columnhinmokuMei;
            
            private global::System.Data.DataColumn columnkataban;
            
            private global::System.Data.DataColumn columnsuryo;
            
            private global::System.Data.DataColumn columntani;
            
            private global::System.Data.DataColumn columntoriTank;
            
            private global::System.Data.DataColumn columnkansanTank;
            
            private global::System.Data.DataColumn columnpoNo;
            
            private global::System.Data.DataColumn columnkeiyakuNo;
            
            private global::System.Data.DataColumn columnringiNo;
            
            private global::System.Data.DataColumn columngensenToriGak;
            
            private global::System.Data.DataColumn columngensenZeiRitu;
            
            private global::System.Data.DataColumn columnmaeTaisyoKbn;
            
            private global::System.Data.DataColumn columnjyokenKakuKbn;
            
            private global::System.Data.DataColumn columnkikanFrom;
            
            private global::System.Data.DataColumn columnkikanTo;
            
            private global::System.Data.DataColumn columnfurikaeJyoken;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSubMissionDataTable() {
                this.TableName = "ReportSubMission";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportSubMissionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportSubMissionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn denpyoNoColumn {
                get {
                    return this.columndenpyoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn meisaiNoColumn {
                get {
                    return this.columnmeisaiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kaishCdColumn {
                get {
                    return this.columnkaishCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kihyoBmnCdColumn {
                get {
                    return this.columnkihyoBmnCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shireskCdColumn {
                get {
                    return this.columnshireskCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tukaCdColumn {
                get {
                    return this.columntukaCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hatskCdColumn {
                get {
                    return this.columnhatskCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keijyobiColumn {
                get {
                    return this.columnkeijyobi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rateColumn {
                get {
                    return this.columnrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seiNoColumn {
                get {
                    return this.columnseiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zeiKbnColumn {
                get {
                    return this.columnzeiKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn toriSikiCdColumn {
                get {
                    return this.columntoriSikiCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genkaCentColumn {
                get {
                    return this.columngenkaCent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn riekiCentColumn {
                get {
                    return this.columnriekiCent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sashizuNoColumn {
                get {
                    return this.columnsashizuNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seguSashiNoColumn {
                get {
                    return this.columnseguSashiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn toriSakiColumn {
                get {
                    return this.columntoriSaki;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn toriNaiyoColumn {
                get {
                    return this.columntoriNaiyo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn toriGakColumn {
                get {
                    return this.columntoriGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn syohiGakColumn {
                get {
                    return this.columnsyohiGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kansanGakColumn {
                get {
                    return this.columnkansanGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kansanSGakColumn {
                get {
                    return this.columnkansanSGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keshikomiKeyColumn {
                get {
                    return this.columnkeshikomiKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hinmokuCdColumn {
                get {
                    return this.columnhinmokuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hinmokuMeiColumn {
                get {
                    return this.columnhinmokuMei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn katabanColumn {
                get {
                    return this.columnkataban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn suryoColumn {
                get {
                    return this.columnsuryo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn taniColumn {
                get {
                    return this.columntani;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn toriTankColumn {
                get {
                    return this.columntoriTank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kansanTankColumn {
                get {
                    return this.columnkansanTank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn poNoColumn {
                get {
                    return this.columnpoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keiyakuNoColumn {
                get {
                    return this.columnkeiyakuNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ringiNoColumn {
                get {
                    return this.columnringiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gensenToriGakColumn {
                get {
                    return this.columngensenToriGak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gensenZeiRituColumn {
                get {
                    return this.columngensenZeiRitu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maeTaisyoKbnColumn {
                get {
                    return this.columnmaeTaisyoKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyokenKakuKbnColumn {
                get {
                    return this.columnjyokenKakuKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kikanFromColumn {
                get {
                    return this.columnkikanFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kikanToColumn {
                get {
                    return this.columnkikanTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn furikaeJyokenColumn {
                get {
                    return this.columnfurikaeJyoken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSubMissionRow this[int index] {
                get {
                    return ((ReportSubMissionRow)(this.Rows[index]));
                }
            }
            
            public event ReportSubMissionRowChangeEventHandler ReportSubMissionRowChanging;
            
            public event ReportSubMissionRowChangeEventHandler ReportSubMissionRowChanged;
            
            public event ReportSubMissionRowChangeEventHandler ReportSubMissionRowDeleting;
            
            public event ReportSubMissionRowChangeEventHandler ReportSubMissionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportSubMissionRow(ReportSubMissionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSubMissionRow AddReportSubMissionRow(
                        string denpyoNo, 
                        string meisaiNo, 
                        string kaishCd, 
                        string kihyoBmnCd, 
                        string shireskCd, 
                        string tukaCd, 
                        string hatskCd, 
                        string keijyobi, 
                        string rate, 
                        string seiNo, 
                        string zeiKbn, 
                        string toriSikiCd, 
                        string genkaCent, 
                        string riekiCent, 
                        string sashizuNo, 
                        string seguSashiNo, 
                        string toriSaki, 
                        string toriNaiyo, 
                        string toriGak, 
                        string syohiGak, 
                        string kansanGak, 
                        string kansanSGak, 
                        string keshikomiKey, 
                        string hinmokuCd, 
                        string hinmokuMei, 
                        string kataban, 
                        string suryo, 
                        string tani, 
                        string toriTank, 
                        string kansanTank, 
                        string poNo, 
                        string keiyakuNo, 
                        string ringiNo, 
                        string gensenToriGak, 
                        string gensenZeiRitu, 
                        string maeTaisyoKbn, 
                        string jyokenKakuKbn, 
                        string kikanFrom, 
                        string kikanTo, 
                        string furikaeJyoken) {
                ReportSubMissionRow rowReportSubMissionRow = ((ReportSubMissionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        denpyoNo,
                        meisaiNo,
                        kaishCd,
                        kihyoBmnCd,
                        shireskCd,
                        tukaCd,
                        hatskCd,
                        keijyobi,
                        rate,
                        seiNo,
                        zeiKbn,
                        toriSikiCd,
                        genkaCent,
                        riekiCent,
                        sashizuNo,
                        seguSashiNo,
                        toriSaki,
                        toriNaiyo,
                        toriGak,
                        syohiGak,
                        kansanGak,
                        kansanSGak,
                        keshikomiKey,
                        hinmokuCd,
                        hinmokuMei,
                        kataban,
                        suryo,
                        tani,
                        toriTank,
                        kansanTank,
                        poNo,
                        keiyakuNo,
                        ringiNo,
                        gensenToriGak,
                        gensenZeiRitu,
                        maeTaisyoKbn,
                        jyokenKakuKbn,
                        kikanFrom,
                        kikanTo,
                        furikaeJyoken};
                rowReportSubMissionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportSubMissionRow);
                return rowReportSubMissionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportSubMissionDataTable cln = ((ReportSubMissionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportSubMissionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndenpyoNo = base.Columns["denpyoNo"];
                this.columnmeisaiNo = base.Columns["meisaiNo"];
                this.columnkaishCd = base.Columns["kaishCd"];
                this.columnkihyoBmnCd = base.Columns["kihyoBmnCd"];
                this.columnshireskCd = base.Columns["shireskCd"];
                this.columntukaCd = base.Columns["tukaCd"];
                this.columnhatskCd = base.Columns["hatskCd"];
                this.columnkeijyobi = base.Columns["keijyobi"];
                this.columnrate = base.Columns["rate"];
                this.columnseiNo = base.Columns["seiNo"];
                this.columnzeiKbn = base.Columns["zeiKbn"];
                this.columntoriSikiCd = base.Columns["toriSikiCd"];
                this.columngenkaCent = base.Columns["genkaCent"];
                this.columnriekiCent = base.Columns["riekiCent"];
                this.columnsashizuNo = base.Columns["sashizuNo"];
                this.columnseguSashiNo = base.Columns["seguSashiNo"];
                this.columntoriSaki = base.Columns["toriSaki"];
                this.columntoriNaiyo = base.Columns["toriNaiyo"];
                this.columntoriGak = base.Columns["toriGak"];
                this.columnsyohiGak = base.Columns["syohiGak"];
                this.columnkansanGak = base.Columns["kansanGak"];
                this.columnkansanSGak = base.Columns["kansanSGak"];
                this.columnkeshikomiKey = base.Columns["keshikomiKey"];
                this.columnhinmokuCd = base.Columns["hinmokuCd"];
                this.columnhinmokuMei = base.Columns["hinmokuMei"];
                this.columnkataban = base.Columns["kataban"];
                this.columnsuryo = base.Columns["suryo"];
                this.columntani = base.Columns["tani"];
                this.columntoriTank = base.Columns["toriTank"];
                this.columnkansanTank = base.Columns["kansanTank"];
                this.columnpoNo = base.Columns["poNo"];
                this.columnkeiyakuNo = base.Columns["keiyakuNo"];
                this.columnringiNo = base.Columns["ringiNo"];
                this.columngensenToriGak = base.Columns["gensenToriGak"];
                this.columngensenZeiRitu = base.Columns["gensenZeiRitu"];
                this.columnmaeTaisyoKbn = base.Columns["maeTaisyoKbn"];
                this.columnjyokenKakuKbn = base.Columns["jyokenKakuKbn"];
                this.columnkikanFrom = base.Columns["kikanFrom"];
                this.columnkikanTo = base.Columns["kikanTo"];
                this.columnfurikaeJyoken = base.Columns["furikaeJyoken"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndenpyoNo = new global::System.Data.DataColumn("denpyoNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndenpyoNo);
                this.columnmeisaiNo = new global::System.Data.DataColumn("meisaiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeisaiNo);
                this.columnkaishCd = new global::System.Data.DataColumn("kaishCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkaishCd);
                this.columnkihyoBmnCd = new global::System.Data.DataColumn("kihyoBmnCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkihyoBmnCd);
                this.columnshireskCd = new global::System.Data.DataColumn("shireskCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshireskCd);
                this.columntukaCd = new global::System.Data.DataColumn("tukaCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntukaCd);
                this.columnhatskCd = new global::System.Data.DataColumn("hatskCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhatskCd);
                this.columnkeijyobi = new global::System.Data.DataColumn("keijyobi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeijyobi);
                this.columnrate = new global::System.Data.DataColumn("rate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrate);
                this.columnseiNo = new global::System.Data.DataColumn("seiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseiNo);
                this.columnzeiKbn = new global::System.Data.DataColumn("zeiKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzeiKbn);
                this.columntoriSikiCd = new global::System.Data.DataColumn("toriSikiCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntoriSikiCd);
                this.columngenkaCent = new global::System.Data.DataColumn("genkaCent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngenkaCent);
                this.columnriekiCent = new global::System.Data.DataColumn("riekiCent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnriekiCent);
                this.columnsashizuNo = new global::System.Data.DataColumn("sashizuNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsashizuNo);
                this.columnseguSashiNo = new global::System.Data.DataColumn("seguSashiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseguSashiNo);
                this.columntoriSaki = new global::System.Data.DataColumn("toriSaki", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntoriSaki);
                this.columntoriNaiyo = new global::System.Data.DataColumn("toriNaiyo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntoriNaiyo);
                this.columntoriGak = new global::System.Data.DataColumn("toriGak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntoriGak);
                this.columnsyohiGak = new global::System.Data.DataColumn("syohiGak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsyohiGak);
                this.columnkansanGak = new global::System.Data.DataColumn("kansanGak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkansanGak);
                this.columnkansanSGak = new global::System.Data.DataColumn("kansanSGak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkansanSGak);
                this.columnkeshikomiKey = new global::System.Data.DataColumn("keshikomiKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeshikomiKey);
                this.columnhinmokuCd = new global::System.Data.DataColumn("hinmokuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhinmokuCd);
                this.columnhinmokuMei = new global::System.Data.DataColumn("hinmokuMei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhinmokuMei);
                this.columnkataban = new global::System.Data.DataColumn("kataban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkataban);
                this.columnsuryo = new global::System.Data.DataColumn("suryo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuryo);
                this.columntani = new global::System.Data.DataColumn("tani", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntani);
                this.columntoriTank = new global::System.Data.DataColumn("toriTank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntoriTank);
                this.columnkansanTank = new global::System.Data.DataColumn("kansanTank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkansanTank);
                this.columnpoNo = new global::System.Data.DataColumn("poNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoNo);
                this.columnkeiyakuNo = new global::System.Data.DataColumn("keiyakuNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeiyakuNo);
                this.columnringiNo = new global::System.Data.DataColumn("ringiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnringiNo);
                this.columngensenToriGak = new global::System.Data.DataColumn("gensenToriGak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngensenToriGak);
                this.columngensenZeiRitu = new global::System.Data.DataColumn("gensenZeiRitu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngensenZeiRitu);
                this.columnmaeTaisyoKbn = new global::System.Data.DataColumn("maeTaisyoKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaeTaisyoKbn);
                this.columnjyokenKakuKbn = new global::System.Data.DataColumn("jyokenKakuKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyokenKakuKbn);
                this.columnkikanFrom = new global::System.Data.DataColumn("kikanFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkikanFrom);
                this.columnkikanTo = new global::System.Data.DataColumn("kikanTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkikanTo);
                this.columnfurikaeJyoken = new global::System.Data.DataColumn("furikaeJyoken", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfurikaeJyoken);
                this.columndenpyoNo.Caption = "伝票登録NO";
                this.columnmeisaiNo.Caption = "明細NO";
                this.columnkaishCd.Caption = "会社CD";
                this.columnkihyoBmnCd.Caption = "起票部門CD";
                this.columnshireskCd.Caption = "仕入先コード";
                this.columntukaCd.Caption = "通貨CD";
                this.columnhatskCd.Caption = "発注先部門CD";
                this.columnkeijyobi.Caption = "計上日";
                this.columnrate.Caption = "換算レート";
                this.columnseiNo.Caption = "取引先請求No";
                this.columnzeiKbn.Caption = "内外税区分";
                this.columntoriSikiCd.Caption = "取引識別コード";
                this.columngenkaCent.Caption = "原価センタ";
                this.columnriekiCent.Caption = "利益センタ";
                this.columnsashizuNo.Caption = "指図No";
                this.columnseguSashiNo.Caption = "セグメント指図番号";
                this.columntoriSaki.Caption = "取引先（立替先）";
                this.columntoriNaiyo.Caption = "具体的取引内容";
                this.columntoriGak.Caption = "取引金額";
                this.columnsyohiGak.Caption = "消費税額";
                this.columnkansanGak.Caption = "換算金額";
                this.columnkansanSGak.Caption = "換算消費税額";
                this.columnkeshikomiKey.Caption = "消込Key";
                this.columnhinmokuCd.Caption = "品目コード";
                this.columnhinmokuMei.Caption = "品目名称";
                this.columnkataban.Caption = "型番";
                this.columnsuryo.Caption = "数量";
                this.columntani.Caption = "単位";
                this.columntoriTank.Caption = "取引単価";
                this.columnkansanTank.Caption = "換算単価";
                this.columnpoNo.Caption = "P/ONo";
                this.columnkeiyakuNo.Caption = "契約No";
                this.columnringiNo.Caption = "稟議書No";
                this.columngensenToriGak.Caption = "源泉税取引金額";
                this.columngensenZeiRitu.Caption = "源泉税率";
                this.columnmaeTaisyoKbn.Caption = "前払対象区分";
                this.columnjyokenKakuKbn.Caption = "条件確定区分";
                this.columnkikanFrom.Caption = "期間（From）";
                this.columnkikanTo.Caption = "期間（To）";
                this.columnfurikaeJyoken.Caption = "振替条件";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSubMissionRow NewReportSubMissionRow() {
                return ((ReportSubMissionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportSubMissionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportSubMissionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportSubMissionRowChanged != null)) {
                    this.ReportSubMissionRowChanged(this, new ReportSubMissionRowChangeEvent(((ReportSubMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportSubMissionRowChanging != null)) {
                    this.ReportSubMissionRowChanging(this, new ReportSubMissionRowChangeEvent(((ReportSubMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportSubMissionRowDeleted != null)) {
                    this.ReportSubMissionRowDeleted(this, new ReportSubMissionRowChangeEvent(((ReportSubMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportSubMissionRowDeleting != null)) {
                    this.ReportSubMissionRowDeleting(this, new ReportSubMissionRowChangeEvent(((ReportSubMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportSubMissionRow(ReportSubMissionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsEpson ds = new RepDsEpson();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportSubMissionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReportSeikyuPlanDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnname11;
            
            private global::System.Data.DataColumn columnname3;
            
            private global::System.Data.DataColumn columnname10;
            
            private global::System.Data.DataColumn columncode4;
            
            private global::System.Data.DataColumn columnkngk2;
            
            private global::System.Data.DataColumn columnseigak;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSeikyuPlanDataTable() {
                this.TableName = "ReportSeikyuPlan";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportSeikyuPlanDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReportSeikyuPlanDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name11Column {
                get {
                    return this.columnname11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3Column {
                get {
                    return this.columnname3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name10Column {
                get {
                    return this.columnname10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code4Column {
                get {
                    return this.columncode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kngk2Column {
                get {
                    return this.columnkngk2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seigakColumn {
                get {
                    return this.columnseigak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSeikyuPlanRow this[int index] {
                get {
                    return ((ReportSeikyuPlanRow)(this.Rows[index]));
                }
            }
            
            public event ReportSeikyuPlanRowChangeEventHandler ReportSeikyuPlanRowChanging;
            
            public event ReportSeikyuPlanRowChangeEventHandler ReportSeikyuPlanRowChanged;
            
            public event ReportSeikyuPlanRowChangeEventHandler ReportSeikyuPlanRowDeleting;
            
            public event ReportSeikyuPlanRowChangeEventHandler ReportSeikyuPlanRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReportSeikyuPlanRow(ReportSeikyuPlanRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSeikyuPlanRow AddReportSeikyuPlanRow(string name11, string name3, string name10, string code4, string kngk2, string seigak) {
                ReportSeikyuPlanRow rowReportSeikyuPlanRow = ((ReportSeikyuPlanRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        name11,
                        name3,
                        name10,
                        code4,
                        kngk2,
                        seigak};
                rowReportSeikyuPlanRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReportSeikyuPlanRow);
                return rowReportSeikyuPlanRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReportSeikyuPlanDataTable cln = ((ReportSeikyuPlanDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReportSeikyuPlanDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnname11 = base.Columns["name11"];
                this.columnname3 = base.Columns["name3"];
                this.columnname10 = base.Columns["name10"];
                this.columncode4 = base.Columns["code4"];
                this.columnkngk2 = base.Columns["kngk2"];
                this.columnseigak = base.Columns["seigak"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnname11 = new global::System.Data.DataColumn("name11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname11);
                this.columnname3 = new global::System.Data.DataColumn("name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3);
                this.columnname10 = new global::System.Data.DataColumn("name10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname10);
                this.columncode4 = new global::System.Data.DataColumn("code4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode4);
                this.columnkngk2 = new global::System.Data.DataColumn("kngk2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkngk2);
                this.columnseigak = new global::System.Data.DataColumn("seigak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseigak);
                this.columnname11.Caption = "広告件名";
                this.columnname3.Caption = "ご担当";
                this.columnname10.Caption = "件名";
                this.columncode4.Caption = "取引識別コード";
                this.columnkngk2.Caption = "事前";
                this.columnseigak.Caption = "事後";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSeikyuPlanRow NewReportSeikyuPlanRow() {
                return ((ReportSeikyuPlanRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReportSeikyuPlanRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReportSeikyuPlanRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReportSeikyuPlanRowChanged != null)) {
                    this.ReportSeikyuPlanRowChanged(this, new ReportSeikyuPlanRowChangeEvent(((ReportSeikyuPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReportSeikyuPlanRowChanging != null)) {
                    this.ReportSeikyuPlanRowChanging(this, new ReportSeikyuPlanRowChangeEvent(((ReportSeikyuPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReportSeikyuPlanRowDeleted != null)) {
                    this.ReportSeikyuPlanRowDeleted(this, new ReportSeikyuPlanRowChangeEvent(((ReportSeikyuPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReportSeikyuPlanRowDeleting != null)) {
                    this.ReportSeikyuPlanRowDeleting(this, new ReportSeikyuPlanRowChangeEvent(((ReportSeikyuPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReportSeikyuPlanRow(ReportSeikyuPlanRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepDsEpson ds = new RepDsEpson();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReportSeikyuPlanDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportSubMissionRow : global::System.Data.DataRow {
            
            private ReportSubMissionDataTable tableReportSubMission;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportSubMissionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportSubMission = ((ReportSubMissionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string denpyoNo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.denpyoNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'denpyoNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.denpyoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string meisaiNo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.meisaiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'meisaiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.meisaiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kaishCd {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.kaishCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'kaishCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.kaishCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kihyoBmnCd {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.kihyoBmnCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'kihyoBmnCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.kihyoBmnCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shireskCd {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.shireskCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'shireskCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.shireskCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tukaCd {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.tukaCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'tukaCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.tukaCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hatskCd {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.hatskCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'hatskCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.hatskCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keijyobi {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.keijyobiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'keijyobi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.keijyobiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rate {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'rate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seiNo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.seiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'seiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.seiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zeiKbn {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.zeiKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'zeiKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.zeiKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string toriSikiCd {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.toriSikiCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'toriSikiCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.toriSikiCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string genkaCent {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.genkaCentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'genkaCent\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.genkaCentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string riekiCent {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.riekiCentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'riekiCent\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.riekiCentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sashizuNo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.sashizuNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'sashizuNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.sashizuNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seguSashiNo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.seguSashiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'seguSashiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.seguSashiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string toriSaki {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.toriSakiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'toriSaki\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.toriSakiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string toriNaiyo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.toriNaiyoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'toriNaiyo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.toriNaiyoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string toriGak {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.toriGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'toriGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.toriGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string syohiGak {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.syohiGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'syohiGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.syohiGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kansanGak {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.kansanGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'kansanGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.kansanGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kansanSGak {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.kansanSGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'kansanSGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.kansanSGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keshikomiKey {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.keshikomiKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'keshikomiKey\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.keshikomiKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hinmokuCd {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.hinmokuCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'hinmokuCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.hinmokuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hinmokuMei {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.hinmokuMeiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'hinmokuMei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.hinmokuMeiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kataban {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.katabanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'kataban\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.katabanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string suryo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.suryoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'suryo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.suryoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tani {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.taniColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'tani\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.taniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string toriTank {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.toriTankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'toriTank\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.toriTankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kansanTank {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.kansanTankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'kansanTank\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.kansanTankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string poNo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.poNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'poNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.poNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keiyakuNo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.keiyakuNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'keiyakuNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.keiyakuNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ringiNo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.ringiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'ringiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.ringiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gensenToriGak {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.gensenToriGakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'gensenToriGak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.gensenToriGakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gensenZeiRitu {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.gensenZeiRituColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'gensenZeiRitu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.gensenZeiRituColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maeTaisyoKbn {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.maeTaisyoKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'maeTaisyoKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.maeTaisyoKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyokenKakuKbn {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.jyokenKakuKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'jyokenKakuKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.jyokenKakuKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kikanFrom {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.kikanFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'kikanFrom\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.kikanFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kikanTo {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.kikanToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'kikanTo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.kikanToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string furikaeJyoken {
                get {
                    try {
                        return ((string)(this[this.tableReportSubMission.furikaeJyokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSubMission\' にある列 \'furikaeJyoken\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSubMission.furikaeJyokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdenpyoNoNull() {
                return this.IsNull(this.tableReportSubMission.denpyoNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdenpyoNoNull() {
                this[this.tableReportSubMission.denpyoNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmeisaiNoNull() {
                return this.IsNull(this.tableReportSubMission.meisaiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmeisaiNoNull() {
                this[this.tableReportSubMission.meisaiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskaishCdNull() {
                return this.IsNull(this.tableReportSubMission.kaishCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkaishCdNull() {
                this[this.tableReportSubMission.kaishCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskihyoBmnCdNull() {
                return this.IsNull(this.tableReportSubMission.kihyoBmnCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkihyoBmnCdNull() {
                this[this.tableReportSubMission.kihyoBmnCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshireskCdNull() {
                return this.IsNull(this.tableReportSubMission.shireskCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshireskCdNull() {
                this[this.tableReportSubMission.shireskCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstukaCdNull() {
                return this.IsNull(this.tableReportSubMission.tukaCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettukaCdNull() {
                this[this.tableReportSubMission.tukaCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshatskCdNull() {
                return this.IsNull(this.tableReportSubMission.hatskCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethatskCdNull() {
                this[this.tableReportSubMission.hatskCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeijyobiNull() {
                return this.IsNull(this.tableReportSubMission.keijyobiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeijyobiNull() {
                this[this.tableReportSubMission.keijyobiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrateNull() {
                return this.IsNull(this.tableReportSubMission.rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrateNull() {
                this[this.tableReportSubMission.rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseiNoNull() {
                return this.IsNull(this.tableReportSubMission.seiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseiNoNull() {
                this[this.tableReportSubMission.seiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszeiKbnNull() {
                return this.IsNull(this.tableReportSubMission.zeiKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzeiKbnNull() {
                this[this.tableReportSubMission.zeiKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstoriSikiCdNull() {
                return this.IsNull(this.tableReportSubMission.toriSikiCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettoriSikiCdNull() {
                this[this.tableReportSubMission.toriSikiCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenkaCentNull() {
                return this.IsNull(this.tableReportSubMission.genkaCentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenkaCentNull() {
                this[this.tableReportSubMission.genkaCentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsriekiCentNull() {
                return this.IsNull(this.tableReportSubMission.riekiCentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetriekiCentNull() {
                this[this.tableReportSubMission.riekiCentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssashizuNoNull() {
                return this.IsNull(this.tableReportSubMission.sashizuNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsashizuNoNull() {
                this[this.tableReportSubMission.sashizuNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseguSashiNoNull() {
                return this.IsNull(this.tableReportSubMission.seguSashiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseguSashiNoNull() {
                this[this.tableReportSubMission.seguSashiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstoriSakiNull() {
                return this.IsNull(this.tableReportSubMission.toriSakiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettoriSakiNull() {
                this[this.tableReportSubMission.toriSakiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstoriNaiyoNull() {
                return this.IsNull(this.tableReportSubMission.toriNaiyoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettoriNaiyoNull() {
                this[this.tableReportSubMission.toriNaiyoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstoriGakNull() {
                return this.IsNull(this.tableReportSubMission.toriGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettoriGakNull() {
                this[this.tableReportSubMission.toriGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssyohiGakNull() {
                return this.IsNull(this.tableReportSubMission.syohiGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsyohiGakNull() {
                this[this.tableReportSubMission.syohiGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskansanGakNull() {
                return this.IsNull(this.tableReportSubMission.kansanGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkansanGakNull() {
                this[this.tableReportSubMission.kansanGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskansanSGakNull() {
                return this.IsNull(this.tableReportSubMission.kansanSGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkansanSGakNull() {
                this[this.tableReportSubMission.kansanSGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeshikomiKeyNull() {
                return this.IsNull(this.tableReportSubMission.keshikomiKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeshikomiKeyNull() {
                this[this.tableReportSubMission.keshikomiKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshinmokuCdNull() {
                return this.IsNull(this.tableReportSubMission.hinmokuCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethinmokuCdNull() {
                this[this.tableReportSubMission.hinmokuCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshinmokuMeiNull() {
                return this.IsNull(this.tableReportSubMission.hinmokuMeiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethinmokuMeiNull() {
                this[this.tableReportSubMission.hinmokuMeiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskatabanNull() {
                return this.IsNull(this.tableReportSubMission.katabanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkatabanNull() {
                this[this.tableReportSubMission.katabanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssuryoNull() {
                return this.IsNull(this.tableReportSubMission.suryoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsuryoNull() {
                this[this.tableReportSubMission.suryoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaniNull() {
                return this.IsNull(this.tableReportSubMission.taniColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaniNull() {
                this[this.tableReportSubMission.taniColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstoriTankNull() {
                return this.IsNull(this.tableReportSubMission.toriTankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettoriTankNull() {
                this[this.tableReportSubMission.toriTankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskansanTankNull() {
                return this.IsNull(this.tableReportSubMission.kansanTankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkansanTankNull() {
                this[this.tableReportSubMission.kansanTankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspoNoNull() {
                return this.IsNull(this.tableReportSubMission.poNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpoNoNull() {
                this[this.tableReportSubMission.poNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeiyakuNoNull() {
                return this.IsNull(this.tableReportSubMission.keiyakuNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeiyakuNoNull() {
                this[this.tableReportSubMission.keiyakuNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsringiNoNull() {
                return this.IsNull(this.tableReportSubMission.ringiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetringiNoNull() {
                this[this.tableReportSubMission.ringiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgensenToriGakNull() {
                return this.IsNull(this.tableReportSubMission.gensenToriGakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgensenToriGakNull() {
                this[this.tableReportSubMission.gensenToriGakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgensenZeiRituNull() {
                return this.IsNull(this.tableReportSubMission.gensenZeiRituColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgensenZeiRituNull() {
                this[this.tableReportSubMission.gensenZeiRituColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaeTaisyoKbnNull() {
                return this.IsNull(this.tableReportSubMission.maeTaisyoKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaeTaisyoKbnNull() {
                this[this.tableReportSubMission.maeTaisyoKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyokenKakuKbnNull() {
                return this.IsNull(this.tableReportSubMission.jyokenKakuKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyokenKakuKbnNull() {
                this[this.tableReportSubMission.jyokenKakuKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskikanFromNull() {
                return this.IsNull(this.tableReportSubMission.kikanFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkikanFromNull() {
                this[this.tableReportSubMission.kikanFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskikanToNull() {
                return this.IsNull(this.tableReportSubMission.kikanToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkikanToNull() {
                this[this.tableReportSubMission.kikanToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfurikaeJyokenNull() {
                return this.IsNull(this.tableReportSubMission.furikaeJyokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfurikaeJyokenNull() {
                this[this.tableReportSubMission.furikaeJyokenColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReportSeikyuPlanRow : global::System.Data.DataRow {
            
            private ReportSeikyuPlanDataTable tableReportSeikyuPlan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReportSeikyuPlanRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReportSeikyuPlan = ((ReportSeikyuPlanDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name11 {
                get {
                    try {
                        return ((string)(this[this.tableReportSeikyuPlan.name11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSeikyuPlan\' にある列 \'name11\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSeikyuPlan.name11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3 {
                get {
                    try {
                        return ((string)(this[this.tableReportSeikyuPlan.name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSeikyuPlan\' にある列 \'name3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSeikyuPlan.name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name10 {
                get {
                    try {
                        return ((string)(this[this.tableReportSeikyuPlan.name10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSeikyuPlan\' にある列 \'name10\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSeikyuPlan.name10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code4 {
                get {
                    try {
                        return ((string)(this[this.tableReportSeikyuPlan.code4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSeikyuPlan\' にある列 \'code4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSeikyuPlan.code4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kngk2 {
                get {
                    try {
                        return ((string)(this[this.tableReportSeikyuPlan.kngk2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSeikyuPlan\' にある列 \'kngk2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSeikyuPlan.kngk2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seigak {
                get {
                    try {
                        return ((string)(this[this.tableReportSeikyuPlan.seigakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ReportSeikyuPlan\' にある列 \'seigak\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableReportSeikyuPlan.seigakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname11Null() {
                return this.IsNull(this.tableReportSeikyuPlan.name11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname11Null() {
                this[this.tableReportSeikyuPlan.name11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3Null() {
                return this.IsNull(this.tableReportSeikyuPlan.name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3Null() {
                this[this.tableReportSeikyuPlan.name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname10Null() {
                return this.IsNull(this.tableReportSeikyuPlan.name10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname10Null() {
                this[this.tableReportSeikyuPlan.name10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscode4Null() {
                return this.IsNull(this.tableReportSeikyuPlan.code4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcode4Null() {
                this[this.tableReportSeikyuPlan.code4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskngk2Null() {
                return this.IsNull(this.tableReportSeikyuPlan.kngk2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkngk2Null() {
                this[this.tableReportSeikyuPlan.kngk2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseigakNull() {
                return this.IsNull(this.tableReportSeikyuPlan.seigakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseigakNull() {
                this[this.tableReportSeikyuPlan.seigakColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportSubMissionRowChangeEvent : global::System.EventArgs {
            
            private ReportSubMissionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSubMissionRowChangeEvent(ReportSubMissionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSubMissionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReportSeikyuPlanRowChangeEvent : global::System.EventArgs {
            
            private ReportSeikyuPlanRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSeikyuPlanRowChangeEvent(ReportSeikyuPlanRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReportSeikyuPlanRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591