//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3643
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Isid.KKH.Toh.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DetailDSToh")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DetailDSToh : global::System.Data.DataSet {
        
        private KkhDetailDataTable tableKkhDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DetailDSToh() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DetailDSToh(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["KkhDetail"] != null)) {
                    base.Tables.Add(new KkhDetailDataTable(ds.Tables["KkhDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KkhDetailDataTable KkhDetail {
            get {
                return this.tableKkhDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DetailDSToh cln = ((DetailDSToh)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["KkhDetail"] != null)) {
                    base.Tables.Add(new KkhDetailDataTable(ds.Tables["KkhDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableKkhDetail = ((KkhDetailDataTable)(base.Tables["KkhDetail"]));
            if ((initTable == true)) {
                if ((this.tableKkhDetail != null)) {
                    this.tableKkhDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DetailDSToh";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DetailDSToh.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableKkhDetail = new KkhDetailDataTable();
            base.Tables.Add(this.tableKkhDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKkhDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DetailDSToh ds = new DetailDSToh();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void KkhDetailRowChangeEventHandler(object sender, KkhDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KkhDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnkenmei;
            
            private global::System.Data.DataColumn columnbaitaiNm;
            
            private global::System.Data.DataColumn columnryoukin;
            
            private global::System.Data.DataColumn columnshohizei;
            
            private global::System.Data.DataColumn columnspace;
            
            private global::System.Data.DataColumn columnspace2;
            
            private global::System.Data.DataColumn columntanka;
            
            private global::System.Data.DataColumn columnkbn;
            
            private global::System.Data.DataColumn columnkeisaiDt;
            
            private global::System.Data.DataColumn columnbaitaiCd;
            
            private global::System.Data.DataColumn columnjyutNo;
            
            private global::System.Data.DataColumn columnjyMeiNo;
            
            private global::System.Data.DataColumn columnurMeiNo;
            
            private global::System.Data.DataColumn columnkenmeiChgFlg;
            
            private global::System.Data.DataColumn columnnouhinKbn;
            
            private global::System.Data.DataColumn columnwakFlg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailDataTable() {
                this.TableName = "KkhDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KkhDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KkhDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kenmeiColumn {
                get {
                    return this.columnkenmei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn baitaiNmColumn {
                get {
                    return this.columnbaitaiNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ryoukinColumn {
                get {
                    return this.columnryoukin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shohizeiColumn {
                get {
                    return this.columnshohizei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn spaceColumn {
                get {
                    return this.columnspace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn space2Column {
                get {
                    return this.columnspace2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tankaColumn {
                get {
                    return this.columntanka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kbnColumn {
                get {
                    return this.columnkbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keisaiDtColumn {
                get {
                    return this.columnkeisaiDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn baitaiCdColumn {
                get {
                    return this.columnbaitaiCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyutNoColumn {
                get {
                    return this.columnjyutNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyMeiNoColumn {
                get {
                    return this.columnjyMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urMeiNoColumn {
                get {
                    return this.columnurMeiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kenmeiChgFlgColumn {
                get {
                    return this.columnkenmeiChgFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nouhinKbnColumn {
                get {
                    return this.columnnouhinKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wakFlgColumn {
                get {
                    return this.columnwakFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow this[int index] {
                get {
                    return ((KkhDetailRow)(this.Rows[index]));
                }
            }
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowChanging;
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowChanged;
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowDeleting;
            
            public event KkhDetailRowChangeEventHandler KkhDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKkhDetailRow(KkhDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow AddKkhDetailRow(
                        string kenmei, 
                        string baitaiNm, 
                        decimal ryoukin, 
                        decimal shohizei, 
                        string space, 
                        string space2, 
                        decimal tanka, 
                        string kbn, 
                        string keisaiDt, 
                        string baitaiCd, 
                        string jyutNo, 
                        string jyMeiNo, 
                        string urMeiNo, 
                        string kenmeiChgFlg, 
                        string nouhinKbn, 
                        string wakFlg) {
                KkhDetailRow rowKkhDetailRow = ((KkhDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        kenmei,
                        baitaiNm,
                        ryoukin,
                        shohizei,
                        space,
                        space2,
                        tanka,
                        kbn,
                        keisaiDt,
                        baitaiCd,
                        jyutNo,
                        jyMeiNo,
                        urMeiNo,
                        kenmeiChgFlg,
                        nouhinKbn,
                        wakFlg};
                rowKkhDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKkhDetailRow);
                return rowKkhDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KkhDetailDataTable cln = ((KkhDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KkhDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkenmei = base.Columns["kenmei"];
                this.columnbaitaiNm = base.Columns["baitaiNm"];
                this.columnryoukin = base.Columns["ryoukin"];
                this.columnshohizei = base.Columns["shohizei"];
                this.columnspace = base.Columns["space"];
                this.columnspace2 = base.Columns["space2"];
                this.columntanka = base.Columns["tanka"];
                this.columnkbn = base.Columns["kbn"];
                this.columnkeisaiDt = base.Columns["keisaiDt"];
                this.columnbaitaiCd = base.Columns["baitaiCd"];
                this.columnjyutNo = base.Columns["jyutNo"];
                this.columnjyMeiNo = base.Columns["jyMeiNo"];
                this.columnurMeiNo = base.Columns["urMeiNo"];
                this.columnkenmeiChgFlg = base.Columns["kenmeiChgFlg"];
                this.columnnouhinKbn = base.Columns["nouhinKbn"];
                this.columnwakFlg = base.Columns["wakFlg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkenmei = new global::System.Data.DataColumn("kenmei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkenmei);
                this.columnbaitaiNm = new global::System.Data.DataColumn("baitaiNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaitaiNm);
                this.columnryoukin = new global::System.Data.DataColumn("ryoukin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnryoukin);
                this.columnshohizei = new global::System.Data.DataColumn("shohizei", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshohizei);
                this.columnspace = new global::System.Data.DataColumn("space", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspace);
                this.columnspace2 = new global::System.Data.DataColumn("space2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspace2);
                this.columntanka = new global::System.Data.DataColumn("tanka", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntanka);
                this.columnkbn = new global::System.Data.DataColumn("kbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkbn);
                this.columnkeisaiDt = new global::System.Data.DataColumn("keisaiDt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeisaiDt);
                this.columnbaitaiCd = new global::System.Data.DataColumn("baitaiCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaitaiCd);
                this.columnjyutNo = new global::System.Data.DataColumn("jyutNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyutNo);
                this.columnjyMeiNo = new global::System.Data.DataColumn("jyMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyMeiNo);
                this.columnurMeiNo = new global::System.Data.DataColumn("urMeiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurMeiNo);
                this.columnkenmeiChgFlg = new global::System.Data.DataColumn("kenmeiChgFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkenmeiChgFlg);
                this.columnnouhinKbn = new global::System.Data.DataColumn("nouhinKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnouhinKbn);
                this.columnwakFlg = new global::System.Data.DataColumn("wakFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwakFlg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow NewKkhDetailRow() {
                return ((KkhDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KkhDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KkhDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KkhDetailRowChanged != null)) {
                    this.KkhDetailRowChanged(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KkhDetailRowChanging != null)) {
                    this.KkhDetailRowChanging(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KkhDetailRowDeleted != null)) {
                    this.KkhDetailRowDeleted(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KkhDetailRowDeleting != null)) {
                    this.KkhDetailRowDeleting(this, new KkhDetailRowChangeEvent(((KkhDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKkhDetailRow(KkhDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DetailDSToh ds = new DetailDSToh();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KkhDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KkhDetailRow : global::System.Data.DataRow {
            
            private KkhDetailDataTable tableKkhDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KkhDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKkhDetail = ((KkhDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kenmei {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.kenmeiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'kenmei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.kenmeiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string baitaiNm {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.baitaiNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'baitaiNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.baitaiNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ryoukin {
                get {
                    try {
                        return ((decimal)(this[this.tableKkhDetail.ryoukinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'ryoukin\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.ryoukinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal shohizei {
                get {
                    try {
                        return ((decimal)(this[this.tableKkhDetail.shohizeiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'shohizei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.shohizeiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string space {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.spaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'space\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.spaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string space2 {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.space2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'space2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.space2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tanka {
                get {
                    try {
                        return ((decimal)(this[this.tableKkhDetail.tankaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'tanka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.tankaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kbn {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.kbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'kbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.kbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keisaiDt {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.keisaiDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'keisaiDt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.keisaiDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string baitaiCd {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.baitaiCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'baitaiCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.baitaiCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyutNo {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.jyutNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'jyutNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.jyutNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.jyMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'jyMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.jyMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string urMeiNo {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.urMeiNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'urMeiNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.urMeiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kenmeiChgFlg {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.kenmeiChgFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'kenmeiChgFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.kenmeiChgFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nouhinKbn {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.nouhinKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'nouhinKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.nouhinKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wakFlg {
                get {
                    try {
                        return ((string)(this[this.tableKkhDetail.wakFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'KkhDetail\' にある列 \'wakFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableKkhDetail.wakFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskenmeiNull() {
                return this.IsNull(this.tableKkhDetail.kenmeiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkenmeiNull() {
                this[this.tableKkhDetail.kenmeiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbaitaiNmNull() {
                return this.IsNull(this.tableKkhDetail.baitaiNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbaitaiNmNull() {
                this[this.tableKkhDetail.baitaiNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsryoukinNull() {
                return this.IsNull(this.tableKkhDetail.ryoukinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetryoukinNull() {
                this[this.tableKkhDetail.ryoukinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshohizeiNull() {
                return this.IsNull(this.tableKkhDetail.shohizeiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshohizeiNull() {
                this[this.tableKkhDetail.shohizeiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsspaceNull() {
                return this.IsNull(this.tableKkhDetail.spaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetspaceNull() {
                this[this.tableKkhDetail.spaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isspace2Null() {
                return this.IsNull(this.tableKkhDetail.space2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setspace2Null() {
                this[this.tableKkhDetail.space2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstankaNull() {
                return this.IsNull(this.tableKkhDetail.tankaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettankaNull() {
                this[this.tableKkhDetail.tankaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskbnNull() {
                return this.IsNull(this.tableKkhDetail.kbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkbnNull() {
                this[this.tableKkhDetail.kbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskeisaiDtNull() {
                return this.IsNull(this.tableKkhDetail.keisaiDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkeisaiDtNull() {
                this[this.tableKkhDetail.keisaiDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbaitaiCdNull() {
                return this.IsNull(this.tableKkhDetail.baitaiCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbaitaiCdNull() {
                this[this.tableKkhDetail.baitaiCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyutNoNull() {
                return this.IsNull(this.tableKkhDetail.jyutNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyutNoNull() {
                this[this.tableKkhDetail.jyutNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyMeiNoNull() {
                return this.IsNull(this.tableKkhDetail.jyMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyMeiNoNull() {
                this[this.tableKkhDetail.jyMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurMeiNoNull() {
                return this.IsNull(this.tableKkhDetail.urMeiNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturMeiNoNull() {
                this[this.tableKkhDetail.urMeiNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskenmeiChgFlgNull() {
                return this.IsNull(this.tableKkhDetail.kenmeiChgFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkenmeiChgFlgNull() {
                this[this.tableKkhDetail.kenmeiChgFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnouhinKbnNull() {
                return this.IsNull(this.tableKkhDetail.nouhinKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnouhinKbnNull() {
                this[this.tableKkhDetail.nouhinKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswakFlgNull() {
                return this.IsNull(this.tableKkhDetail.wakFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwakFlgNull() {
                this[this.tableKkhDetail.wakFlgColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KkhDetailRowChangeEvent : global::System.EventArgs {
            
            private KkhDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRowChangeEvent(KkhDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KkhDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591